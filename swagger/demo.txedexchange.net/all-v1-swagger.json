{"openapi": "3.0.1", "info": {"title": "All Api", "description": "All Api- v1.0", "version": "v1.0"}, "servers": [{"url": "https://api.demo.txedexchange.net/tenant"}], "paths": {"/tenants/{tenantId}/apiclients/{clientId}/regeneratesecret": {"put": {"tags": ["API Clients"], "summary": "Regenerates an OpenId API Client's secret", "operationId": "RegenerateTenantApiClientSecretAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "clientId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.ApiClient.V1.RegenerateApiClientSecretRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.ApiClient.V1.RegenerateApiClientSecretRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.ApiClient.V1.RegenerateApiClientSecretRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.ApiClient.V1.RegenerateApiClientSecretRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.ApiClient.V1.ApiClientSecretRegeneratedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/apiclients/{clientId}": {"delete": {"tags": ["API Clients"], "summary": "Deletes an OpenId API Client", "operationId": "DeleteTenantApiClientAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "clientId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "204": {"description": "The resource was successfully deleted."}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "get": {"tags": ["API Clients"], "summary": "Retrieves an OpenId API Client", "operationId": "GetTenantApiClientByIdAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "clientId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.ApiClient.V1.ApiClientProfileResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}, "put": {"tags": ["API Clients"], "summary": "Updates an OpenId API Client", "operationId": "UpdateTenantApiClientAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "clientId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.ApiClient.V1.UpdateApiClientRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.ApiClient.V1.UpdateApiClientRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.ApiClient.V1.UpdateApiClientRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.ApiClient.V1.UpdateApiClientRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.ApiClient.V1.ApiClientUpdatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/apiclients": {"get": {"tags": ["API Clients"], "summary": "Retrieves a list of OpenId API Clients associated to this tenant", "operationId": "GetAllTenantApiClientsAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.ApiClient.V1.ApiClientPaginatedItemsResponsePaginatedItemsViewModel"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "post": {"tags": ["API Clients"], "summary": "Creates a new OpenId API Client", "operationId": "CreateTenantApiClientAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.ApiClient.V1.CreateApiClientRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.ApiClient.V1.CreateApiClientRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.ApiClient.V1.CreateApiClientRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.ApiClient.V1.CreateApiClientRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "201": {"description": "The resource was created. The location of the resource is available in the Location header of the response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.ApiClient.V1.ApiClientCreatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/clients/{clientId}/settings": {"get": {"tags": ["Applications / Settings"], "summary": "Retrieves a list of a Tenant's ClientSettings.", "operationId": "GetClientSettingsAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "clientId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.GetAppSettingsResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "post": {"tags": ["Applications / Settings"], "summary": "Creates/updates a Tenant's ClientSettings.", "operationId": "SetClientSettingsAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "clientId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.SetAppSettingsRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.SetAppSettingsRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.SetAppSettingsRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.SetAppSettingsRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.SetAppSettingsResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/clients/{clientId}/settingstypes": {"get": {"tags": ["Applications / Settings"], "summary": "Retrieves a list of ClientSettingsTypes.", "operationId": "GetClientSettingsTypesAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "clientId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.ClientSettingsType.V1.GetClientSettingsTypesResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/applicationtiles": {"get": {"tags": ["Applications / Tiles"], "summary": "Retrieves a list of applications licensed to the user that is currently logged in the context of this tenant", "operationId": "GetTenantApplicationTilesAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 100}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string", "default": "applicationName ASC"}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Platform.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.ApplicationTilesResponseWithUserApplicationLicense"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/applications/{applicationId}": {"get": {"tags": ["Applications"], "summary": "Retrieves an application", "operationId": "GetTenantApplicationProfileByIdAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "applicationId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ApplicationApi.Application.V1.ApplicationProfileResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/applications": {"get": {"tags": ["Applications"], "summary": "Retrieves a list of applications associated to this tenant", "operationId": "GetTenantApplicationsAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string"}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ApplicationApi.Application.V1.ApplicationListResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/analytics/capacities/resume": {"post": {"tags": ["Capacities"], "summary": "Resumes currently suspended capacity", "operationId": "ResumeCapacityAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Capacities.V1.ResumeCapacityRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Capacities.V1.ResumeCapacityRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Capacities.V1.ResumeCapacityRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Capacities.V1.ResumeCapacityRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details."}, "200": {"description": "The requested resource was successfully retrieved."}, "404": {"description": "Not Found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/analytics/capacities/suspend": {"post": {"tags": ["Capacities"], "summary": "Suspends currently active capacity", "operationId": "SuspendCapacityAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Capacities.V1.SuspendCapacityRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Capacities.V1.SuspendCapacityRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Capacities.V1.SuspendCapacityRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Capacities.V1.SuspendCapacityRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details."}, "200": {"description": "The requested resource was successfully retrieved."}, "404": {"description": "Not Found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/analytics/capacities": {"get": {"tags": ["Capacities"], "summary": "Retrieves a list of capacities in Power Bi that the user has access to.", "operationId": "GetAllAnalyticsPowerBiCapacities", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details."}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Capacities.V1.CapacityResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}}}, "post": {"tags": ["Capacities"], "summary": "Assigns the specified group to the specified capacity.", "operationId": "AssignMyGroupToCapacity", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Capacities.V1.AssignCapacityRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Capacities.V1.AssignCapacityRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Capacities.V1.AssignCapacityRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Capacities.V1.AssignCapacityRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details."}, "200": {"description": "The requested resource was successfully retrieved."}, "404": {"description": "Not Found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/validations/collections/{collectionId}/containers/{containerId}": {"delete": {"tags": ["Collections"], "summary": "Deletes a Container.", "operationId": "DeleteContainer", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "collectionId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "containerId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "204": {"description": "The resource was successfully deleted."}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}, "get": {"tags": ["Collections"], "summary": "Retrieves a Container by ID.", "operationId": "GetContainerById", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "collectionId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "containerId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Containers.V1.ContainerDto"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}, "put": {"tags": ["Collections"], "summary": "Updates a Container.", "operationId": "UpdateContainer", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "collectionId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "containerId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Containers.V1.UpdateContainerRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Containers.V1.UpdateContainerRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Containers.V1.UpdateContainerRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Containers.V1.UpdateContainerRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved."}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/validations/collections/{collectionId}/containers": {"get": {"tags": ["Collections"], "summary": "Retrieves a list of Containers.", "operationId": "GetContainers", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "collectionId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string"}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Containers.V1.PaginatedContainers"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "post": {"tags": ["Collections"], "summary": "Creates a Container.", "operationId": "CreateContainer", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "collectionId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Containers.V1.CreateContainerRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Containers.V1.CreateContainerRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Containers.V1.CreateContainerRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Containers.V1.CreateContainerRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "201": {"description": "The resource was created. The location of the resource is available in the Location header of the response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Core.V1.CreatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/validations/collections/{collectionId}/export": {"get": {"tags": ["Collections"], "summary": "Retrieves the JSON representation of a Collection. Useful for exporting into other systems.", "operationId": "GetCollectionJson", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "collectionId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Containers.V1.GetJsonResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/validations/collections/{collectionId}": {"delete": {"tags": ["Collections"], "summary": "Deletes a Collection.", "operationId": "DeleteCollection", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "collectionId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "204": {"description": "The resource was successfully deleted."}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}, "get": {"tags": ["Collections"], "summary": "Retrieves a Collection by ID.", "operationId": "GetCollectionById", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "collectionId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Containers.V1.ContainerDto"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}, "put": {"tags": ["Collections"], "summary": "Updates a Collection.", "operationId": "UpdateCollection", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "collectionId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Containers.V1.UpdateCollectionRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Containers.V1.UpdateCollectionRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Containers.V1.UpdateCollectionRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Containers.V1.UpdateCollectionRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved."}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/validations/collections/import": {"post": {"tags": ["Collections"], "summary": "Uploads a Collection JSON. Useful for importing from another system.", "operationId": "UploadCollectionJson", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Containers.V1.UploadCollectionRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Containers.V1.UploadCollectionRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Containers.V1.UploadCollectionRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Containers.V1.UploadCollectionRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "201": {"description": "The resource was created. The location of the resource is available in the Location header of the response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Core.V1.CreatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/validations/collections": {"get": {"tags": ["Collections"], "summary": "Retrieves a list of Collections.", "operationId": "GetCollections", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string"}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Containers.V1.PaginatedContainers"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "post": {"tags": ["Collections"], "summary": "Creates a Collection.", "operationId": "CreateCollection", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Containers.V1.CreateCollectionRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Containers.V1.CreateCollectionRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Containers.V1.CreateCollectionRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Containers.V1.CreateCollectionRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "201": {"description": "The resource was created. The location of the resource is available in the Location header of the response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Core.V1.CreatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/analytics/configurations/{configurationId}": {"delete": {"tags": ["Configurations"], "summary": "Deletes a configuration.", "operationId": "DeleteAnalyticsConfigurationAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "configurationId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details."}, "200": {"description": "The requested resource was successfully retrieved."}, "404": {"description": "Not Found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}}}, "get": {"tags": ["Configurations"], "summary": "Retrieves a configuration by ID.", "operationId": "GetAnalyticsConfigurationByIdAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "configurationId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details."}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Configurations.V1.AnalyticsConfiguration"}}}}, "404": {"description": "Not Found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}}}, "put": {"tags": ["Configurations"], "summary": "Updates a configuration.", "operationId": "UpdateAnalyticsConfigurationAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "configurationId", "in": "path", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Configurations.V1.UpdateConfigurationRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Configurations.V1.UpdateConfigurationRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Configurations.V1.UpdateConfigurationRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Configurations.V1.UpdateConfigurationRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details."}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Configurations.V1.ConfigurationResponse"}}}}, "404": {"description": "Not Found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/analytics/configurations/azure/testconnection": {"post": {"tags": ["Configurations"], "summary": "Verifies if AAD token generation is possible with user provided values.", "operationId": "ValidateAADTokenAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Configurations.V1.AnalyticsAzureAd"}}, "application/json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Configurations.V1.AnalyticsAzureAd"}}, "text/json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Configurations.V1.AnalyticsAzureAd"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Configurations.V1.AnalyticsAzureAd"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details."}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Configurations.V1.TestConnectionResponse"}}}}, "404": {"description": "Not Found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/analytics/configurations/default/valid": {"get": {"tags": ["Configurations"], "summary": "Verifies if current default configuration has required values for correct functionality.", "operationId": "HasValidAnalyticsConfigurationAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details."}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Configurations.V1.HasValidConfigurationResponse"}}}}, "404": {"description": "Not Found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/analytics/configurations/default": {"get": {"tags": ["Configurations"], "summary": "Retrieves current default configuration.", "operationId": "GetAnalyticsConfigurationByTenantIdAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details."}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Configurations.V1.AnalyticsConfiguration"}}}}, "404": {"description": "Not Found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/analytics/configurations": {"get": {"tags": ["Configurations"], "summary": "Retrieves all configurations.", "operationId": "GetAllAnalyticsConfigurationsAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details."}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Configurations.V1.AnalyticsConfigurationPaginatedItemsViewModel"}}}}, "404": {"description": "Not Found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}}}, "post": {"tags": ["Configurations"], "summary": "Creates a new configuration.", "operationId": "CreateAnalyticsConfigurationAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "workspaceName", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Configurations.V1.CreateConfigurationRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Configurations.V1.CreateConfigurationRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Configurations.V1.CreateConfigurationRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Configurations.V1.CreateConfigurationRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details."}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Configurations.V1.AnalyticsConfiguration"}}}}, "404": {"description": "Not Found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/datasync/connections/{connectionId}/edfi/districts": {"get": {"tags": ["Connections / Ed-Fi"], "summary": "Retrieves a list of districts from an Ed-Fi API using the DataSync connection metadata", "operationId": "GetTenantDataSyncConnectionEdFiDistricts", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "connectionId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/EdGraph.Platform.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.ConnectionEdFiResponse"}}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/datasync/connections/{connectionId}/edfi/educationorganizationidentificationsystemdescriptors": {"get": {"tags": ["Connections / Ed-Fi"], "summary": "Retrieves a list of education organization identification system descriptors from an Ed-Fi API using the DataSync connection metadata", "operationId": "GetTenantDataSyncConnectionEdFiEducationOrganizationIdDescriptors", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "connectionId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/EdGraph.Platform.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.ConnectionEdFiResponse"}}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/datasync/connections/{connectionId}/edfi/schoolyears": {"get": {"tags": ["Connections / Ed-Fi"], "summary": "Retrieves a list of school years from an Ed-Fi API using the DataSync connection metadata", "operationId": "GetTenantDataSyncConnectionEdFiSchoolYears", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "connectionId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/EdGraph.Platform.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.ConnectionEdFiResponse"}}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/datasync/connections/{connectionId}/edfi/staffidentificationsystemdescriptors": {"get": {"tags": ["Connections / Ed-Fi"], "summary": "Retrieves a list of staff identification system descriptors from an Ed-Fi API using the DataSync connection metadata", "operationId": "GetTenantDataSyncConnectionEdFiStaffIdDescriptors", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "connectionId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/EdGraph.Platform.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.ConnectionEdFiResponse"}}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/datasync/connections/{connectionId}/edfi/studentidentificationsystemdescriptors": {"get": {"tags": ["Connections / Ed-Fi"], "summary": "Retrieves a list of student identification system descriptors from an Ed-Fi API using the DataSync connection metadata", "operationId": "GetTenantDataSyncConnectionEdFiStudentIdDescriptors", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "connectionId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/EdGraph.Platform.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.ConnectionEdFiResponse"}}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/datasync/connections/{connectionId}/edfi/termdescriptors": {"get": {"tags": ["Connections / Ed-Fi"], "summary": "Retrieves a list of term descriptors from an Ed-Fi API using the DataSync connection metadata", "operationId": "GetTenantDataSyncConnectionEdFiTermDescriptors", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "connectionId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/EdGraph.Platform.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.ConnectionEdFiResponse"}}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/datasync/connections/{connectionId}": {"delete": {"tags": ["Connections"], "summary": "Delete a DataSync connection matching the primary key", "operationId": "DeleteTenantDataSyncConnection", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "connectionId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Connection.V1.DeleteConnectionRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Connection.V1.DeleteConnectionRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Connection.V1.DeleteConnectionRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Connection.V1.DeleteConnectionRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "204": {"description": "The resource was successfully deleted."}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}}}, "get": {"tags": ["Connections"], "summary": "Retrieves a specific DataSync connection using its primary key", "operationId": "GetTenantDataSyncConnectionProfileById", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "connectionId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Connection.V1.ConnectionProfileResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "put": {"tags": ["Connections"], "summary": "Updates a DataSync connection matching the primary key", "operationId": "UpdateTenantDataSyncConnection", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "connectionId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Requests.Connections.UpdateConnectionRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Requests.Connections.UpdateConnectionRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Requests.Connections.UpdateConnectionRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Requests.Connections.UpdateConnectionRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved."}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/datasync/connections": {"get": {"tags": ["Connections"], "summary": "Retrieves a list of DataSync Connections", "operationId": "GetAllTenantDataSyncConnections", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Connection.V1.ConnectionListResponsePaginatedItemsViewModel"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "post": {"tags": ["Connections"], "summary": "Creates a new DataSync connection", "operationId": "CreateTenantDataSyncConnection", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Requests.Connections.CreateConnectionRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Requests.Connections.CreateConnectionRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Requests.Connections.CreateConnectionRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Requests.Connections.CreateConnectionRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "201": {"description": "The resource was created. The location of the resource is available in the Location header of the response."}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/edfiadmin/connections/{connectionId}": {"get": {"tags": ["Connections"], "summary": "Retrieves an Ed-Fi Connection by ID.", "operationId": "GetEdFiConnectionById", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "connectionId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.EdFiConnection"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}, "put": {"tags": ["Connections"], "summary": "Updates an Ed-Fi Connection.", "operationId": "UpdateEdFiConnection", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "connectionId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.UpdateEdFiConnectionRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.UpdateEdFiConnectionRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.UpdateEdFiConnectionRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.UpdateEdFiConnectionRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.EdFiConnectionUpdatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "Not Found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/edfiadmin/connections/odsbackupcodes": {"get": {"tags": ["Connections"], "summary": "Retrieves a list of Ed-Fi ODS backup codes.", "operationId": "GetEdFiOdsBackupCodesDescriptorsAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.EdFiOdsBackupDescriptorsPaginatedItemsResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/edfiadmin/connections": {"get": {"tags": ["Connections"], "summary": "Retrieves a list of Ed-Fi Connections.", "operationId": "GetEdFiConnectionsAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.EdFiConnectionPaginatedItemsResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "post": {"tags": ["Connections"], "summary": "Creates a new Ed-Fi Connection.", "operationId": "CreateEdFiConnection", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.CreateEdFiConnectionRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.CreateEdFiConnectionRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.CreateEdFiConnectionRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.CreateEdFiConnectionRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "Success"}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "201": {"description": "The resource was created. The location of the resource is available in the Location header of the response."}}}}, "/tenants/{tenantId}/oneroster/connections/{connectionId}": {"get": {"tags": ["Connections"], "summary": "Retrieves the profile of a Connection.", "operationId": "GetConnectionById", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "connectionId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IMSAdminApi.V1.Connections.PagedConnectionsResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/oneroster/connections": {"get": {"tags": ["Connections"], "summary": "Retrieves a list of Connections.", "operationId": "GetPagedConnections", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IMSAdminApi.V1.Connections.PagedConnectionsResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/statereporting/connections/{connectionId}/testconnection": {"post": {"tags": ["Connections"], "summary": "Tests a Connection by ID.", "operationId": "TestStateReportingConnectionById", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "connectionId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Tenant.Api.Services.StateReporting.v1.TestConnectionResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "Not Found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/statereporting/connections/{connectionId}": {"delete": {"tags": ["Connections"], "summary": "Deletes a Connection.", "operationId": "DeleteStateReportingConnection", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "connectionId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Tenant.Api.Services.StateReporting.v1.ConnectionDeletedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "Not Found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}, "get": {"tags": ["Connections"], "summary": "Retrieves a Connection by ID.", "operationId": "GetStateReportingConnection", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "connectionId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Tenant.Api.Services.StateReporting.v1.ConnectionProfileResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}, "put": {"tags": ["Connections"], "summary": "Updates a Connection.", "operationId": "UpdateStateReportingConnection", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "connectionId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Tenant.Api.Services.StateReporting.v1.UpdateConnectionRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Tenant.Api.Services.StateReporting.v1.UpdateConnectionRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Tenant.Api.Services.StateReporting.v1.UpdateConnectionRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Tenant.Api.Services.StateReporting.v1.UpdateConnectionRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Tenant.Api.Services.StateReporting.v1.ConnectionUpdatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "Not Found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/statereporting/connections/testconnection": {"post": {"tags": ["Connections"], "summary": "Tests a Connection by Type.", "operationId": "TestStateReportingConnectionByType", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Tenant.Api.Services.StateReporting.v1.TestConnectionByTypeRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Tenant.Api.Services.StateReporting.v1.TestConnectionByTypeRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Tenant.Api.Services.StateReporting.v1.TestConnectionByTypeRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Tenant.Api.Services.StateReporting.v1.TestConnectionByTypeRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Tenant.Api.Services.StateReporting.v1.TestConnectionResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "Not Found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/statereporting/connections": {"get": {"tags": ["Connections"], "summary": "Retrieves a list of Connections.", "operationId": "FindStateReportingConnections", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Tenant.Api.Services.StateReporting.v1.PagedConnectionsResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "post": {"tags": ["Connections"], "summary": "Creates a new Connection.", "operationId": "CreateStateReportingConnection", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Tenant.Api.Services.StateReporting.v1.CreateConnectionRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Tenant.Api.Services.StateReporting.v1.CreateConnectionRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Tenant.Api.Services.StateReporting.v1.CreateConnectionRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Tenant.Api.Services.StateReporting.v1.CreateConnectionRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "Success", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Tenant.Api.Services.StateReporting.v1.ConnectionCreatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "201": {"description": "The resource was created. The location of the resource is available in the Location header of the response."}}}}, "/tenants/{tenantId}/domains/{domainName}/verify": {"put": {"tags": ["Domains"], "summary": "Verify a  tenant's domain", "operationId": "VerifyTenantDomainAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "domainName", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.VerifyDomainRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.VerifyDomainRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.VerifyDomainRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.VerifyDomainRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.DomainVerifiedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/domains/{domainName}": {"delete": {"tags": ["Domains"], "summary": "Deletes a user", "operationId": "DeleteTenantDomainAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "domainName", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "204": {"description": "The resource was successfully deleted."}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "get": {"tags": ["Domains"], "summary": "Retrieves a domain", "operationId": "GetTenantDomainProfileByNameAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "domainName", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.DomainProfileResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}, "put": {"tags": ["Domains"], "summary": "Updates a domain", "operationId": "UpdateTenantDomainAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "domainName", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.UpdateDomainRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.UpdateDomainRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.UpdateDomainRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.UpdateDomainRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.DomainUpdatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/domains": {"get": {"tags": ["Domains"], "summary": "Retrieves a list of domains associated to this tenant", "operationId": "GetAllTenantDomainsAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.DomainListResponseDtoPaginatedItemsViewModel"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "post": {"tags": ["Domains"], "summary": "Creates a new domain", "operationId": "CreateTenantDomainAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.CreateDomainRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.CreateDomainRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.CreateDomainRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.CreateDomainRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "201": {"description": "The resource was created. The location of the resource is available in the Location header of the response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.DomainCreatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/analytics/edfiadmin/connections": {"get": {"tags": ["Ed-Fi Instances"], "summary": "Retrieves a list of EdFi Admin connections", "operationId": "GetAllEdFiAdminConnectionsFromAnalyticsAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Missing the required permissions to access to this tenant/resource", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "500": {"description": "Oops! Can't retrieve the list of EdFi Admin connections right now"}, "200": {"description": "List of EdFi Admin connections", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Reports.V1.ReportPaginatedItemsResponse"}}}}, "400": {"description": "Tenant has missing/invalid values", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/analytics/edfiadmin/instances/{instanceId}": {"get": {"tags": ["Ed-Fi Instances"], "summary": "Retrieves an Ed-Fi Admin instance by ID.", "operationId": "GetEdFiAdminInstanceByIdFromAnalyticsAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "instanceId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details."}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.Instance"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/analytics/edfiadmin/instances": {"get": {"tags": ["Ed-Fi Instances"], "summary": "Retrieves a list of EdFi Admin instances", "operationId": "GetAllEdFiAdminInstancesFromAnalyticsAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Missing the required permissions to access to this tenant/resource", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "500": {"description": "Oops! Can't retrieve the list of EdFi Admin instances right now"}, "200": {"description": "List of EdFi Admin instances", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Reports.V1.ReportPaginatedItemsResponse"}}}}, "400": {"description": "Tenant has missing/invalid values", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/validations/environments/{environmentId}": {"delete": {"tags": ["Environments"], "summary": "Deletes an Environment.", "operationId": "DeleteEnvironment", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "environmentId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "204": {"description": "The resource was successfully deleted."}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}, "get": {"tags": ["Environments"], "summary": "Retrieves an Environment by ID.", "operationId": "GetEnvironmentById", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "environmentId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.DbEnvironments.V1.DbEnvironmentDto"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}, "put": {"tags": ["Environments"], "summary": "Updates an Environment.", "operationId": "UpdateEnvironment", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "environmentId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.DbEnvironments.V1.UpdateRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.DbEnvironments.V1.UpdateRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.DbEnvironments.V1.UpdateRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.DbEnvironments.V1.UpdateRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Core.V1.EmptyResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "Not Found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/validations/environments/testconnection": {"post": {"tags": ["Environments"], "summary": "Tests if the provided connection string can establish a valid connection.", "operationId": "TestEnvironmentConnection", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.DbEnvironments.V1.TestConnectionRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.DbEnvironments.V1.TestConnectionRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.DbEnvironments.V1.TestConnectionRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.DbEnvironments.V1.TestConnectionRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.DbEnvironments.V1.TestConnectionResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/validations/environments": {"get": {"tags": ["Environments"], "summary": "Retrieves a list of Environments.", "operationId": "GetEnvironments", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string"}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.DbEnvironments.V1.PaginatedDbEnvironments"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "post": {"tags": ["Environments"], "summary": "Creates an Environment.", "operationId": "CreateEnvironment", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.DbEnvironments.V1.CreateRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.DbEnvironments.V1.CreateRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.DbEnvironments.V1.CreateRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.DbEnvironments.V1.CreateRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "Success", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Core.V1.CreatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "201": {"description": "The resource was created. The location of the resource is available in the Location header of the response."}}}}, "/tenants/{tenantId}/analytics/gateways": {"get": {"tags": ["Gateways"], "summary": "Retrieves a list of gateways in Power Bi that the user has access to.", "operationId": "GetAllAnalyticsGatewaysAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details."}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.Instance"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/analytics/groups/{groupId}/users/bulk": {"post": {"tags": ["Groups"], "summary": "Adds users to group.", "operationId": "AddUsersToGroupAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "groupId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Groups.V1.AddGroupUsersRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Groups.V1.AddGroupUsersRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Groups.V1.AddGroupUsersRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Groups.V1.AddGroupUsersRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details."}, "200": {"description": "The requested resource was successfully retrieved."}, "404": {"description": "Not Found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/analytics/groups/{groupId}/users": {"get": {"tags": ["Groups"], "summary": "Retrieves all users for a specific group.", "operationId": "GetAnalyticsPowerBiGroupUsers", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "groupId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "skipFirstN", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32"}}, {"name": "topFirstN", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details."}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Groups.V1.GroupUsersResponse"}}}}, "404": {"description": "Not Found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/analytics/groups/{groupId}": {"delete": {"tags": ["Groups"], "summary": "Deletes a group.", "operationId": "DeleteAnalyticsPowerBiGroup", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "groupId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details."}, "200": {"description": "The requested resource was successfully retrieved."}, "404": {"description": "Not Found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/analytics/groups": {"get": {"tags": ["Groups"], "summary": "Retrieves a list of groups.", "operationId": "GetGroupsAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details."}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Groups.V1.GroupsResponse"}}}}, "404": {"description": "Not Found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}}}, "post": {"tags": ["Groups"], "summary": "Creates a group.", "operationId": "CreateAnalyticsPowerBiGroup", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Groups.V1.CreateGroupRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Groups.V1.CreateGroupRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Groups.V1.CreateGroupRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Groups.V1.CreateGroupRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details."}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Groups.V1.GroupResponse"}}}}, "404": {"description": "Not Found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/edfiadmin/instances/{instanceId}/applications/{applicationId}/apiclients/{apiClientId}/access/{accessId}": {"delete": {"tags": ["Instances / Applications"], "summary": "Deletes an application user access.", "operationId": "DeleteApplicationUserAccessAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "instanceId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "applicationId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "apiClientId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "accessId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "204": {"description": "The resource was successfully deleted."}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}, "get": {"tags": ["Instances / Applications"], "summary": "Retrieves an application access by ID.", "operationId": "GetApplicationAccessByIdAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "instanceId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "applicationId", "in": "path", "description": "", "required": true, "schema": {"type": "integer", "format": "int32"}}, {"name": "apiClientId", "in": "path", "description": "", "required": true, "schema": {"type": "integer", "format": "int32"}}, {"name": "accessId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdFiAdminApi.ApplicationAccess.V1.ApplicationAccessResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}, "put": {"tags": ["Instances / Applications"], "summary": "Updates a new application access.", "operationId": "UpdateApplicationUserAccessAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "instanceId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "applicationId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "apiClientId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "accessId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/EdFiAdminApi.ApplicationAccess.V1.UpdateApplicationAccessRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/EdFiAdminApi.ApplicationAccess.V1.UpdateApplicationAccessRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/EdFiAdminApi.ApplicationAccess.V1.UpdateApplicationAccessRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/EdFiAdminApi.ApplicationAccess.V1.UpdateApplicationAccessRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "Success"}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "201": {"description": "The resource was created. The location of the resource is available in the Location header of the response."}}}}, "/tenants/{tenantId}/edfiadmin/instances/{instanceId}/applications/{applicationId}/apiclients/{apiClientId}/access": {"get": {"tags": ["Instances / Applications"], "summary": "Retrieves a list of application accesses.", "operationId": "GetApplicationAccessAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "instanceId", "in": "path", "required": true, "schema": {"type": "string"}}, {"name": "applicationId", "in": "path", "required": true, "schema": {"type": "string"}}, {"name": "apiClientId", "in": "path", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdFiAdminApi.ApplicationAccess.V1.ApplicationAccessResponsePaginatedItemsViewModel"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "post": {"tags": ["Instances / Applications"], "summary": "Creates a new application access.", "operationId": "CreateApplicationUserAccessAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "instanceId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "applicationId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "apiClientId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/EdFiAdminApi.ApplicationAccess.V1.CreateApplicationAccessRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/EdFiAdminApi.ApplicationAccess.V1.CreateApplicationAccessRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/EdFiAdminApi.ApplicationAccess.V1.CreateApplicationAccessRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/EdFiAdminApi.ApplicationAccess.V1.CreateApplicationAccessRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "Success"}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "201": {"description": "The resource was created. The location of the resource is available in the Location header of the response."}}}}, "/tenants/{tenantId}/edfiadmin/instances/{instanceId}/applications/{applicationId}/apiclients/{apiClientId}/regenerate": {"put": {"tags": ["Instances / Applications"], "summary": "Regenerates the secret of an API Client.", "operationId": "RegenerateApiClientSecretAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "instanceId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "applicationId", "in": "path", "description": "", "required": true, "schema": {"type": "integer", "format": "int32"}}, {"name": "apiClientId", "in": "path", "description": "", "required": true, "schema": {"type": "integer", "format": "int32"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.RegenerateApiClientSecretResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/edfiadmin/instances/{instanceId}/applications/{applicationId}/apiclients/{apiClientId}": {"get": {"tags": ["Instances / Applications"], "summary": "Retrieves an API Client of an Application by ID.", "operationId": "GetApplicationApiClientByIdAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "instanceId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "applicationId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "apiClientId", "in": "path", "description": "", "required": true, "schema": {"type": "integer", "format": "int32"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.EdFiApplicationApiClientProfileResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/edfiadmin/instances/{instanceId}/applications/{applicationId}/apiclients": {"get": {"tags": ["Instances / Applications"], "summary": "Retrieves the API Clients of an Application.", "operationId": "GetApplicationApiClientsAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "instanceId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "applicationId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.EdFiApplicationApiClientProfileResponsePaginatedItemsViewModel"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/edfiadmin/instances/{instanceId}/applications/{applicationId}/sync": {"post": {"tags": ["Instances / Applications"], "summary": "Copies an Application from one instance to another/other instance(s)", "operationId": "SyncApplicationAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "instanceId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "applicationId", "in": "path", "description": "", "required": true, "schema": {"type": "integer", "format": "int32"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.SyncApplicationRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.SyncApplicationRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.SyncApplicationRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.SyncApplicationRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved."}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/edfiadmin/instances/{instanceId}/applications/{applicationId}": {"delete": {"tags": ["Instances / Applications"], "summary": "Deletes an Application.", "operationId": "DeleteApplicationAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "instanceId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "applicationId", "in": "path", "description": "", "required": true, "schema": {"type": "integer", "format": "int32"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "204": {"description": "The resource was successfully deleted."}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}, "get": {"tags": ["Instances / Applications"], "summary": "Retrieves an Application by ID.", "operationId": "GetApplicationByIdAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "instanceId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "applicationId", "in": "path", "description": "", "required": true, "schema": {"type": "integer", "format": "int32"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.EdFiApplicationProfileResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}, "put": {"tags": ["Instances / Applications"], "summary": "Updates an Application.", "operationId": "UpdateApplicationAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "instanceId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "applicationId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.UpdateEdFiApplicationRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.UpdateEdFiApplicationRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.UpdateEdFiApplicationRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.UpdateEdFiApplicationRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved."}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/edfiadmin/instances/{instanceId}/applications": {"get": {"tags": ["Instances / Applications"], "summary": "Retrieves a list of Applications.", "operationId": "GetApplicationsAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "instanceId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.EdFiApplicationListResponsePaginatedItemsViewModel"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}, "post": {"tags": ["Instances / Applications"], "summary": "Creates an Application.", "operationId": "CreateApplicationAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "instanceId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.CreateEdFiApplicationRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.CreateEdFiApplicationRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.CreateEdFiApplicationRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.CreateEdFiApplicationRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "201": {"description": "The resource was created. The location of the resource is available in the Location header of the response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.EdFiApplicationCreatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/edfiadmin/instances/{instanceId}/authorizationstrategies": {"get": {"tags": ["Instances / Authorization Strategies"], "summary": "Retrieves a list of Authorization Strategies.", "operationId": "GetAuthorizationStrategiesAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "instanceId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.AuthorizationStrategiesResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/edfiadmin/instances/{instanceId}/claimsets/{claimSetId}/resourceclaims": {"get": {"tags": ["Instances / ClaimSets"], "summary": "Retrieves a grid of Resource Claims.", "operationId": "GetResourceClaimsGridAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "instanceId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "claimSetId", "in": "path", "description": "", "required": true, "schema": {"type": "integer", "format": "int32"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.GetResourceClaimsGridResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/edfiadmin/instances/{instanceId}/claimsets/{claimSetId}/sync": {"post": {"tags": ["Instances / ClaimSets"], "summary": "Copies a Claim Set from one instance to another/other instance(s)", "operationId": "SyncClaimSetAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "instanceId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "claimSetId", "in": "path", "description": "", "required": true, "schema": {"type": "integer", "format": "int32"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.SyncClaimSetRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.SyncClaimSetRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.SyncClaimSetRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.SyncClaimSetRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved."}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/edfiadmin/instances/{instanceId}/claimsets/{claimSetId}": {"delete": {"tags": ["Instances / ClaimSets"], "summary": "Deletes a ClaimSet.", "operationId": "DeleteClaimSetAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "instanceId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "claimSetId", "in": "path", "description": "", "required": true, "schema": {"type": "integer", "format": "int32"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "204": {"description": "The resource was successfully deleted."}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}, "get": {"tags": ["Instances / ClaimSets"], "summary": "Retrieves a ClaimSet by ID.", "operationId": "GetClaimSetByIdAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "instanceId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "claimSetId", "in": "path", "description": "", "required": true, "schema": {"type": "integer", "format": "int32"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.ClaimSet"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}, "put": {"tags": ["Instances / ClaimSets"], "summary": "Updates a ClaimSet.", "operationId": "UpdateClaimSetAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "instanceId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "claimSetId", "in": "path", "description": "", "required": true, "schema": {"type": "integer", "format": "int32"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.SaveClaimSetRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.SaveClaimSetRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.SaveClaimSetRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.SaveClaimSetRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.SaveClaimSetResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/edfiadmin/instances/{instanceId}/claimsets": {"get": {"tags": ["Instances / ClaimSets"], "summary": "Retrieves a list of ClaimSets.", "operationId": "GetClaimSetsAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "instanceId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.ClaimSetPaginatedItemsViewModel"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}, "post": {"tags": ["Instances / ClaimSets"], "summary": "Creates a ClaimSet.", "operationId": "CreateClaimSetAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "instanceId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.SaveClaimSetRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.SaveClaimSetRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.SaveClaimSetRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.SaveClaimSetRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.SaveClaimSetResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/oneroster/instances/{instanceId}/clients/{clientId}": {"delete": {"tags": ["Instances / Clients"], "summary": "Deletes a client by Id", "operationId": "DeleteClient", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "instanceId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "clientId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IMSAdminApi.V1.Clients.ClientDeletedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "get": {"tags": ["Instances / Clients"], "summary": "Retrieves a client by Id", "operationId": "GetClientById", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "instanceId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "clientId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IMSAdminApi.V1.Clients.ClientProfileResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "put": {"tags": ["Instances / Clients"], "summary": "Updates a client by Id", "operationId": "UpdateClient", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "instanceId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "clientId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/IMSAdminApi.V1.Clients.UpdateClientRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/IMSAdminApi.V1.Clients.UpdateClientRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/IMSAdminApi.V1.Clients.UpdateClientRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/IMSAdminApi.V1.Clients.UpdateClientRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IMSAdminApi.V1.Clients.ClientUpdatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/oneroster/instances/{instanceId}/clients": {"get": {"tags": ["Instances / Clients"], "summary": "Retrieves a list of clients for a given instance", "operationId": "GetPagedClients", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "instanceId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "pageSize", "in": "query", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "pageIndex", "in": "query", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "orderBy", "in": "query", "schema": {"type": "string", "default": ""}}, {"name": "filter", "in": "query", "schema": {"type": "string", "default": ""}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IMSAdminApi.V1.Clients.PaginatedItemsResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "post": {"tags": ["Instances / Clients"], "summary": "Creates a new client", "operationId": "CreateClient", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "instanceId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/IMSAdminApi.V1.Clients.CreateClientRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/IMSAdminApi.V1.Clients.CreateClientRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/IMSAdminApi.V1.Clients.CreateClientRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/IMSAdminApi.V1.Clients.CreateClientRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IMSAdminApi.V1.Clients.ClientCreatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/edfiadmin/instances/{instanceId}/years/{year}/descriptors/{descriptorId}": {"delete": {"tags": ["Instances / Descriptors"], "summary": "Deletes a Descriptor.", "operationId": "DeleteDescriptorAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "instanceId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "year", "in": "path", "description": "", "required": true, "schema": {"type": "integer", "format": "int32"}}, {"name": "descriptorId", "in": "path", "description": "", "required": true, "schema": {"type": "integer", "format": "int32"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "204": {"description": "The resource was successfully deleted."}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}, "get": {"tags": ["Instances / Descriptors"], "summary": "Retrieves a Descriptor by ID.", "operationId": "GetDescriptorByIdAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "instanceId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "year", "in": "path", "description": "", "required": true, "schema": {"type": "integer", "format": "int32"}}, {"name": "descriptorId", "in": "path", "description": "", "required": true, "schema": {"type": "integer", "format": "int32"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.DescriptorType"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}, "put": {"tags": ["Instances / Descriptors"], "summary": "Updates a Descriptor.", "operationId": "UpdateDescriptorAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "instanceId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "year", "in": "path", "description": "", "required": true, "schema": {"type": "integer", "format": "int32"}}, {"name": "descriptorId", "in": "path", "description": "", "required": true, "schema": {"type": "integer", "format": "int32"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.DescriptorType"}}, "application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.DescriptorType"}}, "text/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.DescriptorType"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.DescriptorType"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.DescriptorUpdatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/edfiadmin/instances/{instanceId}/years/{year}/descriptors": {"get": {"tags": ["Instances / Descriptors"], "summary": "Retrieves a list of Descriptors.", "operationId": "GetDescriptorsAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "instanceId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "year", "in": "path", "description": "", "required": true, "schema": {"type": "integer", "format": "int32"}}, {"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string"}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.DescriptorsPaginatedItemsResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}, "post": {"tags": ["Instances / Descriptors"], "summary": "Creates a Descriptor.", "operationId": "CreateDescriptorAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "instanceId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "year", "in": "path", "description": "", "required": true, "schema": {"type": "integer", "format": "int32"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.DescriptorType"}}, "application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.DescriptorType"}}, "text/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.DescriptorType"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.DescriptorType"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "201": {"description": "The resource was created. The location of the resource is available in the Location header of the response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.DescriptorCreatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/edfiadmin/instances/{instanceId}/years/{year}/namespaces": {"get": {"tags": ["Instances / Descriptors"], "summary": "Retrieves a list of Descriptor Namespaces.", "operationId": "GetDescriptorNamespacesAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "instanceId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "year", "in": "path", "description": "", "required": true, "schema": {"type": "integer", "format": "int32"}}, {"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.DescriptorNamespacesPaginatedItemsResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/edfiadmin/instances/{instanceId}/years/{year}/educationservicecenters/{educationServiceCenterId}": {"delete": {"tags": ["Instances / Education Organizations / Education Service Centers"], "summary": "Deletes an EducationServiceCenter.", "operationId": "DeleteEducationServiceCenterAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "instanceId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "year", "in": "path", "description": "", "required": true, "schema": {"type": "integer", "format": "int32"}}, {"name": "educationServiceCenterId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "204": {"description": "The resource was successfully deleted."}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}, "get": {"tags": ["Instances / Education Organizations / Education Service Centers"], "summary": "Retrieves an EducationServiceCenter by ID.", "operationId": "GetEducationServiceCenterByIdAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "instanceId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "year", "in": "path", "description": "", "required": true, "schema": {"type": "integer", "format": "int32"}}, {"name": "educationServiceCenterId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.EducationServiceCenter"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}, "put": {"tags": ["Instances / Education Organizations / Education Service Centers"], "summary": "Updates an EducationServiceCenter.", "operationId": "UpdateEducationServiceCenterAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "instanceId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "year", "in": "path", "description": "", "required": true, "schema": {"type": "integer", "format": "int32"}}, {"name": "educationServiceCenterId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.UpdateEducationServiceCenterRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.UpdateEducationServiceCenterRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.UpdateEducationServiceCenterRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.UpdateEducationServiceCenterRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved."}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/edfiadmin/instances/{instanceId}/years/{year}/educationservicecenters": {"post": {"tags": ["Instances / Education Organizations / Education Service Centers"], "summary": "Creates an EducationServiceCenter.", "operationId": "CreateEducationServiceCenterAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "instanceId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "year", "in": "path", "description": "", "required": true, "schema": {"type": "integer", "format": "int32"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.CreateEducationServiceCenterRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.CreateEducationServiceCenterRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.CreateEducationServiceCenterRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.CreateEducationServiceCenterRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "201": {"description": "The resource was created. The location of the resource is available in the Location header of the response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.EducationServiceCenterCreatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/edfiadmin/instances/{instanceId}/years/{year}/localeducationagencies/{localEducationAgencyId}/sync": {"post": {"tags": ["Instances / Education Organizations / Local Education Agencies"], "summary": "Copies a LocalEducationAgency from one instance to another/other instance(s).", "operationId": "SyncLocalEducationAgencyAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "instanceId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "year", "in": "path", "description": "", "required": true, "schema": {"type": "integer", "format": "int32"}}, {"name": "localEducationAgencyId", "in": "path", "description": "", "required": true, "schema": {"type": "integer", "format": "int32"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.SyncLocalEducationAgencyRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.SyncLocalEducationAgencyRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.SyncLocalEducationAgencyRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.SyncLocalEducationAgencyRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.SyncResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/edfiadmin/instances/{instanceId}/years/{year}/localeducationagencies/{localEducationAgencyId}": {"delete": {"tags": ["Instances / Education Organizations / Local Education Agencies"], "summary": "Deletes a LocalEducationAgency.", "operationId": "DeleteLocalEducationAgencyAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "instanceId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "year", "in": "path", "description": "", "required": true, "schema": {"type": "integer", "format": "int32"}}, {"name": "localEducationAgencyId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "204": {"description": "The resource was successfully deleted."}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}, "get": {"tags": ["Instances / Education Organizations / Local Education Agencies"], "summary": "Retrieves a LocalEducationAgency by ID.", "operationId": "GetLocalEducationAgencyByIdAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "instanceId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "year", "in": "path", "description": "", "required": true, "schema": {"type": "integer", "format": "int32"}}, {"name": "localEducationAgencyId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.GetLocalEducationAgencyProfileResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}, "put": {"tags": ["Instances / Education Organizations / Local Education Agencies"], "summary": "Updates a LocalEducationAgency.", "operationId": "UpdateLocalEducationAgencyAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "instanceId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "year", "in": "path", "description": "", "required": true, "schema": {"type": "integer", "format": "int32"}}, {"name": "localEducationAgencyId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.UpdateLocalEducationAgencyRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.UpdateLocalEducationAgencyRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.UpdateLocalEducationAgencyRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.UpdateLocalEducationAgencyRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved."}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/edfiadmin/instances/{instanceId}/years/{year}/localeducationagencies": {"get": {"tags": ["Instances / Education Organizations / Local Education Agencies"], "summary": "Retrieves a list of LocalEducationAgencies.", "operationId": "GetlLocalEducationAgenciesAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "instanceId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "year", "in": "path", "description": "", "required": true, "schema": {"type": "integer", "format": "int32"}}, {"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.LocalEducationAgencyTableViewResponsePaginatedItemsViewModel"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}, "post": {"tags": ["Instances / Education Organizations / Local Education Agencies"], "summary": "Creates a LocalEducationAgency.", "operationId": "CreateLocalEducationAgencyAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "instanceId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "year", "in": "path", "description": "", "required": true, "schema": {"type": "integer", "format": "int32"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.CreateLocalEducationAgencyRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.CreateLocalEducationAgencyRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.CreateLocalEducationAgencyRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.CreateLocalEducationAgencyRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "201": {"description": "The resource was created. The location of the resource is available in the Location header of the response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.LocalEducationAgencyCreatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/edfiadmin/instances/{instanceId}/years/{year}/stateeducationagencies/{stateEducationAgencyId}": {"delete": {"tags": ["Instances / Education Organizations / State Education Agencies"], "summary": "Deletes a StateEducationAgency.", "operationId": "DeleteStateEducationAgencyAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "instanceId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "year", "in": "path", "description": "", "required": true, "schema": {"type": "integer", "format": "int32"}}, {"name": "stateEducationAgencyId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "204": {"description": "The resource was successfully deleted."}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}, "get": {"tags": ["Instances / Education Organizations / State Education Agencies"], "summary": "Retrieves a StateEducationAgency by ID.", "operationId": "GetStateEducationAgencyByIdAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "instanceId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "year", "in": "path", "description": "", "required": true, "schema": {"type": "integer", "format": "int32"}}, {"name": "stateEducationAgencyId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.StateEducationAgency"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}, "put": {"tags": ["Instances / Education Organizations / State Education Agencies"], "summary": "Updates a StateEducationAgency.", "operationId": "UpdateStateEducationAgencyAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "instanceId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "year", "in": "path", "description": "", "required": true, "schema": {"type": "integer", "format": "int32"}}, {"name": "stateEducationAgencyId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.UpdateStateEducationAgencyRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.UpdateStateEducationAgencyRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.UpdateStateEducationAgencyRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.UpdateStateEducationAgencyRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved."}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/edfiadmin/instances/{instanceId}/years/{year}/stateeducationagencies": {"post": {"tags": ["Instances / Education Organizations / State Education Agencies"], "summary": "Creates a StateEducationAgency.", "operationId": "CreateStateEducationAgencyAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "instanceId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "year", "in": "path", "description": "", "required": true, "schema": {"type": "integer", "format": "int32"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.CreateStateEducationAgencyRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.CreateStateEducationAgencyRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.CreateStateEducationAgencyRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.CreateStateEducationAgencyRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "201": {"description": "The resource was created. The location of the resource is available in the Location header of the response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.StateEducationAgencyCreatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/edfiadmin/instances/{instanceId}/reports/generate": {"post": {"tags": ["Instances / Reports"], "summary": "Queues a job to generate the report views in the ODS Database.", "operationId": "GenerateReportsAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "instanceId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.GenerateReportsResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/edfiadmin/instances/{instanceId}/reports/schoolsbytype/{localEducationAgencyId}": {"get": {"tags": ["Instances / Reports"], "summary": "Retrieves a \"Schools By Type\" report.", "operationId": "GetSchoolsByTypeReportAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "instanceId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "localEducationAgencyId", "in": "path", "description": "", "required": true, "schema": {"type": "integer", "format": "int32"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.SchoolsByTypeReportResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/edfiadmin/instances/{instanceId}/reports/status": {"get": {"tags": ["Instances / Reports"], "summary": "Retrieves the status of the report views in Instance.", "operationId": "GetReportsStatusAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "instanceId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.ReportsStatusResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/edfiadmin/instances/{instanceId}/reports/studentenrollment/ethnicity/{localEducationAgencyId}": {"get": {"tags": ["Instances / Reports"], "summary": "Retrieves a \"Student Enrollment By Ethnicity\" report.", "operationId": "GetStudentEnrollmentByEthnicityReport", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "instanceId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "localEducationAgencyId", "in": "path", "description": "", "required": true, "schema": {"type": "integer", "format": "int32"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.StudentEnrollmentByEthnicityReportResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/edfiadmin/instances/{instanceId}/reports/studentenrollment/gender/{localEducationAgencyId}": {"get": {"tags": ["Instances / Reports"], "summary": "Retrieves a \"Student Enrollment By Gender\" report.", "operationId": "GetStudentEnrollmentByGenderReportAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "instanceId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "localEducationAgencyId", "in": "path", "description": "", "required": true, "schema": {"type": "integer", "format": "int32"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.StudentEnrollmentByGenderReportResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/edfiadmin/instances/{instanceId}/reports/studentenrollment/race/{localEducationAgencyId}": {"get": {"tags": ["Instances / Reports"], "summary": "Retrieves a \"Student Enrollment By Race\" report.", "operationId": "GetStudentEnrollmentByRaceReportAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "instanceId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "localEducationAgencyId", "in": "path", "description": "", "required": true, "schema": {"type": "integer", "format": "int32"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.StudentEnrollmentByRaceReportResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/edfiadmin/instances/{instanceId}/reports/studentsbyprogram/{localEducationAgencyId}": {"get": {"tags": ["Instances / Reports"], "summary": "Retrieves a \"Students By Program\" report.", "operationId": "GetStudentsByProgramReportAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "instanceId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "localEducationAgencyId", "in": "path", "description": "", "required": true, "schema": {"type": "integer", "format": "int32"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.StudentsByProgramReportResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/edfiadmin/instances/{instanceId}/reports/studentseconomicsituation/{localEducationAgencyId}": {"get": {"tags": ["Instances / Reports"], "summary": "Retrieves a \"Students Economic Situation\" report.", "operationId": "GetStudentEconomicSituationReportAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "instanceId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "localEducationAgencyId", "in": "path", "description": "", "required": true, "schema": {"type": "integer", "format": "int32"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.StudentEconomicSituationReportResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/edfiadmin/instances/{instanceId}/reports/totalenrollments/{localEducationAgencyId}": {"get": {"tags": ["Instances / Reports"], "summary": "Retrieves a \"Total Enrollments\" report.", "operationId": "GetTotalEnrollmentsReportAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "instanceId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "localEducationAgencyId", "in": "path", "description": "", "required": true, "schema": {"type": "integer", "format": "int32"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.TotalEnrollmentsReportResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/edfiadmin/instances/{instanceId}/vendors/{vendorId}/sync": {"post": {"tags": ["Instances / Vendors"], "summary": "Copies a Vendor from one instance to another/other instance(s).", "operationId": "SyncVendorAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "instanceId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "vendorId", "in": "path", "description": "", "required": true, "schema": {"type": "integer", "format": "int32"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.SyncVendorRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.SyncVendorRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.SyncVendorRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.SyncVendorRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved."}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/edfiadmin/instances/{instanceId}/vendors/{vendorId}": {"delete": {"tags": ["Instances / Vendors"], "summary": "Deletes a Vendor.", "operationId": "DeleteVendorAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "instanceId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "vendorId", "in": "path", "description": "", "required": true, "schema": {"type": "integer", "format": "int32"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "204": {"description": "The resource was successfully deleted."}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}, "get": {"tags": ["Instances / Vendors"], "summary": "Retrieves a Vendor by ID.", "operationId": "GetVendorByIdAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "instanceId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "vendorId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.VendorProfileResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}, "put": {"tags": ["Instances / Vendors"], "summary": "Updates a Vendor.", "operationId": "UpdateVendorAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "instanceId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "vendorId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.UpdateVendorRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.UpdateVendorRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.UpdateVendorRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.UpdateVendorRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.VendorUpdatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/edfiadmin/instances/{instanceId}/vendors": {"get": {"tags": ["Instances / Vendors"], "summary": "Retrieves a list of Vendors.", "operationId": "GetVendorsAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "instanceId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.VendorListResponsePaginatedItemsViewModel"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}, "post": {"tags": ["Instances / Vendors"], "summary": "Creates a new Vendor.", "operationId": "CreateVendorAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "instanceId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.CreateVendorRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.CreateVendorRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.CreateVendorRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.CreateVendorRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "201": {"description": "The resource was created. The location of the resource is available in the Location header of the response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.VendorCreatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/edfiadmin/instances/{instanceId}/clone": {"post": {"tags": ["Instances"], "summary": "Clones an instance.", "operationId": "CloneInstanceAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "instanceId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.CloneInstanceRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.CloneInstanceRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.CloneInstanceRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.CloneInstanceRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.CloneInstanceResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/edfiadmin/instances/{instanceId}/endpoints": {"get": {"tags": ["Instances"], "summary": "Retrieves the Ed-Fi API endpoint URLs of an Instance.", "operationId": "GetEdFiAdminInstanceEndpoints", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "instanceId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.InstanceEndpointsResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/edfiadmin/instances/{instanceId}/resetinstance": {"post": {"tags": ["Instances"], "summary": "Resets an Instance.", "operationId": "ResetInstanceAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "instanceId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.ResetInstanceResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/edfiadmin/instances/{instanceId}/testconnection": {"post": {"tags": ["Instances"], "summary": "Tests the connection of the Instance.", "operationId": "TestInstanceConnection", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "instanceId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.TestInstanceConnectionResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/edfiadmin/instances/{instanceId}/years/{year}/endpoints": {"get": {"tags": ["Instances"], "summary": "Retrieves the Ed-Fi API endpoint URLs of an Instance.", "operationId": "GetEdFiAdminInstanceYearEndpoints", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "instanceId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "year", "in": "path", "description": "", "required": true, "schema": {"type": "integer", "format": "int32"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.InstanceEndpointsResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/edfiadmin/instances/{instanceId}/years/{year}/resetcache": {"post": {"tags": ["Instances"], "summary": "Resets the cache of an Instance and the specified ODS database.", "operationId": "ResetInstanceCacheAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "instanceId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "year", "in": "path", "description": "", "required": true, "schema": {"type": "integer", "format": "int32"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.ResetInstanceResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/edfiadmin/instances/{instanceId}/years/{year}/resetods": {"post": {"tags": ["Instances"], "summary": "Resets the ODS database with the specified school year.", "operationId": "ResetSchoolYearAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "instanceId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "year", "in": "path", "description": "", "required": true, "schema": {"type": "integer", "format": "int32"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved."}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/edfiadmin/instances/{instanceId}/years/{year}/testconnection": {"post": {"tags": ["Instances"], "summary": "Tests the connection of the Instance.", "operationId": "TestInstanceYearConnection", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "instanceId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "year", "in": "path", "description": "", "required": true, "schema": {"type": "integer", "format": "int32"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.TestInstanceConnectionResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/edfiadmin/instances/{instanceId}/years/{year}/tiers": {"put": {"tags": ["Instances"], "summary": "Changes the selected tier of an ODS database.", "operationId": "ChangeInstanceDatabaseTierAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "instanceId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "year", "in": "path", "description": "", "required": true, "schema": {"type": "integer", "format": "int32"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.ChangeDatabaseTierRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.ChangeDatabaseTierRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.ChangeDatabaseTierRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.ChangeDatabaseTierRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved."}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/edfiadmin/instances/{instanceId}/years/{year}": {"delete": {"tags": ["Instances"], "summary": "Removes an ODS database from an Instance.", "operationId": "DeleteSchoolYearAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "instanceId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "year", "in": "path", "description": "", "required": true, "schema": {"type": "integer", "format": "int32"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved."}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/edfiadmin/instances/{instanceId}/years/bulk": {"post": {"tags": ["Instances"], "summary": "Adds multiple ODS databases to an instance.", "operationId": "AddSchoolYearRange", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "instanceId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.AddSchoolYearRangeRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.AddSchoolYearRangeRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.AddSchoolYearRangeRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.AddSchoolYearRangeRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved."}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/edfiadmin/instances/{instanceId}/years": {"post": {"tags": ["Instances"], "summary": "Adds an ODS database to an Instance.", "operationId": "AddSchoolYear", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "instanceId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.AddSchoolYearRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.AddSchoolYearRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.AddSchoolYearRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.AddSchoolYearRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved."}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/edfiadmin/instances/{instanceId}": {"delete": {"tags": ["Instances"], "summary": "Deletes an Instance.", "operationId": "DeleteInstanceAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "instanceId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "204": {"description": "The resource was successfully deleted."}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}, "get": {"tags": ["Instances"], "summary": "Retrieves an Instance by ID.", "operationId": "GetInstanceByIdAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "instanceId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.Instance"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}, "put": {"tags": ["Instances"], "summary": "Updates an Instance.", "operationId": "UpdateInstanceAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "instanceId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.UpdateInstanceRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.UpdateInstanceRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.UpdateInstanceRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.UpdateInstanceRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved."}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "Not Found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/edfiadmin/instances": {"get": {"tags": ["Instances"], "summary": "Retrieves a list of Instances.", "operationId": "GetInstancesAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "deleted", "in": "query", "description": "", "schema": {"type": "boolean", "default": false}}, {"name": "targetTenantId", "in": "query", "description": "", "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.InstancePaginatedItemsViewModel"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "post": {"tags": ["Instances"], "summary": "Creates a new Instance.", "operationId": "CreateInstanceAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.CreateInstanceRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.CreateInstanceRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.CreateInstanceRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.CreateInstanceRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "Success"}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "201": {"description": "The resource was created. The location of the resource is available in the Location header of the response."}}}}, "/tenants/{tenantId}/oneroster/instances/{instanceId}/csv/export": {"get": {"tags": ["Instances"], "summary": "Retrieves an Instance by ID.", "operationId": "GetInstanceCsvExport", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "instanceId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IMSAdminApi.V1.Instances.GetInstanceCsvExportResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/oneroster/instances/{instanceId}/endpoints": {"get": {"tags": ["Instances"], "summary": "Retrieves the One Roster endpoint URLs of an Instance.", "operationId": "GetInstanceEndpoints", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "instanceId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IMSAdminApi.V1.Instances.InstanceEndpointsResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/oneroster/instances/{instanceId}/resetinstance": {"post": {"tags": ["Instances"], "summary": "Resets an Instance.", "operationId": "ResetInstance", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "instanceId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IMSAdminApi.V1.Instances.InstanceResetResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/oneroster/instances/{instanceId}": {"delete": {"tags": ["Instances"], "summary": "Deletes an Instance.", "operationId": "DeleteInstance", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "instanceId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "204": {"description": "The resource was successfully deleted."}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}, "get": {"tags": ["Instances"], "summary": "Retrieves an Instance by ID.", "operationId": "GetInstanceById", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "instanceId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IMSAdminApi.V1.Instances.InstanceProfileResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}, "put": {"tags": ["Instances"], "summary": "Updates an Instance.", "operationId": "UpdateInstance", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "instanceId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/IMSAdminApi.V1.Instances.UpdateInstanceRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/IMSAdminApi.V1.Instances.UpdateInstanceRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/IMSAdminApi.V1.Instances.UpdateInstanceRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/IMSAdminApi.V1.Instances.UpdateInstanceRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved."}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "Not Found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/oneroster/instances": {"get": {"tags": ["Instances"], "summary": "Retrieves a list of Instances.", "operationId": "GetPagedInstances", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IMSAdminApi.V1.Instances.PagedInstancesResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "post": {"tags": ["Instances"], "summary": "Creates a new Instance.", "operationId": "CreateInstance", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/IMSAdminApi.V1.Instances.CreateInstanceRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/IMSAdminApi.V1.Instances.CreateInstanceRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/IMSAdminApi.V1.Instances.CreateInstanceRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/IMSAdminApi.V1.Instances.CreateInstanceRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "Success"}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "201": {"description": "The resource was created. The location of the resource is available in the Location header of the response."}}}}, "/tenants/{tenantId}/invitations/{invitationId}": {"delete": {"tags": ["Invitations"], "summary": "Deletes an invitation", "operationId": "DeleteTenantInvitationAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "invitationId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "204": {"description": "The resource was successfully deleted."}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "get": {"tags": ["Invitations"], "summary": "Retrieves a specific invitation", "operationId": "GetTenantInvitationByIdAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "invitationId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.Invitation.V1.InvitationResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/invitations": {"get": {"tags": ["Invitations"], "summary": "Retrieves a list of invitations associated to this tenant", "operationId": "GetAllTenantInvitationsAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.Invitation.V1.InvitationListResponsePaginatedItemsViewModel"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "post": {"tags": ["Invitations"], "summary": "Creates and sends an invitation to a user", "operationId": "SendTenantInvitationAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Requests.SendInvitationRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Requests.SendInvitationRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Requests.SendInvitationRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Requests.SendInvitationRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "201": {"description": "The resource was created. The location of the resource is available in the Location header of the response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.Invitation.V1.InvitationSentResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/datasync/jobs/{jobId}/executions/{jobExecutionId}/logs": {"get": {"tags": ["Job Execution Logs"], "summary": "Retrieves a list of DataSync Job Execution Logs", "operationId": "GetAllTenantDataSyncJobExecutionLogs", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "jobId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "jobExecutionId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "search", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.JobExecutionLog.V1.JobExecutionLogEntryPaginatedItemsViewModel"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/datasync/jobs/{jobId}/executions": {"get": {"tags": ["Job Executions"], "summary": "Retrieves a list of DataSync Job Executions", "operationId": "GetAllTenantDataSyncJobExecutions", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "jobId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.JobExecution.V1.JobExecutionListResponsePaginatedItemsViewModel"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/datasync/jobtypes/{jobTypeId}": {"get": {"tags": ["Job Types"], "summary": "Retrieves a specific DataSync job type using its primary key", "operationId": "GetTenantDataSyncJobTypeProfileById", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "jobTypeId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.JobType.V1.JobTypeProfileResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/datasync/jobtypes": {"get": {"tags": ["Job Types"], "summary": "Retrieves a list of DataSync job types", "operationId": "GetAllTenantDataSyncJobTypes", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.JobType.V1.JobTypeListResponsePaginatedItemsViewModel"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/datasync/jobs/{jobId}/activate": {"post": {"tags": ["Jobs"], "summary": "Activate a DataSync job matching the primary key", "operationId": "ActivateTenantDataSyncJob", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "jobId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Job.V1.ActivateJobRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Job.V1.ActivateJobRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Job.V1.ActivateJobRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Job.V1.ActivateJobRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "202": {"description": "The request has been accepted for processing, but the processing is not yet complete."}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/datasync/jobs/{jobId}/cancel": {"post": {"tags": ["Jobs"], "summary": "Cancel a DataSync job matching the primary key", "operationId": "CancelTenantDataSyncJob", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "jobId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Job.V1.CancelJobRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Job.V1.CancelJobRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Job.V1.CancelJobRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Job.V1.CancelJobRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "202": {"description": "The request has been accepted for processing, but the processing is not yet complete."}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/datasync/jobs/{jobId}/deactivate": {"post": {"tags": ["Jobs"], "summary": "Deactivate a DataSync job matching the primary key", "operationId": "DeactivateTenantDataSyncJob", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "jobId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Job.V1.DeactivateJobRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Job.V1.DeactivateJobRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Job.V1.DeactivateJobRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Job.V1.DeactivateJobRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "202": {"description": "The request has been accepted for processing, but the processing is not yet complete."}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/datasync/jobs/{jobId}/execute": {"post": {"tags": ["Jobs"], "summary": "Execute a DataSync job matching the primary key", "operationId": "ExecuteTenantDataSyncJob", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "jobId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Job.V1.ExecuteJobRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Job.V1.ExecuteJobRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Job.V1.ExecuteJobRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Job.V1.ExecuteJobRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "202": {"description": "The request has been accepted for processing, but the processing is not yet complete."}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/datasync/jobs/{jobId}": {"delete": {"tags": ["Jobs"], "summary": "Delete a DataSync job matching the primary key", "operationId": "DeleteTenantDataSyncJob", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "jobId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Job.V1.DeleteJobRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Job.V1.DeleteJobRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Job.V1.DeleteJobRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Job.V1.DeleteJobRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "204": {"description": "The resource was successfully deleted."}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}}}, "get": {"tags": ["Jobs"], "summary": "Retrieves a specific DataSync job using its primary key", "operationId": "GetTenantDataSyncJobProfileById", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "jobId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Job.V1.JobProfileResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "put": {"tags": ["Jobs"], "summary": "Updates a DataSync job matching the primary key", "operationId": "UpdateTenantDataSyncJob", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "jobId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Requests.Jobs.UpdateJobRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Requests.Jobs.UpdateJobRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Requests.Jobs.UpdateJobRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Requests.Jobs.UpdateJobRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "202": {"description": "The request has been accepted for processing, but the processing is not yet complete."}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/datasync/jobs": {"get": {"tags": ["Jobs"], "summary": "Retrieves a list of DataSync Jobs", "operationId": "GetAllTenantDataSyncJobs", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Job.V1.JobListResponsePaginatedItemsViewModel"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "post": {"tags": ["Jobs"], "summary": "Creates a new DataSync job", "operationId": "CreateTenantDataSyncJob", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Requests.Jobs.CreateJobRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Requests.Jobs.CreateJobRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Requests.Jobs.CreateJobRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Requests.Jobs.CreateJobRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "201": {"description": "The resource was created. The location of the resource is available in the Location header of the response."}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/validations/jobs/{jobId}/cancel": {"post": {"tags": ["Jobs"], "summary": "Requests a Job cancellation.", "operationId": "CancelJob", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "jobId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Core.V1.EmptyResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/validations/jobs/{jobId}/execute": {"post": {"tags": ["Jobs"], "summary": "Requests a Job execution.", "operationId": "ExecuteJob", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "jobId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Core.V1.EmptyResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/validations/jobs/{jobId}/restart": {"post": {"tags": ["Jobs"], "summary": "Requests a Job schedule restart.", "operationId": "RestartJobSchedule", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "jobId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved."}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/validations/jobs/{jobId}": {"delete": {"tags": ["Jobs"], "summary": "Deletes a Job.", "operationId": "DeleteJob", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "jobId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details."}, "204": {"description": "The resource was successfully deleted."}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}, "get": {"tags": ["Jobs"], "summary": "Retrieves a Job by ID.", "operationId": "GetJobById", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "jobId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Jobs.V1.JobProfileResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}, "put": {"tags": ["Jobs"], "summary": "Updates a Job.", "operationId": "UpdateJob", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "jobId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Jobs.V1.UpdateRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Jobs.V1.UpdateRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Jobs.V1.UpdateRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Jobs.V1.UpdateRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved."}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/validations/jobs": {"get": {"tags": ["Jobs"], "summary": "Retrieves a list of Jobs.", "operationId": "GetJobs", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string"}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Jobs.V1.PaginatedItemsResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "post": {"tags": ["Jobs"], "summary": "Creates a Job.", "operationId": "CreateJob", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Jobs.V1.CreateRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Jobs.V1.CreateRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Jobs.V1.CreateRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Jobs.V1.CreateRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "201": {"description": "The resource was created. The location of the resource is available in the Location header of the response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Core.V1.CreatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/validations/logs": {"get": {"tags": ["Logs"], "summary": "Retrieves a list of Logs.", "operationId": "GetLogs", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string"}}, {"name": "environmentId", "in": "query", "description": "", "schema": {"type": "string"}}, {"name": "collectionId", "in": "query", "description": "", "schema": {"type": "string"}}, {"name": "containerId", "in": "query", "description": "", "schema": {"type": "string"}}, {"name": "ruleId", "in": "query", "description": "", "schema": {"type": "string"}}, {"name": "jobId", "in": "query", "description": "", "schema": {"type": "string"}}, {"name": "jobExecutionId", "in": "query", "description": "", "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.RuleExecutionLogs.V1.FindResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/me/extensions/{code}": {"delete": {"tags": ["My Extensions"], "summary": "Removes a user's profile extension.", "operationId": "RemoveUserExtension", "parameters": [{"name": "code", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.UserExtensionRemovedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/me/extensions": {"post": {"tags": ["My Extensions"], "summary": "Creates or update a user's profile extension.", "operationId": "SetUserExtension", "parameters": [{"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.SetUserExtensionRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.SetUserExtensionRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.SetUserExtensionRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.SetUserExtensionRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.UserExtensionSetResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/me/preferences": {"post": {"tags": ["My Preferences"], "summary": "Creates or update a user's preference.", "operationId": "UpdateUserPreferenceAsync", "parameters": [{"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Requests.UpdateUserPreferenceRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Requests.UpdateUserPreferenceRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Requests.UpdateUserPreferenceRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Requests.UpdateUserPreferenceRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.UserPreferenceUpdatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/me": {"get": {"tags": ["My Profile"], "summary": "Retrieves the profile of the user that is currently logged in, including the user's preferences and its associated tenants", "operationId": "GetUserCacheAsync", "parameters": [{"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Platform.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.UserCacheResponse"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/onboardingsteps/{stepNumber}": {"put": {"tags": ["OnboardingSteps"], "summary": "Updates the status of an Onboarding Step.", "operationId": "UpdateOnboardingStepAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "stepNumber", "in": "path", "description": "", "required": true, "schema": {"type": "integer", "format": "int32"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.UpdateOnboardingStepRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.UpdateOnboardingStepRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.UpdateOnboardingStepRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.UpdateOnboardingStepRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.TenantUpdatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/onboardingsteps": {"post": {"tags": ["OnboardingSteps"], "summary": "Creates an Onboarding Step.", "operationId": "CreateOnboardingStepAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.CreateOnboardingStepRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.CreateOnboardingStepRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.CreateOnboardingStepRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.CreateOnboardingStepRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.TenantUpdatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/organizations/{organizationIdentifier}": {"delete": {"tags": ["Organizations"], "summary": "Deletes an Organization.", "operationId": "DeleteOrganizationAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "organizationIdentifier", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.OrganizationDeletedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}, "get": {"tags": ["Organizations"], "summary": "Retrieves an Organization by ID.", "operationId": "GetOrganizationByIdAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "organizationIdentifier", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.Organization"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}, "put": {"tags": ["Organizations"], "summary": "Updates an Organization.", "operationId": "UpdateOrganizationAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "organizationIdentifier", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.UpdateOrganizationRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.UpdateOrganizationRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.UpdateOrganizationRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.UpdateOrganizationRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.OrganizationUpdatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/organizations/instances": {"get": {"tags": ["Organizations"], "summary": "Retrieves the tenant's Ed-Fi Admin instances.", "operationId": "GetEdFiAdminInstancesAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string", "default": "instanceName"}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.GetEdFiAdminInstancesResponse"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/organizations/sync": {"post": {"tags": ["Organizations"], "summary": "Syncs an Ed-Fi Admin instance's organizations into the Tenant's organizations.", "operationId": "SyncOrganizationsAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.SyncOrganizationsRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.SyncOrganizationsRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.SyncOrganizationsRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.SyncOrganizationsRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "201": {"description": "Created", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.OrganizationsSyncedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved."}}}}, "/tenants/{tenantId}/organizations": {"get": {"tags": ["Organizations"], "summary": "Retrieves a list of Organizations.", "operationId": "GetOrganizationsAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.GetOrganizationsPaginatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "post": {"tags": ["Organizations"], "summary": "Creates an Organization.", "operationId": "CreateOrganizationAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.CreateOrganizationRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.CreateOrganizationRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.CreateOrganizationRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.CreateOrganizationRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "201": {"description": "The resource was created. The location of the resource is available in the Location header of the response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.OrganizationCreatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/datasync/providers/{providerId}": {"get": {"tags": ["Providers"], "summary": "Retrieves a specific DataSync provider using its primary key", "operationId": "GetTenantDataSyncProviderProfileById", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "providerId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Provider.V1.ProviderProfileResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/datasync/providers": {"get": {"tags": ["Providers"], "summary": "Retrieves a list of DataSync providers", "operationId": "GetAllTenantDataSyncProviders", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Provider.V1.ProviderListResponsePaginatedItemsViewModel"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}}}}, "/registrations/azure/mona": {"post": {"tags": ["Registrations - Azure Marketplace"], "summary": "Submits a tenant's registration request received through Azure [M]arketplace [On]boarding [A]ccelerator (MONA)", "operationId": "SubmitTenantRegistrationAzureMonaAsync", "parameters": [{"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/RegistrationApi.Registration.V2.SubmitTenantRegistrationRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/RegistrationApi.Registration.V2.SubmitTenantRegistrationRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/RegistrationApi.Registration.V2.SubmitTenantRegistrationRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/RegistrationApi.Registration.V2.SubmitTenantRegistrationRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"type": "string"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/public/applications": {"get": {"tags": ["Registrations"], "summary": "Gets a list of applications available for registration/onboarding", "operationId": "GetOnboardingApplicationsAsync", "parameters": [{"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ApplicationApi.Application.V1.PaginatedItemsResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/registrations/{registrationId}": {"get": {"tags": ["Registrations"], "summary": "Gets the approval status of a registration", "operationId": "GetRegistrationApprovalStatusAsync", "parameters": [{"name": "registrationId", "in": "path", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/RegistrationApi.Registration.V2.ApprovalStatus"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/registrations": {"post": {"tags": ["Registrations"], "summary": "Submits a tenant's registration request", "operationId": "SubmitTenantRegistrationAsync", "parameters": [{"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/RegistrationApi.Registration.V2.SubmitTenantRegistrationRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/RegistrationApi.Registration.V2.SubmitTenantRegistrationRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/RegistrationApi.Registration.V2.SubmitTenantRegistrationRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/RegistrationApi.Registration.V2.SubmitTenantRegistrationRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"type": "string"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/analytics/reports/{reportId}": {"delete": {"tags": ["Reports"], "summary": "Removes a report.", "operationId": "DeleteReportAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "reportId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details."}, "200": {"description": "The requested resource was successfully retrieved."}, "404": {"description": "Not Found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}}}, "get": {"tags": ["Reports"], "summary": "Retrieves a Report by ID.", "operationId": "GetReportByIdAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "reportId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details."}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Reports.V1.ReportResponse"}}}}, "404": {"description": "Not Found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}}}, "put": {"tags": ["Reports"], "summary": "Updates a report.", "operationId": "UpdateReportAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "reportId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Reports.V1.UpdateReportRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Reports.V1.UpdateReportRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Reports.V1.UpdateReportRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Reports.V1.UpdateReportRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details."}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Reports.V1.AnalyticsReport"}}}}, "404": {"description": "Not Found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/analytics/reports/sync": {"post": {"tags": ["Reports"], "summary": "Triggers workspace, ODS and DW automation.", "operationId": "SyncWorkspacesAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Reports.V1.SyncWorkspacesRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Reports.V1.SyncWorkspacesRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Reports.V1.SyncWorkspacesRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Reports.V1.SyncWorkspacesRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details."}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Reports.V1.EmptyResponse"}}}}, "404": {"description": "Not Found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/analytics/reports": {"get": {"tags": ["Reports"], "summary": "Retrieves all reports.", "operationId": "GetAllTenantAnalyticsWorkspaceReportsAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details."}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Reports.V1.ReportPaginatedItemsResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}}}, "post": {"tags": ["Reports"], "summary": "Creates a new report (Does not upload pbix file).", "operationId": "CreateReportAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"content": {"multipart/form-data": {"schema": {"type": "object", "properties": {"File": {"type": "string", "format": "binary"}, "Name": {"type": "string"}, "ShortDescription": {"type": "string"}, "Description": {"type": "string"}, "Tags": {"type": "string"}}}, "encoding": {"File": {"style": "form"}, "Name": {"style": "form"}, "ShortDescription": {"style": "form"}, "Description": {"style": "form"}, "Tags": {"style": "form"}}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details."}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Reports.V1.ReportIdResponse"}}}}, "404": {"description": "Not Found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/validations/rules/{ruleId}": {"delete": {"tags": ["Rules"], "summary": "Deletes a Rule.", "operationId": "DeleteRule", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "ruleId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "204": {"description": "The resource was successfully deleted."}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}, "get": {"tags": ["Rules"], "summary": "Retrieves a Rule by ID.", "operationId": "GetRuleById", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "ruleId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Rules.V1.RuleDto"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}, "put": {"tags": ["Rules"], "summary": "Updates a Rule.", "operationId": "UpdateRule", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "ruleId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Rules.V1.UpdateRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Rules.V1.UpdateRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Rules.V1.UpdateRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Rules.V1.UpdateRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved."}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/validations/rules": {"get": {"tags": ["Rules"], "summary": "Retrieves a list of Rules.", "operationId": "GetRules", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string"}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Rules.V1.PaginatedRules"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "post": {"tags": ["Rules"], "summary": "Creates a Rule.", "operationId": "CreateRule", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Rules.V1.CreateRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Rules.V1.CreateRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Rules.V1.CreateRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Rules.V1.CreateRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "201": {"description": "The resource was created. The location of the resource is available in the Location header of the response."}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/staffclassifications/{staffClassificationId}": {"delete": {"tags": ["StaffClassifications"], "summary": "Deletes a StaffClassification.", "operationId": "DeleteStaffClassification", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "staffClassificationId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.StaffClassification.V1.StaffClassificationDeletedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "get": {"tags": ["StaffClassifications"], "summary": "Retrieves a StaffClassification by ID.", "operationId": "GetStaffClassificationById", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "staffClassificationId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.StaffClassification.V1.StaffClassificationResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}, "put": {"tags": ["StaffClassifications"], "summary": "Updates a StaffClassification.", "operationId": "UpdateStaffClassification", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "staffClassificationId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.StaffClassification.V1.UpdateStaffClassificationRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.StaffClassification.V1.UpdateStaffClassificationRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.StaffClassification.V1.UpdateStaffClassificationRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.StaffClassification.V1.UpdateStaffClassificationRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.StaffClassification.V1.StaffClassificationUpdatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/staffclassifications": {"get": {"tags": ["StaffClassifications"], "summary": "Retrieves a list of StaffClassifications.", "operationId": "GetStaffClassifications", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.StaffClassification.V1.GetStaffClassificationsResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "post": {"tags": ["StaffClassifications"], "summary": "Creates a StaffClassification.", "operationId": "CreateStaffClassification", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.StaffClassification.V1.CreateStaffClassificationRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.StaffClassification.V1.CreateStaffClassificationRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.StaffClassification.V1.CreateStaffClassificationRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.StaffClassification.V1.CreateStaffClassificationRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "201": {"description": "The resource was created. The location of the resource is available in the Location header of the response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.StaffClassification.V1.StaffClassificationCreatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/subscriptions/{subscriptionId}": {"get": {"tags": ["Subscriptions"], "summary": "Retrieves a subscription", "operationId": "GetTenantSubscriptionProfileByIdAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "subscriptionId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.SubscriptionProfileResponseDto"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}, "put": {"tags": ["Subscriptions"], "summary": "Updates a subscription", "operationId": "UpdateTenantSubscriptionAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "subscriptionId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.UpdateSubscriptionRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.UpdateSubscriptionRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.UpdateSubscriptionRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.UpdateSubscriptionRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.SubscriptionUpdatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/subscriptions/applications": {"get": {"tags": ["Subscriptions"], "summary": "Retrieves a list of applications available for subscription.", "operationId": "GetAllTenantSubscriptionApplications", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ApplicationApi.Application.V1.PaginatedItemsResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/subscriptions": {"get": {"tags": ["Subscriptions"], "summary": "Retrieves a list of subscriptions associated to this tenant", "operationId": "GetAllTenantSubscriptionsAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.SubscriptionListResponseDtoPaginatedItemsViewModel"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "post": {"tags": ["Subscriptions"], "summary": "Creates a new subscription", "operationId": "CreateTenantSubscriptionAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.CreateSubscriptionRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.CreateSubscriptionRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.CreateSubscriptionRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.CreateSubscriptionRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "201": {"description": "The resource was created. The location of the resource is available in the Location header of the response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.SubscriptionCreatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/validations/tags/{tagId}": {"delete": {"tags": ["Tags"], "summary": "Deletes a Tag.", "operationId": "DeleteTag", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "tagId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "204": {"description": "The resource was successfully deleted."}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}, "get": {"tags": ["Tags"], "summary": "Retrieves a Tag by ID.", "operationId": "GetTagById", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "tagId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Tags.V1.TagDto"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}, "put": {"tags": ["Tags"], "summary": "Updates a Tag.", "operationId": "UpdateTag", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "tagId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Tags.V1.UpdateRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Tags.V1.UpdateRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Tags.V1.UpdateRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Tags.V1.UpdateRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved."}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/validations/tags": {"get": {"tags": ["Tags"], "summary": "Retrieves a list of Tags.", "operationId": "GetTags", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string"}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Tags.V1.PaginatedTags"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "post": {"tags": ["Tags"], "summary": "Creates a Tag.", "operationId": "CreateTag", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Tags.V1.CreateRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Tags.V1.CreateRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Tags.V1.CreateRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Tags.V1.CreateRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "201": {"description": "The resource was created. The location of the resource is available in the Location header of the response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Core.V1.CreatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}": {"get": {"tags": ["Tenants"], "summary": "Retrieves the profile of a specific tenant", "operationId": "GetTenantByIdAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.TenantProfileResponse"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}, "put": {"tags": ["Tenants"], "summary": "Updates a tenant's profile", "description": "Note: Only the tenant's Identity Providers can be updated at this time", "operationId": "UpdateTenantAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Requests.Tenants.UpdateTenantRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Requests.Tenants.UpdateTenantRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Requests.Tenants.UpdateTenantRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Requests.Tenants.UpdateTenantRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.TenantUpdatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/users/{userId}/educationorganizations/{educationOrganizationId}": {"delete": {"tags": ["Users - Education Organizations"], "summary": "Removes an Education Organization from a user.", "operationId": "RemoveUserEducationOrganization", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "userId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "educationOrganizationId", "in": "path", "description": "", "required": true, "schema": {"type": "integer", "format": "int32"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.EducationOrganizationRemovedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}, "put": {"tags": ["Users - Education Organizations"], "summary": "Updates the Education Organization of a user.", "operationId": "UpdateUserEducationOrganization", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "userId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "educationOrganizationId", "in": "path", "description": "", "required": true, "schema": {"type": "integer", "format": "int32"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Requests.EducationOrganizations.UpdateEducationOrganizationRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Requests.EducationOrganizations.UpdateEducationOrganizationRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Requests.EducationOrganizations.UpdateEducationOrganizationRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Requests.EducationOrganizations.UpdateEducationOrganizationRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.EducationOrganizationUpdatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/users/{userId}/educationorganizations": {"get": {"tags": ["Users - Education Organizations"], "summary": "Gets the Education Organizations of a user.", "operationId": "GetUserEducationOrganizations", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "userId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.EducationOrganizationPaginatedItemsResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}, "post": {"tags": ["Users - Education Organizations"], "summary": "Adds an Education Organization to a user.", "operationId": "AddUserEducationOrganization", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "userId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Requests.EducationOrganizations.AddEducationOrganizationRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Requests.EducationOrganizations.AddEducationOrganizationRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Requests.EducationOrganizations.AddEducationOrganizationRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Requests.EducationOrganizations.AddEducationOrganizationRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.EducationOrganizationAddedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/users/{userId}/licenses/assignbulk": {"put": {"tags": ["Users - Licenses"], "summary": "Assigns one or more licenses to a user in the context of a specific tenant", "operationId": "AssignLicenseTenantUserBulkAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "userId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Requests.Licenses.AssignLicenseBulkRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Requests.Licenses.AssignLicenseBulkRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Requests.Licenses.AssignLicenseBulkRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Requests.Licenses.AssignLicenseBulkRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.LicenseAssignedBulkResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/users/{userId}/licenses/assign": {"put": {"tags": ["Users - Licenses"], "summary": "Assigns a license to a user in the context of a specific tenant", "operationId": "AssignLicenseTenantUserAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "userId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Requests.Licenses.AssignLicenseRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Requests.Licenses.AssignLicenseRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Requests.Licenses.AssignLicenseRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Requests.Licenses.AssignLicenseRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.LicenseAssignedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/users/{userId}/licenses/revokebulk": {"put": {"tags": ["Users - Licenses"], "summary": "Revokes one or more licenses from a user in the context of a specific tenant", "operationId": "RevokeLicenseTenantUserBulkAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "userId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Requests.Licenses.RevokeLicenseBulkRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Requests.Licenses.RevokeLicenseBulkRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Requests.Licenses.RevokeLicenseBulkRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Requests.Licenses.RevokeLicenseBulkRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.LicenseRevokedBulkResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/users/{userId}/licenses/revoke": {"put": {"tags": ["Users - Licenses"], "summary": "Revokes a license from a user in the context of a specific tenant", "operationId": "RevokeLicenseTenantUserAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "userId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.RevokeLicenseRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.RevokeLicenseRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.RevokeLicenseRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.RevokeLicenseRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.LicenseRevokedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/users/{userId}/licenses": {"get": {"tags": ["Users - Licenses"], "summary": "Retrieves a list of user licenses in the context of a specific tenant", "operationId": "GetAllTenantUserApplicationLicensesAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "userId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Platform.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.UserLicensePaginatedItemsViewModel"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/users/{email}/status": {"get": {"tags": ["Users"], "summary": "Searches a user by email and retrieves it's minimal information and status.", "operationId": "GetUserTenantStatusProfile", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "email", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.UserTenantStatusProfile"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/users/{userId}/activate": {"put": {"tags": ["Users"], "summary": "Activates a user", "operationId": "ActivateTenantUserAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "userId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.ActivateUserRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.ActivateUserRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.ActivateUserRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.ActivateUserRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.UserActivatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/users/{userId}/deactivate": {"put": {"tags": ["Users"], "summary": "Deactivates a user", "operationId": "DeactivateTenantUserAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "userId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.DeactivateUserRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.DeactivateUserRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.DeactivateUserRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.DeactivateUserRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.UserDeactivatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/users/{userId}/resetpassword": {"put": {"tags": ["Users"], "summary": "Resets a user's password", "description": "Note: This is only applicable to user created in the local identity provider.", "operationId": "ResetPasswordTenantUserAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "userId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.ResetPasswordRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.ResetPasswordRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.ResetPasswordRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.ResetPasswordRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.PasswordResettedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/users/{userId}": {"delete": {"tags": ["Users"], "summary": "Deletes a user", "operationId": "DeleteTenantUserAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "userId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "204": {"description": "The resource was successfully deleted."}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "get": {"tags": ["Users"], "summary": "Retrieves a user", "operationId": "GetTenantUserProfileByIdAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "userId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Platform.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.UserProfileResponseWithApplicationLicense"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}, "put": {"tags": ["Users"], "summary": "Creates or updates a user", "operationId": "UpdateTenantUserAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "userId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.UpdateUserRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.UpdateUserRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.UpdateUserRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.UpdateUserRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.UserUpdatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/users": {"get": {"tags": ["Users"], "summary": "Retrieves a list of users associated to this tenant", "operationId": "GetAllTenantUsersAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Platform.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.UserListResponseWithApplicationLicensePaginatedItemsViewModel"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "post": {"tags": ["Users"], "summary": "Creates a user in the local identity provider", "description": "Note: This is only used to create a user in the local identity provider, i.e. this cannot be used to create a user in an external identity providers such as Microsoft or Google.", "operationId": "CreateTenantLocalUserAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Requests.CreateLocalUserRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Requests.CreateLocalUserRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Requests.CreateLocalUserRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Requests.CreateLocalUserRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "201": {"description": "The resource was created. The location of the resource is available in the Location header of the response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.LocalUserCreatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/cloudevents": {"post": {"tags": ["v1"], "summary": "Consumes a Cloud Event.", "operationId": "ConsumeCloudEvent", "parameters": [{"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/EdGraph.Services.CloudEvents.Core.CloudEventDto"}}, "application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Services.CloudEvents.Core.CloudEventDto"}}, "text/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Services.CloudEvents.Core.CloudEventDto"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/EdGraph.Services.CloudEvents.Core.CloudEventDto"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "202": {"description": "The Cloud Event was successfully consumed."}, "404": {"description": "The resource could not be found."}}}}, "/tenants/{tenantId}/webhooks/{webhookId}": {"delete": {"tags": ["Webhooks"], "summary": "Removes a webhook.", "operationId": "DeleteWebhookAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "webhookId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Webhook.V1.WebhookIdResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "get": {"tags": ["Webhooks"], "summary": "Retrieves a webhook by ID.", "operationId": "GetWebhookByIdAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "webhookId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Webhook.V1.WebhookResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "put": {"tags": ["Webhooks"], "summary": "Updates a webhook", "operationId": "UpdateWebhookAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "webhookId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/TenantApi.Webhook.V1.UpdateWebhookRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Webhook.V1.UpdateWebhookRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Webhook.V1.UpdateWebhookRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/TenantApi.Webhook.V1.UpdateWebhookRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Webhook.V1.WebhookIdResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/webhooks/events": {"get": {"tags": ["Webhooks"], "operationId": "GetAllWebhookSubscriptionsAsync", "parameters": [{"name": "tenantId", "in": "path", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "Success", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Webhook.V1.WebhookEventsResponse"}}}}, "400": {"description": "Bad Request", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/webhooks": {"get": {"tags": ["Webhooks"], "summary": "Retrieves a list of webhooks.", "operationId": "GetAllWebhooksAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Webhook.V1.PaginatedItemsResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "post": {"tags": ["Webhooks"], "summary": "Creates a new Webhook", "operationId": "CreateWebhookAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/TenantApi.Webhook.V1.CreateWebhookRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Webhook.V1.CreateWebhookRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Webhook.V1.CreateWebhookRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/TenantApi.Webhook.V1.CreateWebhookRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Webhook.V1.WebhookIdResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}}, "components": {"schemas": {"AnalyticsApi.Capacities.V1.AnalyticsCapacity": {"type": "object", "properties": {"capacityId": {"type": "string", "nullable": true}, "displayName": {"type": "string", "nullable": true}, "sku": {"type": "string", "nullable": true}, "state": {"type": "string", "nullable": true}, "region": {"type": "string", "nullable": true}, "capacityUserAccessRight": {"type": "string", "nullable": true}}, "additionalProperties": false}, "AnalyticsApi.Capacities.V1.AssignCapacityRequest": {"type": "object", "properties": {"groupId": {"type": "string", "nullable": true}, "capacityId": {"type": "string", "nullable": true}, "tenantId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "AnalyticsApi.Capacities.V1.CapacityResponse": {"type": "object", "properties": {"capacities": {"type": "array", "items": {"$ref": "#/components/schemas/AnalyticsApi.Capacities.V1.AnalyticsCapacity"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "AnalyticsApi.Capacities.V1.ResumeCapacityRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "dedicatedCapacityName": {"type": "string", "nullable": true}}, "additionalProperties": false}, "AnalyticsApi.Capacities.V1.SuspendCapacityRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "dedicatedCapacityName": {"type": "string", "nullable": true}}, "additionalProperties": false}, "AnalyticsApi.Configurations.V1.AnalyticsAzureAd": {"type": "object", "properties": {"clientId": {"type": "string", "nullable": true}, "azureTenantId": {"type": "string", "nullable": true}, "clientSecret": {"type": "string", "nullable": true}, "scopes": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}, "tenantId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "AnalyticsApi.Configurations.V1.AnalyticsConfiguration": {"type": "object", "properties": {"id": {"type": "string", "nullable": true}, "tenantId": {"type": "string", "nullable": true}, "sqlConnectionString": {"type": "string", "nullable": true}, "status": {"type": "string", "nullable": true}, "useEdGraphPowerBi": {"type": "boolean"}, "isGlobalConfiguration": {"type": "boolean"}, "isDefaultTenantConfiguration": {"type": "boolean"}, "azureAd": {"$ref": "#/components/schemas/AnalyticsApi.Configurations.V1.AnalyticsAzureAd"}, "powerBi": {"$ref": "#/components/schemas/AnalyticsApi.Configurations.V1.AnalyticsPowerBi"}, "selectedEdFiConnectionId": {"type": "string", "nullable": true}, "triggerOptions": {"type": "array", "items": {"$ref": "#/components/schemas/AnalyticsApi.Configurations.V1.AnalyticsTriggerOption"}, "nullable": true, "readOnly": true}, "schoolYears": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "AnalyticsApi.Configurations.V1.AnalyticsConfigurationPaginatedItemsViewModel": {"type": "object", "properties": {"pageIndex": {"type": "integer", "format": "int32"}, "pageSize": {"type": "integer", "format": "int32"}, "count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/AnalyticsApi.Configurations.V1.AnalyticsConfiguration"}, "nullable": true}}, "additionalProperties": false}, "AnalyticsApi.Configurations.V1.AnalyticsPowerBi": {"type": "object", "properties": {"capacityId": {"type": "string", "nullable": true}, "groupId": {"type": "string", "nullable": true}, "tenantId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "AnalyticsApi.Configurations.V1.AnalyticsTriggerOption": {"type": "object", "properties": {"startTime": {"type": "string", "nullable": true}, "endTime": {"type": "string", "nullable": true}, "recurrence": {"type": "string", "nullable": true}, "timeZone": {"type": "string", "nullable": true}, "interval": {"type": "integer", "format": "int32", "nullable": true}}, "additionalProperties": false}, "AnalyticsApi.Configurations.V1.ConfigurationResponse": {"type": "object", "properties": {"id": {"type": "string", "nullable": true}}, "additionalProperties": false}, "AnalyticsApi.Configurations.V1.CreateConfigurationRequest": {"type": "object", "properties": {"id": {"type": "string", "nullable": true}, "tenantId": {"type": "string", "nullable": true}, "sqlConnectionString": {"type": "string", "nullable": true}, "status": {"type": "string", "nullable": true}, "useEdGraphPowerBi": {"type": "boolean", "nullable": true}, "isGlobalConfiguration": {"type": "boolean", "nullable": true}, "isDefaultTenantConfiguration": {"type": "boolean", "nullable": true}, "azureAd": {"$ref": "#/components/schemas/AnalyticsApi.Configurations.V1.AnalyticsAzureAd"}, "powerBi": {"$ref": "#/components/schemas/AnalyticsApi.Configurations.V1.AnalyticsPowerBi"}, "selectedEdFiConnectionId": {"type": "string", "nullable": true}, "triggerOptions": {"type": "array", "items": {"$ref": "#/components/schemas/AnalyticsApi.Configurations.V1.AnalyticsTriggerOption"}, "nullable": true, "readOnly": true}, "schoolYears": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "AnalyticsApi.Configurations.V1.HasValidConfigurationResponse": {"type": "object", "properties": {"isConfigurationValid": {"type": "boolean"}}, "additionalProperties": false}, "AnalyticsApi.Configurations.V1.TestConnectionResponse": {"type": "object", "properties": {"isConnectionSuccessful": {"type": "boolean"}}, "additionalProperties": false}, "AnalyticsApi.Configurations.V1.UpdateConfigurationRequest": {"type": "object", "properties": {"id": {"type": "string", "nullable": true}, "tenantId": {"type": "string", "nullable": true}, "sqlConnectionString": {"type": "string", "nullable": true}, "status": {"type": "string", "nullable": true}, "useEdGraphPowerBi": {"type": "boolean", "nullable": true}, "isGlobalConfiguration": {"type": "boolean", "nullable": true}, "isDefaultTenantConfiguration": {"type": "boolean", "nullable": true}, "azureAd": {"$ref": "#/components/schemas/AnalyticsApi.Configurations.V1.AnalyticsAzureAd"}, "powerBi": {"$ref": "#/components/schemas/AnalyticsApi.Configurations.V1.AnalyticsPowerBi"}, "selectedEdFiConnectionId": {"type": "string", "nullable": true}, "triggerOptions": {"type": "array", "items": {"$ref": "#/components/schemas/AnalyticsApi.Configurations.V1.AnalyticsTriggerOption"}, "nullable": true, "readOnly": true}, "schoolYears": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "AnalyticsApi.Groups.V1.AddGroupUsersRequest": {"type": "object", "properties": {"groupId": {"type": "string", "nullable": true}, "users": {"type": "array", "items": {"$ref": "#/components/schemas/AnalyticsApi.Groups.V1.AnalyticsGroupUser"}, "nullable": true, "readOnly": true}, "addGlobalTenantUsers": {"type": "boolean"}, "tenantId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "AnalyticsApi.Groups.V1.AnalyticsGroupUser": {"type": "object", "properties": {"displayName": {"type": "string", "nullable": true}, "emailAddress": {"type": "string", "nullable": true}, "groupUserAccessRight": {"type": "string", "nullable": true}, "identifier": {"type": "string", "nullable": true}, "principalType": {"type": "string", "nullable": true}}, "additionalProperties": false}, "AnalyticsApi.Groups.V1.CreateGroupRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "groupName": {"type": "string", "nullable": true}}, "additionalProperties": false}, "AnalyticsApi.Groups.V1.GroupResponse": {"type": "object", "properties": {"groupId": {"type": "string", "nullable": true}, "groupName": {"type": "string", "nullable": true}, "capacityId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "AnalyticsApi.Groups.V1.GroupUsersResponse": {"type": "object", "properties": {"groupUsers": {"type": "array", "items": {"$ref": "#/components/schemas/AnalyticsApi.Groups.V1.AnalyticsGroupUser"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "AnalyticsApi.Groups.V1.GroupsResponse": {"type": "object", "properties": {"groups": {"type": "array", "items": {"$ref": "#/components/schemas/AnalyticsApi.Groups.V1.GroupResponse"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "AnalyticsApi.Reports.V1.AnalyticsEmbedToken": {"type": "object", "properties": {"token": {"type": "string", "nullable": true}, "tokenId": {"type": "string", "nullable": true}, "expiration": {"type": "string", "nullable": true}}, "additionalProperties": false}, "AnalyticsApi.Reports.V1.AnalyticsReport": {"type": "object", "properties": {"id": {"type": "string", "nullable": true}, "tenantId": {"type": "string", "nullable": true}, "reportId": {"type": "string", "nullable": true}, "groupId": {"type": "string", "nullable": true}, "datasetIds": {"type": "array", "items": {"$ref": "#/components/schemas/AnalyticsApi.Reports.V1.AnalyticsReportDataset"}, "nullable": true, "readOnly": true}, "name": {"type": "string", "nullable": true}, "reportName": {"type": "string", "nullable": true}, "shortDescription": {"type": "string", "nullable": true}, "description": {"type": "string", "nullable": true}, "embedUrl": {"type": "string", "nullable": true}, "type": {"type": "string", "nullable": true}, "isInternal": {"type": "boolean"}, "isVisible": {"type": "boolean"}, "tags": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "AnalyticsApi.Reports.V1.AnalyticsReportDataset": {"type": "object", "properties": {"datasetId": {"type": "string", "nullable": true}, "isEffectiveIdentityRequired": {"type": "boolean"}, "isEffectiveIdentityRolesRequired": {"type": "boolean"}}, "additionalProperties": false}, "AnalyticsApi.Reports.V1.EmptyResponse": {"type": "object", "additionalProperties": false}, "AnalyticsApi.Reports.V1.ReportIdResponse": {"type": "object", "properties": {"id": {"type": "string", "nullable": true}}, "additionalProperties": false}, "AnalyticsApi.Reports.V1.ReportPaginatedItemsResponse": {"type": "object", "properties": {"pageIndex": {"type": "integer", "format": "int32"}, "pageSize": {"type": "integer", "format": "int32"}, "count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/AnalyticsApi.Reports.V1.AnalyticsReport"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "AnalyticsApi.Reports.V1.ReportResponse": {"type": "object", "properties": {"embedToken": {"$ref": "#/components/schemas/AnalyticsApi.Reports.V1.AnalyticsEmbedToken"}, "report": {"$ref": "#/components/schemas/AnalyticsApi.Reports.V1.AnalyticsReport"}}, "additionalProperties": false}, "AnalyticsApi.Reports.V1.SyncWorkspacesRequest": {"type": "object", "properties": {"id": {"type": "string", "nullable": true}, "tenantId": {"type": "string", "nullable": true}, "resetInstance": {"type": "boolean", "nullable": true}, "runEtlNow": {"type": "boolean", "nullable": true}}, "additionalProperties": false}, "AnalyticsApi.Reports.V1.UpdateReportRequest": {"type": "object", "properties": {"id": {"type": "string", "nullable": true}, "name": {"type": "string", "nullable": true}, "shortDescription": {"type": "string", "nullable": true}, "description": {"type": "string", "nullable": true}, "isInternal": {"type": "boolean", "nullable": true}, "isVisible": {"type": "boolean", "nullable": true}, "tags": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "ApplicationApi.Application.V1.ApplicationListResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "applicationId": {"type": "string", "nullable": true}, "applicationName": {"type": "string", "nullable": true}, "version": {"type": "string", "nullable": true}, "tags": {"type": "string", "nullable": true}, "groups": {"type": "string", "nullable": true}, "applicationStatus": {"$ref": "#/components/schemas/ApplicationApi.Application.V1.ApplicationStatus"}, "roles": {"type": "array", "items": {"$ref": "#/components/schemas/ApplicationApi.Application.V1.Role"}, "nullable": true, "readOnly": true}, "createdBy": {"type": "string", "nullable": true}, "createdDateTime": {"type": "string", "nullable": true}, "lastModifiedBy": {"type": "string", "nullable": true}, "lastModifiedDateTime": {"type": "string", "nullable": true}, "deletedAt": {"type": "string", "nullable": true}, "subscriptionType": {"$ref": "#/components/schemas/ApplicationApi.Application.V1.ApplicationSubscriptionType"}, "documentationUrl": {"type": "string", "nullable": true}}, "additionalProperties": false}, "ApplicationApi.Application.V1.ApplicationProfileResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "applicationId": {"type": "string", "nullable": true}, "applicationType": {"$ref": "#/components/schemas/ApplicationApi.Application.V1.ApplicationType"}, "applicationName": {"type": "string", "nullable": true}, "applicationUri": {"type": "string", "nullable": true}, "version": {"type": "string", "nullable": true}, "tooltipText": {"type": "string", "nullable": true}, "applicationDescription": {"type": "string", "nullable": true}, "tags": {"type": "string", "nullable": true}, "groups": {"type": "string", "nullable": true}, "applicationStatus": {"$ref": "#/components/schemas/ApplicationApi.Application.V1.ApplicationStatus"}, "openInNewWindow": {"type": "boolean"}, "roles": {"type": "array", "items": {"$ref": "#/components/schemas/ApplicationApi.Application.V1.Role"}, "nullable": true, "readOnly": true}, "createdBy": {"type": "string", "nullable": true}, "createdDateTime": {"type": "string", "nullable": true}, "lastModifiedBy": {"type": "string", "nullable": true}, "lastModifiedDateTime": {"type": "string", "nullable": true}, "clientId": {"type": "string", "nullable": true}, "subscriptionType": {"$ref": "#/components/schemas/ApplicationApi.Application.V1.ApplicationSubscriptionType"}}, "additionalProperties": false}, "ApplicationApi.Application.V1.ApplicationStatus": {"enum": ["Unknown", "Draft", "Published"], "type": "string"}, "ApplicationApi.Application.V1.ApplicationSubscriptionType": {"enum": ["Auto", "Manual", "None"], "type": "string"}, "ApplicationApi.Application.V1.ApplicationType": {"enum": ["Unknown", "SSO", "Link"], "type": "string"}, "ApplicationApi.Application.V1.PaginatedItemsResponse": {"type": "object", "properties": {"pageIndex": {"type": "integer", "format": "int32"}, "pageSize": {"type": "integer", "format": "int32"}, "count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/ApplicationApi.Application.V1.ApplicationListResponse"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "ApplicationApi.Application.V1.Role": {"type": "object", "properties": {"roleName": {"type": "string", "nullable": true}, "isDefault": {"type": "boolean"}, "isAvailableForTenants": {"type": "boolean"}, "displayName": {"type": "string", "nullable": true}, "description": {"type": "string", "nullable": true}, "sortOrder": {"type": "integer", "format": "int32"}}, "additionalProperties": false}, "ApplicationApi.Application.V1.UrlType": {"enum": ["Link", "Asset"], "type": "string"}, "DataSyncApi.Connection.V1.ConnectionListResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "connectionId": {"type": "string", "nullable": true}, "name": {"type": "string", "nullable": true}, "providerId": {"type": "string", "nullable": true}, "providerName": {"type": "string", "nullable": true}, "connectionTypeId": {"type": "string", "nullable": true}, "connectionTypeName": {"type": "string", "nullable": true}, "createdBy": {"type": "string", "nullable": true}, "createdDateTime": {"type": "string", "nullable": true}, "lastModifiedBy": {"type": "string", "nullable": true}, "lastModifiedDateTime": {"type": "string", "nullable": true}}, "additionalProperties": false}, "DataSyncApi.Connection.V1.ConnectionListResponsePaginatedItemsViewModel": {"type": "object", "properties": {"pageIndex": {"type": "integer", "format": "int32"}, "pageSize": {"type": "integer", "format": "int32"}, "count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/DataSyncApi.Connection.V1.ConnectionListResponse"}, "nullable": true}}, "additionalProperties": false}, "DataSyncApi.Connection.V1.ConnectionMetadata": {"type": "object", "properties": {"code": {"type": "string", "nullable": true}, "value": {"type": "string", "nullable": true}, "isSecret": {"type": "boolean"}}, "additionalProperties": false}, "DataSyncApi.Connection.V1.ConnectionProfileResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "connectionId": {"type": "string", "nullable": true}, "name": {"type": "string", "nullable": true}, "connectionMetadata": {"type": "array", "items": {"$ref": "#/components/schemas/DataSyncApi.Connection.V1.ConnectionMetadata"}, "nullable": true, "readOnly": true}, "providerId": {"type": "string", "nullable": true}, "providerName": {"type": "string", "nullable": true}, "connectionTypeId": {"type": "string", "nullable": true}, "connectionTypeName": {"type": "string", "nullable": true}, "createdBy": {"type": "string", "nullable": true}, "createdDateTime": {"type": "string", "nullable": true}, "lastModifiedBy": {"type": "string", "nullable": true}, "lastModifiedDateTime": {"type": "string", "nullable": true}}, "additionalProperties": false}, "DataSyncApi.Connection.V1.DeleteConnectionRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "connectionId": {"type": "string", "nullable": true}, "reason": {"type": "string", "nullable": true}}, "additionalProperties": false}, "DataSyncApi.Job.V1.ActivateJobRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "jobId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "DataSyncApi.Job.V1.CancelJobRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "jobId": {"type": "string", "nullable": true}, "childJobId": {"type": "string", "nullable": true}, "jobExecutionId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "DataSyncApi.Job.V1.ChildJob": {"type": "object", "properties": {"jobId": {"type": "string", "nullable": true}, "jobExecutionId": {"type": "string", "nullable": true}, "childJobId": {"type": "string", "nullable": true}, "childJobName": {"type": "string", "nullable": true}, "jobExecutionStatus": {"$ref": "#/components/schemas/DataSyncApi.Job.V1.JobExecutionStatus"}, "jobExecutionStartDateTime": {"type": "string", "nullable": true}, "jobExecutionEndDateTime": {"type": "string", "nullable": true}, "metrics": {"type": "array", "items": {"$ref": "#/components/schemas/DataSyncApi.Job.V1.Metric"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "DataSyncApi.Job.V1.DataRefreshType": {"enum": ["Unknown", "Full", "Deltasincelastjobexecution", "Deltasincespecificdatetime"], "type": "string"}, "DataSyncApi.Job.V1.DeactivateJobRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "jobId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "DataSyncApi.Job.V1.DeleteJobRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "jobId": {"type": "string", "nullable": true}, "reason": {"type": "string", "nullable": true}}, "additionalProperties": false}, "DataSyncApi.Job.V1.ExecuteJobRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "jobId": {"type": "string", "nullable": true}, "childJobId": {"type": "string", "nullable": true}, "dataRefreshType": {"$ref": "#/components/schemas/DataSyncApi.Job.V1.DataRefreshType"}, "dataRefreshSpecificDate": {"type": "string", "nullable": true}}, "additionalProperties": false}, "DataSyncApi.Job.V1.JobExecutionStatus": {"enum": ["Unknown", "Queued", "Running", "Completed", "CompletedWithErrors", "Cancelled", "Error", "QueuedForCancel"], "type": "string"}, "DataSyncApi.Job.V1.JobListResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "jobId": {"type": "string", "nullable": true}, "name": {"type": "string", "nullable": true}, "jobTypeId": {"type": "string", "nullable": true}, "jobTypeName": {"type": "string", "nullable": true}, "sourceConnectionId": {"type": "string", "nullable": true}, "destinationConnectionId": {"type": "string", "nullable": true}, "profileId": {"type": "string", "nullable": true}, "applicationId": {"type": "string", "nullable": true}, "schedule": {"$ref": "#/components/schemas/DataSyncApi.Job.V1.Schedule"}, "jobStatus": {"$ref": "#/components/schemas/DataSyncApi.Job.V1.JobStatus"}, "jobExecutionId": {"type": "string", "nullable": true}, "jobExecutionStatus": {"$ref": "#/components/schemas/DataSyncApi.Job.V1.JobExecutionStatus"}, "jobExecutionStartDateTime": {"type": "string", "nullable": true}, "jobExecutionEndDateTime": {"type": "string", "nullable": true}, "metrics": {"type": "array", "items": {"$ref": "#/components/schemas/DataSyncApi.Job.V1.Metric"}, "nullable": true, "readOnly": true}, "childJobs": {"type": "array", "items": {"$ref": "#/components/schemas/DataSyncApi.Job.V1.ChildJob"}, "nullable": true, "readOnly": true}, "createdBy": {"type": "string", "nullable": true}, "createdDateTime": {"type": "string", "nullable": true}, "lastModifiedBy": {"type": "string", "nullable": true}, "lastModifiedDateTime": {"type": "string", "nullable": true}}, "additionalProperties": false}, "DataSyncApi.Job.V1.JobListResponsePaginatedItemsViewModel": {"type": "object", "properties": {"pageIndex": {"type": "integer", "format": "int32"}, "pageSize": {"type": "integer", "format": "int32"}, "count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/DataSyncApi.Job.V1.JobListResponse"}, "nullable": true}}, "additionalProperties": false}, "DataSyncApi.Job.V1.JobMetadata": {"type": "object", "properties": {"code": {"type": "string", "nullable": true}, "value": {"type": "string", "nullable": true}}, "additionalProperties": false}, "DataSyncApi.Job.V1.JobProfileResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "jobId": {"type": "string", "nullable": true}, "name": {"type": "string", "nullable": true}, "jobTypeId": {"type": "string", "nullable": true}, "jobTypeName": {"type": "string", "nullable": true}, "sourceConnectionId": {"type": "string", "nullable": true}, "destinationConnectionId": {"type": "string", "nullable": true}, "profileId": {"type": "string", "nullable": true}, "profileName": {"type": "string", "nullable": true}, "applicationId": {"type": "string", "nullable": true}, "jobPoints": {"type": "integer", "format": "int32"}, "dataRefreshType": {"$ref": "#/components/schemas/DataSyncApi.Job.V1.DataRefreshType"}, "dataRefreshSpecificDate": {"type": "string", "nullable": true}, "maxApiFailure": {"type": "integer", "format": "int32"}, "maxApiRetry": {"type": "integer", "format": "int32"}, "jobCompleteCallbackUrl": {"type": "string", "nullable": true}, "jobMetadata": {"type": "array", "items": {"$ref": "#/components/schemas/DataSyncApi.Job.V1.JobMetadata"}, "nullable": true, "readOnly": true}, "schedule": {"$ref": "#/components/schemas/DataSyncApi.Job.V1.Schedule"}, "notificationEmails": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}, "jobStatus": {"$ref": "#/components/schemas/DataSyncApi.Job.V1.JobStatus"}, "jobExecutionId": {"type": "string", "nullable": true}, "jobExecutionStatus": {"$ref": "#/components/schemas/DataSyncApi.Job.V1.JobExecutionStatus"}, "jobExecutionStartDateTime": {"type": "string", "nullable": true}, "jobExecutionEndDateTime": {"type": "string", "nullable": true}, "metrics": {"type": "array", "items": {"$ref": "#/components/schemas/DataSyncApi.Job.V1.Metric"}, "nullable": true, "readOnly": true}, "childJobs": {"type": "array", "items": {"$ref": "#/components/schemas/DataSyncApi.Job.V1.ChildJob"}, "nullable": true, "readOnly": true}, "createdBy": {"type": "string", "nullable": true}, "createdDateTime": {"type": "string", "nullable": true}, "lastModifiedBy": {"type": "string", "nullable": true}, "lastModifiedDateTime": {"type": "string", "nullable": true}}, "additionalProperties": false}, "DataSyncApi.Job.V1.JobStatus": {"enum": ["Unknown", "Active", "Deactivated", "QueuedForDelete", "QueuedForScheduleRestart"], "type": "string"}, "DataSyncApi.Job.V1.Metric": {"type": "object", "properties": {"entity": {"type": "string", "nullable": true}, "processed": {"type": "integer", "format": "int32"}, "success": {"type": "integer", "format": "int32"}, "errors": {"type": "integer", "format": "int32"}}, "additionalProperties": false}, "DataSyncApi.Job.V1.Schedule": {"type": "object", "properties": {"enabled": {"type": "boolean"}, "beginDate": {"type": "string", "nullable": true}, "endDate": {"type": "string", "nullable": true}, "cron": {"type": "string", "nullable": true}, "timeZone": {"type": "string", "nullable": true}}, "additionalProperties": false}, "DataSyncApi.JobExecution.V1.ChildJob": {"type": "object", "properties": {"jobId": {"type": "string", "nullable": true}, "jobExecutionId": {"type": "string", "nullable": true}, "childJobId": {"type": "string", "nullable": true}, "childJobName": {"type": "string", "nullable": true}, "jobExecutionStatus": {"$ref": "#/components/schemas/DataSyncApi.JobExecution.V1.JobExecutionStatus"}, "jobExecutionStartDateTime": {"type": "string", "nullable": true}, "jobExecutionEndDateTime": {"type": "string", "nullable": true}, "metrics": {"type": "array", "items": {"$ref": "#/components/schemas/DataSyncApi.JobExecution.V1.Metric"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "DataSyncApi.JobExecution.V1.JobExecutionListResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "jobId": {"type": "string", "nullable": true}, "applicationId": {"type": "string", "nullable": true}, "jobExecutionId": {"type": "string", "nullable": true}, "jobExecutionStatus": {"$ref": "#/components/schemas/DataSyncApi.JobExecution.V1.JobExecutionStatus"}, "jobExecutionStartDateTime": {"type": "string", "nullable": true}, "jobExecutionEndDateTime": {"type": "string", "nullable": true}, "childJobs": {"type": "array", "items": {"$ref": "#/components/schemas/DataSyncApi.JobExecution.V1.ChildJob"}, "nullable": true, "readOnly": true}, "metrics": {"type": "array", "items": {"$ref": "#/components/schemas/DataSyncApi.JobExecution.V1.Metric"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "DataSyncApi.JobExecution.V1.JobExecutionListResponsePaginatedItemsViewModel": {"type": "object", "properties": {"pageIndex": {"type": "integer", "format": "int32"}, "pageSize": {"type": "integer", "format": "int32"}, "count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/DataSyncApi.JobExecution.V1.JobExecutionListResponse"}, "nullable": true}}, "additionalProperties": false}, "DataSyncApi.JobExecution.V1.JobExecutionStatus": {"enum": ["Unknown", "Queued", "Running", "Completed", "CompletedWithErrors", "Cancelled", "Error"], "type": "string"}, "DataSyncApi.JobExecution.V1.Metric": {"type": "object", "properties": {"entity": {"type": "string", "nullable": true}, "processed": {"type": "integer", "format": "int32"}, "success": {"type": "integer", "format": "int32"}, "errors": {"type": "integer", "format": "int32"}}, "additionalProperties": false}, "DataSyncApi.JobExecutionLog.V1.JobExecutionLogEntry": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "jobId": {"type": "string", "nullable": true}, "jobExecutionId": {"type": "string", "nullable": true}, "message": {"type": "string", "nullable": true}, "messageType": {"$ref": "#/components/schemas/DataSyncApi.JobExecutionLog.V1.MessageType"}, "loggedDateTime": {"type": "string", "nullable": true}, "errorCode": {"type": "string", "nullable": true}}, "additionalProperties": false}, "DataSyncApi.JobExecutionLog.V1.JobExecutionLogEntryPaginatedItemsViewModel": {"type": "object", "properties": {"pageIndex": {"type": "integer", "format": "int32"}, "pageSize": {"type": "integer", "format": "int32"}, "count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/DataSyncApi.JobExecutionLog.V1.JobExecutionLogEntry"}, "nullable": true}}, "additionalProperties": false}, "DataSyncApi.JobExecutionLog.V1.MessageType": {"enum": ["Information", "Warning", "SyncError", "FatalError"], "type": "string"}, "DataSyncApi.JobType.V1.JobMetadataField": {"type": "object", "properties": {"tab": {"type": "string", "nullable": true}, "code": {"type": "string", "nullable": true}, "label": {"type": "string", "nullable": true}, "validation": {"type": "string", "nullable": true}, "order": {"type": "string", "nullable": true}, "display": {"type": "boolean"}, "defaultValue": {"type": "string", "nullable": true}, "type": {"type": "string", "nullable": true}, "values": {"type": "string", "nullable": true}, "api": {"type": "string", "nullable": true}, "isSecret": {"type": "boolean"}}, "additionalProperties": false}, "DataSyncApi.JobType.V1.JobTypeListResponse": {"type": "object", "properties": {"jobTypeId": {"type": "string", "nullable": true}, "name": {"type": "string", "nullable": true}, "sourceConnectionTypeId": {"type": "string", "nullable": true}, "destinationConnectionTypeId": {"type": "string", "nullable": true}, "sourceConnectionRequired": {"type": "boolean"}, "destinationConnectionRequired": {"type": "boolean"}, "profiles": {"type": "array", "items": {"$ref": "#/components/schemas/DataSyncApi.JobType.V1.Profile"}, "nullable": true, "readOnly": true}, "createdBy": {"type": "string", "nullable": true}, "createdDateTime": {"type": "string", "nullable": true}, "lastModifiedBy": {"type": "string", "nullable": true}, "lastModifiedDateTime": {"type": "string", "nullable": true}}, "additionalProperties": false}, "DataSyncApi.JobType.V1.JobTypeListResponsePaginatedItemsViewModel": {"type": "object", "properties": {"pageIndex": {"type": "integer", "format": "int32"}, "pageSize": {"type": "integer", "format": "int32"}, "count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/DataSyncApi.JobType.V1.JobTypeListResponse"}, "nullable": true}}, "additionalProperties": false}, "DataSyncApi.JobType.V1.JobTypeProfileResponse": {"type": "object", "properties": {"jobTypeId": {"type": "string", "nullable": true}, "name": {"type": "string", "nullable": true}, "description": {"type": "string", "nullable": true}, "jobPoints": {"type": "integer", "format": "int32"}, "hasChildJobs": {"type": "boolean"}, "childJobField": {"type": "string", "nullable": true}, "sourceConnectionTypeId": {"type": "string", "nullable": true}, "destinationConnectionTypeId": {"type": "string", "nullable": true}, "sourceConnectionRequired": {"type": "boolean"}, "destinationConnectionRequired": {"type": "boolean"}, "jobMetadataFields": {"type": "array", "items": {"$ref": "#/components/schemas/DataSyncApi.JobType.V1.JobMetadataField"}, "nullable": true, "readOnly": true}, "profiles": {"type": "array", "items": {"$ref": "#/components/schemas/DataSyncApi.JobType.V1.Profile"}, "nullable": true, "readOnly": true}, "createdBy": {"type": "string", "nullable": true}, "createdDateTime": {"type": "string", "nullable": true}, "lastModifiedBy": {"type": "string", "nullable": true}, "lastModifiedDateTime": {"type": "string", "nullable": true}}, "additionalProperties": false}, "DataSyncApi.JobType.V1.Profile": {"type": "object", "properties": {"jobTypeId": {"type": "string", "nullable": true}, "profileId": {"type": "string", "nullable": true}, "name": {"type": "string", "nullable": true}, "description": {"type": "string", "nullable": true}, "actorType": {"type": "string", "nullable": true}}, "additionalProperties": false}, "DataSyncApi.Provider.V1.ConnectionMetadataField": {"type": "object", "properties": {"tab": {"type": "string", "nullable": true}, "code": {"type": "string", "nullable": true}, "label": {"type": "string", "nullable": true}, "validation": {"type": "string", "nullable": true}, "order": {"type": "string", "nullable": true}, "display": {"type": "boolean"}, "defaultValue": {"type": "string", "nullable": true}, "type": {"type": "string", "nullable": true}, "values": {"type": "string", "nullable": true}, "api": {"type": "string", "nullable": true}, "isSecret": {"type": "boolean"}}, "additionalProperties": false}, "DataSyncApi.Provider.V1.ConnectionType": {"type": "object", "properties": {"providerId": {"type": "string", "nullable": true}, "connectionTypeId": {"type": "string", "nullable": true}, "name": {"type": "string", "nullable": true}, "description": {"type": "string", "nullable": true}, "documentationUri": {"type": "string", "nullable": true}, "connectionMetadataFields": {"type": "array", "items": {"$ref": "#/components/schemas/DataSyncApi.Provider.V1.ConnectionMetadataField"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "DataSyncApi.Provider.V1.ProviderListResponse": {"type": "object", "properties": {"providerId": {"type": "string", "nullable": true}, "name": {"type": "string", "nullable": true}, "description": {"type": "string", "nullable": true}, "iconUri": {"type": "string", "nullable": true}, "connectionTypes": {"type": "array", "items": {"$ref": "#/components/schemas/DataSyncApi.Provider.V1.ConnectionType"}, "nullable": true, "readOnly": true}, "createdBy": {"type": "string", "nullable": true}, "createdDateTime": {"type": "string", "nullable": true}, "lastModifiedBy": {"type": "string", "nullable": true}, "lastModifiedDateTime": {"type": "string", "nullable": true}}, "additionalProperties": false}, "DataSyncApi.Provider.V1.ProviderListResponsePaginatedItemsViewModel": {"type": "object", "properties": {"pageIndex": {"type": "integer", "format": "int32"}, "pageSize": {"type": "integer", "format": "int32"}, "count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/DataSyncApi.Provider.V1.ProviderListResponse"}, "nullable": true}}, "additionalProperties": false}, "DataSyncApi.Provider.V1.ProviderProfileResponse": {"type": "object", "properties": {"providerId": {"type": "string", "nullable": true}, "name": {"type": "string", "nullable": true}, "description": {"type": "string", "nullable": true}, "iconUri": {"type": "string", "nullable": true}, "connectionTypes": {"type": "array", "items": {"$ref": "#/components/schemas/DataSyncApi.Provider.V1.ConnectionType"}, "nullable": true, "readOnly": true}, "createdBy": {"type": "string", "nullable": true}, "createdDateTime": {"type": "string", "nullable": true}, "lastModifiedBy": {"type": "string", "nullable": true}, "lastModifiedDateTime": {"type": "string", "nullable": true}}, "additionalProperties": false}, "EdFiAdminApi.ApplicationAccess.V1.ApplicationAccessResponse": {"type": "object", "properties": {"id": {"type": "string", "nullable": true}, "tenantId": {"type": "string", "nullable": true}, "applicationId": {"type": "integer", "format": "int32"}, "apiClientId": {"type": "integer", "format": "int32"}, "users": {"type": "array", "items": {"$ref": "#/components/schemas/EdFiAdminApi.ApplicationAccess.V1.ApplicationUserAccessResponse"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "EdFiAdminApi.ApplicationAccess.V1.ApplicationAccessResponsePaginatedItemsViewModel": {"type": "object", "properties": {"pageIndex": {"type": "integer", "format": "int32"}, "pageSize": {"type": "integer", "format": "int32"}, "count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/EdFiAdminApi.ApplicationAccess.V1.ApplicationAccessResponse"}, "nullable": true}}, "additionalProperties": false}, "EdFiAdminApi.ApplicationAccess.V1.ApplicationUserAccessResponse": {"type": "object", "properties": {"userId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "EdFiAdminApi.ApplicationAccess.V1.CreateApplicationAccessRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "applicationId": {"type": "integer", "format": "int32"}, "apiClientId": {"type": "integer", "format": "int32"}, "users": {"type": "array", "items": {"$ref": "#/components/schemas/EdFiAdminApi.ApplicationAccess.V1.ApplicationUserAccessResponse"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "EdFiAdminApi.ApplicationAccess.V1.UpdateApplicationAccessRequest": {"type": "object", "properties": {"id": {"type": "string", "nullable": true}, "tenantId": {"type": "string", "nullable": true}, "applicationId": {"type": "integer", "format": "int32"}, "apiClientId": {"type": "integer", "format": "int32"}, "users": {"type": "array", "items": {"$ref": "#/components/schemas/EdFiAdminApi.ApplicationAccess.V1.ApplicationUserAccessResponse"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "EdGraph.Common.Errors.Core.ProblemDetails": {"type": "object", "properties": {"type": {"type": "string", "nullable": true}, "status": {"type": "integer", "format": "int32"}, "title": {"type": "string", "nullable": true}, "details": {"type": "string", "nullable": true}, "instance": {"type": "string", "nullable": true}, "extensions": {"type": "object", "additionalProperties": {"nullable": true}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Requests.Connections.ConnectionMetadata": {"type": "object", "properties": {"code": {"type": "string", "nullable": true}, "value": {"type": "string", "nullable": true}, "isSecret": {"type": "boolean"}}, "additionalProperties": false}, "EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Requests.Connections.CreateConnectionRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "connectionId": {"type": "string", "nullable": true}, "name": {"type": "string", "nullable": true}, "providerId": {"type": "string", "nullable": true}, "connectionTypeId": {"type": "string", "nullable": true}, "connectionMetadata": {"type": "array", "items": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Requests.Connections.ConnectionMetadata"}, "nullable": true}}, "additionalProperties": false}, "EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Requests.Connections.UpdateConnectionRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "connectionId": {"type": "string", "nullable": true}, "name": {"type": "string", "nullable": true}, "providerId": {"type": "string", "nullable": true}, "connectionTypeId": {"type": "string", "nullable": true}, "connectionMetadata": {"type": "array", "items": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Requests.Connections.ConnectionMetadata"}, "nullable": true}}, "additionalProperties": false}, "EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Requests.CreateLocalUserRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "userName": {"type": "string", "nullable": true}, "email": {"type": "string", "nullable": true}, "firstName": {"type": "string", "nullable": true}, "lastName": {"type": "string", "nullable": true}, "role": {"type": "string", "nullable": true}, "phoneNumber": {"type": "string", "nullable": true}, "lockoutEnabled": {"type": "boolean"}, "password": {"type": "string", "nullable": true}, "autoGeneratedPassword": {"type": "boolean"}, "twoFactorEnabled": {"type": "boolean"}, "assignLicenseRequests": {"type": "array", "items": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Requests.Licenses.AssignLicenseRequest"}, "nullable": true}}, "additionalProperties": false}, "EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Requests.EducationOrganizations.AddEducationOrganizationRequest": {"type": "object", "properties": {"userId": {"type": "string", "nullable": true}, "tenantId": {"type": "string", "nullable": true}, "educationOrganizationId": {"type": "integer", "format": "int32"}, "staffClassifications": {"type": "array", "items": {"type": "string"}, "nullable": true}, "source": {"type": "string", "nullable": true}}, "additionalProperties": false}, "EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Requests.EducationOrganizations.UpdateEducationOrganizationRequest": {"type": "object", "properties": {"userId": {"type": "string", "nullable": true}, "tenantId": {"type": "string", "nullable": true}, "educationOrganizationId": {"type": "integer", "format": "int32"}, "staffClassifications": {"type": "array", "items": {"type": "string"}, "nullable": true}}, "additionalProperties": false}, "EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Requests.Jobs.CreateJobRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "jobId": {"type": "string", "nullable": true}, "name": {"type": "string", "nullable": true}, "jobTypeId": {"type": "string", "nullable": true}, "sourceConnectionId": {"type": "string", "nullable": true}, "destinationConnectionId": {"type": "string", "nullable": true}, "profileId": {"type": "string", "nullable": true}, "jobPoints": {"type": "integer", "format": "int32"}, "applicationId": {"type": "string", "nullable": true}, "dataRefreshType": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Requests.Jobs.DataRefreshType"}, "dataRefreshSpecificDate": {"type": "string", "nullable": true}, "maxApiFailure": {"type": "integer", "format": "int32"}, "maxApiRetry": {"type": "integer", "format": "int32"}, "jobCompleteCallbackUrl": {"type": "string", "nullable": true}, "jobMetadata": {"type": "array", "items": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Requests.Jobs.JobMetadata"}, "nullable": true}, "schedule": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Requests.Jobs.Schedule"}, "notificationEmails": {"type": "array", "items": {"type": "string"}, "nullable": true}}, "additionalProperties": false}, "EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Requests.Jobs.DataRefreshType": {"enum": ["Unknown", "Full", "Deltasincelastjobexecution", "Deltasincespecificdatetime"], "type": "string"}, "EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Requests.Jobs.JobMetadata": {"type": "object", "properties": {"code": {"type": "string", "nullable": true}, "value": {"type": "string", "nullable": true}}, "additionalProperties": false}, "EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Requests.Jobs.Schedule": {"type": "object", "properties": {"enabled": {"type": "boolean"}, "beginDate": {"type": "string", "nullable": true}, "endDate": {"type": "string", "nullable": true}, "cron": {"type": "string", "nullable": true}, "timeZone": {"type": "string", "nullable": true}}, "additionalProperties": false}, "EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Requests.Jobs.UpdateJobRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "jobId": {"type": "string", "nullable": true}, "name": {"type": "string", "nullable": true}, "sourceConnectionId": {"type": "string", "nullable": true}, "destinationConnectionId": {"type": "string", "nullable": true}, "profileId": {"type": "string", "nullable": true}, "jobPoints": {"type": "integer", "format": "int32"}, "applicationId": {"type": "string", "nullable": true}, "dataRefreshType": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Requests.Jobs.DataRefreshType"}, "dataRefreshSpecificDate": {"type": "string", "nullable": true}, "maxApiFailure": {"type": "integer", "format": "int32"}, "maxApiRetry": {"type": "integer", "format": "int32"}, "jobCompleteCallbackUrl": {"type": "string", "nullable": true}, "jobMetadata": {"type": "array", "items": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Requests.Jobs.JobMetadata"}, "nullable": true}, "schedule": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Requests.Jobs.Schedule"}, "notificationEmails": {"type": "array", "items": {"type": "string"}, "nullable": true}}, "additionalProperties": false}, "EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Requests.Licenses.AssignLicenseBulkRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "userId": {"type": "string", "nullable": true}, "assignLicenseRequests": {"type": "array", "items": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Requests.Licenses.AssignLicenseRequest"}, "nullable": true}}, "additionalProperties": false}, "EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Requests.Licenses.AssignLicenseRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "subscriptionId": {"type": "string", "nullable": true}, "applicationId": {"type": "string", "nullable": true}, "userId": {"type": "string", "nullable": true}, "roles": {"type": "array", "items": {"type": "string"}, "nullable": true}}, "additionalProperties": false}, "EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Requests.Licenses.RevokeLicenseBulkRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "userId": {"type": "string", "nullable": true}, "revokeLicenseRequests": {"type": "array", "items": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Requests.Licenses.RevokeLicenseRequest"}, "nullable": true}}, "additionalProperties": false}, "EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Requests.Licenses.RevokeLicenseRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "subscriptionId": {"type": "string", "nullable": true}, "applicationId": {"type": "string", "nullable": true}, "userId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Requests.SendInvitationRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "email": {"type": "string", "nullable": true}, "firstName": {"type": "string", "nullable": true}, "lastName": {"type": "string", "nullable": true}, "role": {"type": "string", "nullable": true}, "assignLicenseRequests": {"type": "array", "items": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Requests.Licenses.AssignLicenseRequest"}, "nullable": true}, "invitingUserDisplayName": {"type": "string", "nullable": true}, "dontSendEmail": {"type": "boolean", "nullable": true}}, "additionalProperties": false}, "EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Requests.Tenants.TenantIdentityProvider": {"enum": ["Local", "Aad", "Google", "Adfs"], "type": "string"}, "EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Requests.Tenants.TenantStatus": {"enum": ["Unknown", "Active", "Inactive"], "type": "string"}, "EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Requests.Tenants.TenantType": {"enum": ["Unknown", "Internal", "State", "Collaborative", "District", "Partner", "Teacher", "Student"], "type": "string"}, "EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Requests.Tenants.UpdateTenantRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "tenantType": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Requests.Tenants.TenantType"}, "organizationIdentifier": {"type": "string", "nullable": true}, "organizationName": {"type": "string", "nullable": true}, "state": {"type": "string", "nullable": true}, "isDemo": {"type": "boolean"}, "enforceMfa": {"type": "boolean"}, "showLocalLoginOptionToTenantAdmins": {"type": "boolean", "nullable": true}, "tenantStatus": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Requests.Tenants.TenantStatus"}, "identityProviders": {"type": "array", "items": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Requests.Tenants.TenantIdentityProvider"}, "nullable": true}}, "additionalProperties": false}, "EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Requests.UpdateUserPreferenceRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "format": "uuid", "nullable": true}, "clientId": {"type": "string", "nullable": true}, "code": {"type": "string", "nullable": true}, "value": {"type": "string", "nullable": true}}, "additionalProperties": false}, "EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.DomainListResponseDto": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "domainName": {"type": "string", "nullable": true}, "domainStatus": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.DomainStatus"}, "autoAssignUsers": {"type": "boolean"}, "createdBy": {"type": "string", "nullable": true}, "createdDateTime": {"type": "string", "nullable": true}, "lastModifiedBy": {"type": "string", "nullable": true}, "lastModifiedDateTime": {"type": "string", "nullable": true}}, "additionalProperties": false}, "EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.DomainListResponseDtoPaginatedItemsViewModel": {"type": "object", "properties": {"pageIndex": {"type": "integer", "format": "int32"}, "pageSize": {"type": "integer", "format": "int32"}, "count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.DomainListResponseDto"}, "nullable": true}}, "additionalProperties": false}, "EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.Role": {"type": "object", "properties": {"roleName": {"type": "string", "nullable": true}, "isDefault": {"type": "boolean"}, "isAvailableForTenants": {"type": "boolean"}, "displayName": {"type": "string", "nullable": true}, "description": {"type": "string", "nullable": true}, "sortOrder": {"type": "integer", "format": "int32"}}, "additionalProperties": false}, "EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.SubscriptionListResponseDto": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "subscriptionId": {"type": "string", "nullable": true}, "applicationId": {"type": "string", "nullable": true}, "applicationName": {"type": "string", "nullable": true}, "applicationRoles": {"type": "array", "items": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.Role"}, "nullable": true}, "startDateTime": {"type": "string", "nullable": true}, "endDateTime": {"type": "string", "nullable": true}, "actualEndDateTime": {"type": "string", "nullable": true}, "gracePeriod": {"type": "integer", "format": "int32"}, "numberOfLicenses": {"type": "integer", "format": "int32"}, "assignedLicenses": {"type": "integer", "format": "int32"}, "maxAssignedLicenses": {"type": "integer", "format": "int32"}, "lastMaxAssignedLicensesDateTime": {"type": "string", "nullable": true}, "licenseType": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.LicenseType"}, "subscriptionStatus": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.SubscriptionStatus"}, "autoAssign": {"type": "boolean"}, "createdBy": {"type": "string", "nullable": true}, "createdDateTime": {"type": "string", "nullable": true}, "lastModifiedBy": {"type": "string", "nullable": true}, "lastModifiedDateTime": {"type": "string", "nullable": true}}, "additionalProperties": false}, "EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.SubscriptionListResponseDtoPaginatedItemsViewModel": {"type": "object", "properties": {"pageIndex": {"type": "integer", "format": "int32"}, "pageSize": {"type": "integer", "format": "int32"}, "count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.SubscriptionListResponseDto"}, "nullable": true}}, "additionalProperties": false}, "EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.SubscriptionProfileResponseDto": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "subscriptionId": {"type": "string", "nullable": true}, "applicationId": {"type": "string", "nullable": true}, "applicationName": {"type": "string", "nullable": true}, "startDateTime": {"type": "string", "nullable": true}, "endDateTime": {"type": "string", "nullable": true}, "actualEndDateTime": {"type": "string", "nullable": true}, "gracePeriod": {"type": "integer", "format": "int32"}, "numberOfLicenses": {"type": "integer", "format": "int32"}, "assignedLicenses": {"type": "integer", "format": "int32"}, "maxAssignedLicenses": {"type": "integer", "format": "int32"}, "lastMaxAssignedLicensesDateTime": {"type": "string", "nullable": true}, "licenseType": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.LicenseType"}, "subscriptionStatus": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.SubscriptionStatus"}, "autoAssign": {"type": "boolean"}, "createdBy": {"type": "string", "nullable": true}, "createdDateTime": {"type": "string", "nullable": true}, "lastModifiedBy": {"type": "string", "nullable": true}, "lastModifiedDateTime": {"type": "string", "nullable": true}}, "additionalProperties": false}, "EdGraph.HttpAggregators.Tenant.Api.Services.StateReporting.v1.ConnectionCreatedResponse": {"type": "object", "properties": {"connectionId": {"type": "string", "nullable": true}, "tenantId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "EdGraph.HttpAggregators.Tenant.Api.Services.StateReporting.v1.ConnectionDeletedResponse": {"type": "object", "properties": {"connectionId": {"type": "string", "nullable": true}, "tenantId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "EdGraph.HttpAggregators.Tenant.Api.Services.StateReporting.v1.ConnectionProfileResponse": {"type": "object", "properties": {"id": {"type": "string", "nullable": true}, "type": {"type": "string", "nullable": true}, "tenantId": {"type": "string", "nullable": true}, "server": {"type": "string", "nullable": true}, "username": {"type": "string", "nullable": true}, "database": {"type": "string", "nullable": true}, "password": {"type": "string", "nullable": true}, "authUrl": {"type": "string", "nullable": true}, "resourcesUrl": {"type": "string", "nullable": true}, "apiKey": {"type": "string", "nullable": true}, "apiSecret": {"type": "string", "nullable": true}}, "additionalProperties": false}, "EdGraph.HttpAggregators.Tenant.Api.Services.StateReporting.v1.ConnectionUpdatedResponse": {"type": "object", "properties": {"connectionId": {"type": "string", "nullable": true}, "tenantId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "EdGraph.HttpAggregators.Tenant.Api.Services.StateReporting.v1.CreateConnectionRequest": {"type": "object", "properties": {"type": {"type": "string", "nullable": true}, "tenantId": {"type": "string", "nullable": true}, "server": {"type": "string", "nullable": true}, "username": {"type": "string", "nullable": true}, "database": {"type": "string", "nullable": true}, "password": {"type": "string", "nullable": true}, "authUrl": {"type": "string", "nullable": true}, "resourcesUrl": {"type": "string", "nullable": true}, "apiKey": {"type": "string", "nullable": true}, "apiSecret": {"type": "string", "nullable": true}}, "additionalProperties": false}, "EdGraph.HttpAggregators.Tenant.Api.Services.StateReporting.v1.PagedConnectionsResponse": {"type": "object", "properties": {"data": {"type": "array", "items": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Tenant.Api.Services.StateReporting.v1.ConnectionProfileResponse"}, "nullable": true}}, "additionalProperties": false}, "EdGraph.HttpAggregators.Tenant.Api.Services.StateReporting.v1.TestConnectionByTypeRequest": {"type": "object", "properties": {"type": {"type": "string", "nullable": true}, "tenantId": {"type": "string", "nullable": true}, "server": {"type": "string", "nullable": true}, "username": {"type": "string", "nullable": true}, "database": {"type": "string", "nullable": true}, "password": {"type": "string", "nullable": true}, "authUrl": {"type": "string", "nullable": true}, "resourcesUrl": {"type": "string", "nullable": true}, "apiKey": {"type": "string", "nullable": true}, "apiSecret": {"type": "string", "nullable": true}}, "additionalProperties": false}, "EdGraph.HttpAggregators.Tenant.Api.Services.StateReporting.v1.TestConnectionResponse": {"type": "object", "properties": {"status": {"type": "string", "nullable": true}, "details": {"type": "string", "nullable": true}}, "additionalProperties": false}, "EdGraph.HttpAggregators.Tenant.Api.Services.StateReporting.v1.UpdateConnectionRequest": {"type": "object", "properties": {"id": {"type": "string", "nullable": true}, "tenantId": {"type": "string", "nullable": true}, "server": {"type": "string", "nullable": true}, "username": {"type": "string", "nullable": true}, "database": {"type": "string", "nullable": true}, "password": {"type": "string", "nullable": true}, "authUrl": {"type": "string", "nullable": true}, "resourcesUrl": {"type": "string", "nullable": true}, "apiKey": {"type": "string", "nullable": true}, "apiSecret": {"type": "string", "nullable": true}}, "additionalProperties": false}, "EdGraph.Platform.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.ApplicationRole": {"type": "object", "properties": {"role": {"type": "string", "description": "The role associated with the application", "nullable": true}, "isAssigned": {"type": "boolean", "description": "Indicates if the user is assigned license for this application"}}, "additionalProperties": false}, "EdGraph.Platform.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.ApplicationTileResponseWithUserApplicationLicense": {"type": "object", "properties": {"applicationTenantId": {"type": "string", "description": "The Tenant this application belongs to", "nullable": true}, "applicationId": {"type": "string", "nullable": true}, "applicationName": {"type": "string", "nullable": true}, "applicationDescription": {"type": "string", "nullable": true}, "documentationUrl": {"type": "string", "nullable": true}, "applicationUri": {"type": "string", "nullable": true}, "version": {"type": "string", "nullable": true}, "tooltipText": {"type": "string", "nullable": true}, "tags": {"type": "string", "nullable": true}, "groups": {"type": "string", "nullable": true}, "lightIconUrl": {"type": "string", "nullable": true}, "darkIconUrl": {"type": "string", "nullable": true}, "lightBackgroundTileUrl": {"type": "string", "nullable": true}, "darkBackgroundTileUrl": {"type": "string", "nullable": true}, "lightOverlayTileUrl": {"type": "string", "nullable": true}, "darkOverlayTileUrl": {"type": "string", "nullable": true}, "showInAppLauncher": {"type": "boolean"}, "showInQuickLauncher": {"type": "boolean"}, "openInNewWindow": {"type": "boolean"}, "isTenantSubscribed": {"type": "boolean"}, "subscriptionTenantId": {"type": "string", "description": "The Tenant Id the subscription belongs to", "nullable": true}, "tenantSubscriptionId": {"type": "string", "description": "The Tenant subscription Id", "nullable": true}, "tenantSubscriptionStartDateTime": {"type": "string", "description": "The Tenant subscription start date", "nullable": true}, "tenantSubscriptionEndDateTime": {"type": "string", "description": "The Tenant subscription end date", "nullable": true}, "tenantSubscriptionActualEndDateTime": {"type": "string", "description": "The Tenant subscription end date", "nullable": true}, "isUserLicensed": {"type": "boolean"}, "urls": {"type": "array", "items": {"$ref": "#/components/schemas/EdGraph.Platform.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.ApplicationUrl"}, "nullable": true}}, "additionalProperties": false}, "EdGraph.Platform.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.ApplicationTilesResponseWithUserApplicationLicense": {"type": "object", "properties": {"data": {"type": "array", "items": {"$ref": "#/components/schemas/EdGraph.Platform.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.ApplicationTileResponseWithUserApplicationLicense"}, "nullable": true}}, "additionalProperties": false}, "EdGraph.Platform.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.ApplicationUrl": {"type": "object", "properties": {"code": {"type": "string", "nullable": true}, "label": {"type": "string", "nullable": true}, "value": {"type": "string", "nullable": true}, "openInNewTab": {"type": "boolean"}, "readonly": {"type": "boolean"}, "type": {"$ref": "#/components/schemas/ApplicationApi.Application.V1.UrlType"}}, "additionalProperties": false}, "EdGraph.Platform.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.ConnectionEdFiResponse": {"type": "object", "properties": {"value": {"type": "string", "nullable": true}, "label": {"type": "string", "nullable": true}, "isSelected": {"type": "boolean"}}, "additionalProperties": false}, "EdGraph.Platform.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.TenantStatus": {"enum": ["Unknown", "Active", "Inactive"], "type": "string"}, "EdGraph.Platform.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.UserCacheResponse": {"type": "object", "properties": {"userName": {"type": "string", "description": "The user name for this user.", "nullable": true}, "email": {"type": "string", "description": "The email address for this user.", "nullable": true}, "firstName": {"type": "string", "description": "The first name for this user.", "nullable": true}, "lastName": {"type": "string", "description": "The last name for this user.", "nullable": true}, "preferences": {"type": "array", "items": {"$ref": "#/components/schemas/IdentityApi.User.V1.Preference"}, "description": "List of preferences associated with this user", "nullable": true}, "tenants": {"type": "array", "items": {"$ref": "#/components/schemas/EdGraph.Platform.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.UserCacheTenantResponse"}, "description": "List of tenants associated with this user", "nullable": true}, "browserDebugEnabled": {"type": "boolean", "description": "Flag to indicate if the debug mode for user is enabled"}, "extensions": {"type": "array", "items": {"$ref": "#/components/schemas/IdentityApi.User.V1.UserExtension"}, "nullable": true}}, "additionalProperties": false}, "EdGraph.Platform.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.UserCacheTenantEducationOrganizationResponse": {"type": "object", "properties": {"educationOrganizationId": {"type": "integer", "format": "int32"}, "shortNameOfInstitution": {"type": "string", "nullable": true}, "nameOfInstitution": {"type": "string", "nullable": true}, "staffClassifications": {"type": "array", "items": {"type": "string"}, "nullable": true}, "source": {"type": "string", "nullable": true}}, "additionalProperties": false}, "EdGraph.Platform.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.UserCacheTenantResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "format": "uuid"}, "tenantType": {"type": "string", "nullable": true}, "organizationIdentifier": {"type": "string", "nullable": true}, "organizationName": {"type": "string", "nullable": true}, "state": {"type": "string", "nullable": true}, "tenantStatus": {"type": "string", "nullable": true}, "isDemo": {"type": "boolean"}, "educationOrganizations": {"type": "array", "items": {"$ref": "#/components/schemas/EdGraph.Platform.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.UserCacheTenantEducationOrganizationResponse"}, "nullable": true}, "licenses": {"type": "array", "items": {"$ref": "#/components/schemas/EdGraph.Platform.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.UserTenantLicense"}, "nullable": true}}, "additionalProperties": false}, "EdGraph.Platform.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.UserLicense": {"type": "object", "properties": {"subscriptionTenantId": {"type": "string", "description": "The Tenant Id the subscription belongs to", "nullable": true}, "isTenantSubscribed": {"type": "boolean", "description": "The Tenant has a subscription license for this application"}, "tenantSubscriptionId": {"type": "string", "description": "The Tenant subscription Id", "nullable": true}, "tenantSubscriptionStartDateTime": {"type": "string", "description": "The Tenant subscription start date", "nullable": true}, "tenantSubscriptionEndDateTime": {"type": "string", "description": "The Tenant subscription end date", "nullable": true}, "tenantSubscriptionActualEndDateTime": {"type": "string", "description": "The Tenant subscription end date", "nullable": true}, "numberOfLicenses": {"type": "integer", "description": "The Tenant's number of licenses", "format": "int32"}, "assignedLicenses": {"type": "integer", "description": "The Tenant's assigned of licenses", "format": "int32"}, "isUserLicensed": {"type": "boolean", "description": "The user is assigned license for this application"}, "applicationTenantId": {"type": "string", "description": "The Tenant this application belongs to", "nullable": true}, "applicationId": {"type": "string", "description": "The application Id of the application for license", "nullable": true}, "applicationName": {"type": "string", "description": "The application Name of the application for license", "nullable": true}, "applicationRole": {"type": "array", "items": {"$ref": "#/components/schemas/EdGraph.Platform.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.ApplicationRole"}, "description": "Application role for this user.", "nullable": true}}, "additionalProperties": false}, "EdGraph.Platform.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.UserLicensePaginatedItemsViewModel": {"type": "object", "properties": {"pageIndex": {"type": "integer", "format": "int32"}, "pageSize": {"type": "integer", "format": "int32"}, "count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/EdGraph.Platform.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.UserLicense"}, "nullable": true}}, "additionalProperties": false}, "EdGraph.Platform.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.UserListResponseWithApplicationLicense": {"type": "object", "properties": {"userId": {"type": "string", "nullable": true}, "userName": {"type": "string", "nullable": true}, "email": {"type": "string", "nullable": true}, "firstName": {"type": "string", "nullable": true}, "lastName": {"type": "string", "nullable": true}, "tenantCount": {"type": "integer", "format": "int32"}, "tenants": {"type": "array", "items": {"$ref": "#/components/schemas/EdGraph.Platform.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.UserTenant"}, "nullable": true}, "licenses": {"type": "array", "items": {"$ref": "#/components/schemas/EdGraph.Platform.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.UserLicense"}, "nullable": true}, "createdBy": {"type": "string", "nullable": true}, "createdDateTime": {"type": "string", "nullable": true}, "lastModifiedBy": {"type": "string", "nullable": true}, "lastModifiedDateTime": {"type": "string", "nullable": true}, "logins": {"type": "array", "items": {"$ref": "#/components/schemas/EdGraph.Platform.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.UserLogin"}, "nullable": true}, "source": {"type": "string", "nullable": true}, "lastLoginDateTime": {"type": "string", "nullable": true}}, "additionalProperties": false}, "EdGraph.Platform.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.UserListResponseWithApplicationLicensePaginatedItemsViewModel": {"type": "object", "properties": {"pageIndex": {"type": "integer", "format": "int32"}, "pageSize": {"type": "integer", "format": "int32"}, "count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/EdGraph.Platform.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.UserListResponseWithApplicationLicense"}, "nullable": true}}, "additionalProperties": false}, "EdGraph.Platform.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.UserLogin": {"type": "object", "properties": {"loginProvider": {"type": "string", "nullable": true}, "providerDisplayName": {"type": "string", "nullable": true}}, "additionalProperties": false}, "EdGraph.Platform.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.UserProfilePreference": {"type": "object", "properties": {"code": {"type": "string", "nullable": true}, "value": {"type": "string", "nullable": true}}, "additionalProperties": false}, "EdGraph.Platform.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.UserProfileResponseWithApplicationLicense": {"type": "object", "properties": {"userId": {"type": "string", "nullable": true}, "userName": {"type": "string", "nullable": true}, "email": {"type": "string", "nullable": true}, "firstName": {"type": "string", "nullable": true}, "lastName": {"type": "string", "nullable": true}, "phoneNumber": {"type": "string", "nullable": true}, "lockoutEnabled": {"type": "string", "nullable": true}, "tenants": {"type": "array", "items": {"$ref": "#/components/schemas/EdGraph.Platform.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.UserTenant"}, "nullable": true}, "preferences": {"type": "array", "items": {"$ref": "#/components/schemas/EdGraph.Platform.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.UserProfilePreference"}, "nullable": true}, "browserDebugEnabled": {"type": "boolean"}, "licenses": {"type": "array", "items": {"$ref": "#/components/schemas/EdGraph.Platform.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.UserLicense"}, "nullable": true}, "createdBy": {"type": "string", "nullable": true}, "createdDateTime": {"type": "string", "nullable": true}, "lastModifiedBy": {"type": "string", "nullable": true}, "lastModifiedDateTime": {"type": "string", "nullable": true}, "logins": {"type": "array", "items": {"$ref": "#/components/schemas/EdGraph.Platform.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.UserLogin"}, "nullable": true}, "source": {"type": "string", "nullable": true}, "lastLoginDateTime": {"type": "string", "nullable": true}}, "additionalProperties": false}, "EdGraph.Platform.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.UserTenant": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "status": {"$ref": "#/components/schemas/EdGraph.Platform.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.TenantStatus"}, "roles": {"type": "array", "items": {"type": "string"}, "nullable": true}, "licenses": {"type": "array", "items": {"$ref": "#/components/schemas/EdGraph.Platform.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.UserTenantLicense"}, "nullable": true}}, "additionalProperties": false}, "EdGraph.Platform.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.UserTenantLicense": {"type": "object", "properties": {"applicationId": {"type": "string", "nullable": true}, "applicationName": {"type": "string", "nullable": true}, "roles": {"type": "array", "items": {"$ref": "#/components/schemas/EdGraph.Platform.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.UserTenantLicenseRole"}, "nullable": true}}, "additionalProperties": false}, "EdGraph.Platform.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.UserTenantLicenseRole": {"type": "object", "properties": {"role": {"type": "string", "nullable": true}, "isImplicitlyAssigned": {"type": "boolean"}, "status": {"type": "string", "nullable": true}, "educationOrganizationId": {"type": "integer", "format": "int32", "nullable": true}, "staffClassification": {"type": "string", "nullable": true}}, "additionalProperties": false}, "EdGraph.Services.CloudEvents.Core.CloudEventDto": {"type": "object", "properties": {"id": {"type": "string", "nullable": true}, "type": {"type": "string", "nullable": true}, "source": {"type": "string", "nullable": true}, "specVersion": {"type": "string", "nullable": true}, "time": {"type": "string", "nullable": true}, "subject": {"type": "string", "nullable": true}, "dataContentType": {"type": "string", "nullable": true}, "dataSchema": {"type": "string", "nullable": true}, "data": {"nullable": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.AddSchoolYearRangeRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "instanceId": {"type": "string", "nullable": true}, "entries": {"type": "array", "items": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.AddSchoolYearRangeRequestEntry"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.AddSchoolYearRangeRequestEntry": {"type": "object", "properties": {"year": {"type": "integer", "format": "int32"}, "selectedTierId": {"type": "string", "nullable": true}, "odsBackupCode": {"type": "string", "nullable": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.AddSchoolYearRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "instanceId": {"type": "string", "nullable": true}, "year": {"type": "integer", "format": "int32"}, "selectedTierId": {"type": "string", "nullable": true}, "odsBackupCode": {"type": "string", "nullable": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.ApplicationEndpoint": {"type": "object", "properties": {"accessType": {"type": "string", "nullable": true}, "url": {"type": "string", "nullable": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.AuthorizationStrategiesResponse": {"type": "object", "properties": {"pageIndex": {"type": "integer", "format": "int32"}, "pageSize": {"type": "integer", "format": "int32"}, "count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.ChangeDatabaseTierRequest": {"type": "object", "properties": {"instanceId": {"type": "string", "nullable": true}, "tenantId": {"type": "string", "nullable": true}, "year": {"type": "integer", "format": "int32", "nullable": true}, "selectedTier": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.DatabaseTier"}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.ClaimSet": {"type": "object", "properties": {"claimSetId": {"type": "integer", "format": "int32"}, "claimSetName": {"type": "string", "nullable": true}, "isSystemReserved": {"type": "boolean"}, "applicationsCount": {"type": "integer", "format": "int32"}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.ClaimSetDetailsResourceClaim": {"type": "object", "properties": {"resourceClaimId": {"type": "integer", "format": "int32"}, "name": {"type": "string", "nullable": true}, "create": {"type": "boolean"}, "createAuthStrategy": {"type": "string", "nullable": true}, "createAuthStrategyOverride": {"type": "string", "nullable": true}, "read": {"type": "boolean"}, "readAuthStrategy": {"type": "string", "nullable": true}, "readAuthStrategyOverride": {"type": "string", "nullable": true}, "update": {"type": "boolean"}, "updateAuthStrategy": {"type": "string", "nullable": true}, "updateAuthStrategyOverride": {"type": "string", "nullable": true}, "delete": {"type": "boolean"}, "deleteAuthStrategy": {"type": "string", "nullable": true}, "deleteAuthStrategyOverride": {"type": "string", "nullable": true}, "children": {"type": "array", "items": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.ClaimSetDetailsResourceClaim"}, "nullable": true, "readOnly": true}, "readChanges": {"type": "boolean"}, "readChangesAuthStrategy": {"type": "string", "nullable": true}, "readChangesAuthStrategyOverride": {"type": "string", "nullable": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.ClaimSetPaginatedItemsViewModel": {"type": "object", "properties": {"pageIndex": {"type": "integer", "format": "int32"}, "pageSize": {"type": "integer", "format": "int32"}, "count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.ClaimSet"}, "nullable": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.CloneInstanceRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "sourceInstanceId": {"type": "string", "nullable": true}, "cloneInstanceName": {"type": "string", "nullable": true}, "cloneInstanceUseCustomId": {"type": "boolean"}, "cloneInstanceCustomId": {"type": "string", "nullable": true}, "cloneInstanceDescription": {"type": "string", "nullable": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.CloneInstanceResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.CreateEdFiApplicationRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "instanceId": {"type": "string", "nullable": true}, "applicationId": {"type": "integer", "format": "int32"}, "applicationName": {"type": "string", "nullable": true}, "claimSetName": {"type": "string", "nullable": true}, "operationalContextUri": {"type": "string", "nullable": true}, "vendorId": {"type": "integer", "format": "int32"}, "educationOrganizations": {"type": "array", "items": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.EducationOrganization"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.CreateEdFiConnectionRequest": {"type": "object", "properties": {"connectionId": {"type": "string", "nullable": true}, "tenantId": {"type": "string", "nullable": true}, "connectionType": {"type": "string", "nullable": true}, "connectionName": {"type": "string", "nullable": true}, "edFiVersion": {"type": "string", "nullable": true}, "edFiExtension": {"type": "string", "nullable": true}, "metadataUrl": {"type": "string", "nullable": true}, "clientId": {"type": "string", "nullable": true}, "clientSecret": {"type": "string", "nullable": true}, "tokenUrl": {"type": "string", "nullable": true}, "resourcesUrl": {"type": "string", "nullable": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.CreateEducationServiceCenterRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "instanceId": {"type": "string", "nullable": true}, "educationServiceCenterId": {"type": "integer", "format": "int32"}, "nameOfInstitution": {"type": "string", "nullable": true}, "educationOrganizationCategoryDescriptors": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.CreateInstanceRequest": {"type": "object", "properties": {"instanceName": {"type": "string", "description": "Details", "nullable": true}, "useCustomId": {"type": "boolean"}, "customId": {"type": "string", "nullable": true}, "description": {"type": "string", "nullable": true}, "databaseEngine": {"type": "string", "description": "Connection", "nullable": true}, "selectedConnectionId": {"type": "string", "nullable": true}, "schoolYears": {"type": "array", "items": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.CreateInstanceRequestSchoolYear"}, "description": "School Years", "nullable": true, "readOnly": true}, "tenantId": {"type": "string", "description": "Metadata", "nullable": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.CreateInstanceRequestSchoolYear": {"type": "object", "properties": {"year": {"type": "integer", "format": "int32"}, "selectedTierId": {"type": "string", "nullable": true}, "odsBackupCode": {"type": "string", "nullable": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.CreateLocalEducationAgencyRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "instanceId": {"type": "string", "nullable": true}, "year": {"type": "integer", "format": "int32", "nullable": true}, "localEducationAgency": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.LocalEducationAgency"}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.CreateStateEducationAgencyRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "instanceId": {"type": "string", "nullable": true}, "stateEducationAgencyId": {"type": "integer", "format": "int32"}, "nameOfInstitution": {"type": "string", "nullable": true}, "educationOrganizationCategoryDescriptors": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.CreateVendorRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "instanceId": {"type": "string", "nullable": true}, "vendorId": {"type": "integer", "format": "int32"}, "vendorName": {"type": "string", "nullable": true}, "applications": {"type": "array", "items": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.EdFiApplication"}, "nullable": true, "readOnly": true}, "namespacePrefixes": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.DatabaseTier": {"enum": ["GeneralPurpose", "BusinessCritical"], "type": "string"}, "EdfiAdminApi.EdfiAdmin.V1.DescriptorCreatedResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "instanceId": {"type": "string", "nullable": true}, "descriptorId": {"type": "integer", "format": "int32"}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.DescriptorNamespacesPaginatedItemsResponse": {"type": "object", "properties": {"pageIndex": {"type": "integer", "format": "int32"}, "pageSize": {"type": "integer", "format": "int32"}, "count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.DescriptorType": {"type": "object", "properties": {"descriptorId": {"type": "integer", "format": "int32"}, "namespace": {"type": "string", "nullable": true}, "codeValue": {"type": "string", "nullable": true}, "shortDescription": {"type": "string", "nullable": true}, "description": {"type": "string", "nullable": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.DescriptorUpdatedResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "instanceId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.DescriptorsPaginatedItemsResponse": {"type": "object", "properties": {"pageIndex": {"type": "integer", "format": "int32"}, "pageSize": {"type": "integer", "format": "int32"}, "count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.DescriptorType"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.EdFiApplication": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "applicationId": {"type": "integer", "format": "int32"}, "applicationName": {"type": "string", "nullable": true}, "claimSetName": {"type": "string", "nullable": true}, "operationalContextUri": {"type": "string", "nullable": true}, "vendorId": {"type": "integer", "format": "int32"}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.EdFiApplicationApiClientProfileResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "instanceId": {"type": "string", "nullable": true}, "apiClientId": {"type": "integer", "format": "int32"}, "key": {"type": "string", "nullable": true}, "secret": {"type": "string", "nullable": true}, "name": {"type": "string", "nullable": true}, "isApproved": {"type": "boolean"}, "useSandbox": {"type": "boolean"}, "sandboxType": {"type": "integer", "format": "int32"}, "applicationId": {"type": "integer", "format": "int32"}, "secretIsHashed": {"type": "boolean"}, "keyStatus": {"type": "string", "nullable": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.EdFiApplicationApiClientProfileResponsePaginatedItemsViewModel": {"type": "object", "properties": {"pageIndex": {"type": "integer", "format": "int32"}, "pageSize": {"type": "integer", "format": "int32"}, "count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.EdFiApplicationApiClientProfileResponse"}, "nullable": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.EdFiApplicationCreatedResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "instanceId": {"type": "string", "nullable": true}, "applicationId": {"type": "integer", "format": "int32"}, "applicationName": {"type": "string", "nullable": true}, "claimSetName": {"type": "string", "nullable": true}, "operationalContextUri": {"type": "string", "nullable": true}, "vendorId": {"type": "integer", "format": "int32"}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.EdFiApplicationListResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "applicationId": {"type": "integer", "format": "int32"}, "applicationName": {"type": "string", "nullable": true}, "claimSetName": {"type": "string", "nullable": true}, "operationalContextUri": {"type": "string", "nullable": true}, "vendorId": {"type": "integer", "format": "int32"}, "vendorName": {"type": "string", "nullable": true}, "edOrgsCount": {"type": "integer", "format": "int32"}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.EdFiApplicationListResponsePaginatedItemsViewModel": {"type": "object", "properties": {"pageIndex": {"type": "integer", "format": "int32"}, "pageSize": {"type": "integer", "format": "int32"}, "count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.EdFiApplicationListResponse"}, "nullable": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.EdFiApplicationProfileResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "instanceId": {"type": "string", "nullable": true}, "applicationId": {"type": "integer", "format": "int32"}, "applicationName": {"type": "string", "nullable": true}, "claimSetName": {"type": "string", "nullable": true}, "operationalContextUri": {"type": "string", "nullable": true}, "vendorId": {"type": "integer", "format": "int32"}, "vendor": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.Vendor"}, "educationOrganizations": {"type": "array", "items": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.EducationOrganization"}, "description": "TODO Is adding Vendor object which also has application object correct ?", "nullable": true, "readOnly": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.EdFiConnection": {"type": "object", "properties": {"id": {"type": "string", "nullable": true}, "connectionName": {"type": "string", "nullable": true}, "databaseEngine": {"type": "string", "nullable": true}, "edFiVersion": {"type": "string", "nullable": true}, "edFiExtension": {"type": "string", "nullable": true}, "hostingProvider": {"type": "string", "nullable": true}, "allowedTenantIds": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}, "tiers": {"type": "array", "items": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.EdFiConnectionTier"}, "nullable": true, "readOnly": true}, "createdBy": {"type": "string", "nullable": true}, "createdDateTime": {"type": "string", "nullable": true}, "lastModifiedBy": {"type": "string", "nullable": true}, "lastModifiedDateTime": {"type": "string", "nullable": true}, "connectionType": {"type": "string", "nullable": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.EdFiConnectionPaginatedItemsResponse": {"type": "object", "properties": {"pageIndex": {"type": "integer", "format": "int32"}, "pageSize": {"type": "integer", "format": "int32"}, "count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.EdFiConnection"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.EdFiConnectionTier": {"type": "object", "properties": {"tierId": {"type": "string", "nullable": true}, "tierName": {"type": "string", "nullable": true}, "odsApiConnection": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.TierOdsApiConnection"}, "sqlConnection": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.TierSqlConnection"}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.EdFiConnectionUpdatedResponse": {"type": "object", "properties": {"connectionId": {"type": "string", "nullable": true}, "tenantId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.EdFiOdsBackupDescriptor": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "code": {"type": "string", "nullable": true}, "description": {"type": "string", "nullable": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.EdFiOdsBackupDescriptorsPaginatedItemsResponse": {"type": "object", "properties": {"pageIndex": {"type": "integer", "format": "int32"}, "pageSize": {"type": "integer", "format": "int32"}, "count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.EdFiOdsBackupDescriptor"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.EducationOrganization": {"type": "object", "properties": {"educationOrganizationId": {"type": "integer", "format": "int32"}, "nameOfInstitution": {"type": "string", "nullable": true}, "shortnameOfInstitution": {"type": "string", "nullable": true}, "webSite": {"type": "string", "nullable": true}, "operationalStatusDescriptorId": {"type": "integer", "format": "int32"}, "discriminator": {"type": "string", "nullable": true}, "createDate": {"type": "string", "nullable": true}, "lastModifiedDate": {"type": "string", "nullable": true}, "id": {"type": "string", "nullable": true}, "changeVersion": {"type": "integer", "format": "int64"}, "createdByOwnershipTokenId": {"type": "integer", "format": "int32"}, "localEducationAgencyId": {"type": "integer", "format": "int32"}, "schoolId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.EducationOrganizationAddress": {"type": "object", "properties": {"addressTypeDescriptor": {"type": "string", "nullable": true}, "stateAbbreviationDescriptor": {"type": "string", "nullable": true}, "city": {"type": "string", "nullable": true}, "postalCode": {"type": "string", "nullable": true}, "streetNumberName": {"type": "string", "nullable": true}, "localeDescriptor": {"type": "string", "nullable": true}, "buildingSiteNumber": {"type": "string", "nullable": true}, "nameOfCounty": {"type": "string", "nullable": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.EducationOrganizationCategoryDescriptor": {"type": "object", "properties": {"id": {"type": "string", "nullable": true}, "educationOrganizationCategoryDescriptorId": {"type": "integer", "format": "int32"}, "codeValue": {"type": "string", "nullable": true}, "description": {"type": "string", "nullable": true}, "namespace": {"type": "string", "nullable": true}, "shortDescription": {"type": "string", "nullable": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.EducationServiceCenter": {"type": "object", "properties": {"id": {"type": "string", "nullable": true}, "educationServiceCenterId": {"type": "integer", "format": "int32"}, "nameOfInstitution": {"type": "string", "nullable": true}, "educationOrganizationCategoryDescriptors": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.EducationServiceCenterCreatedResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "instanceId": {"type": "string", "nullable": true}, "id": {"type": "string", "nullable": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.GenderRepresentation": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "instanceId": {"type": "string", "nullable": true}, "value": {"type": "string", "nullable": true}, "percentOfTotal": {"type": "number", "format": "double"}, "displayName": {"type": "string", "nullable": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.GenerateReportsResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "instanceId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.GetLocalEducationAgencyProfileResponse": {"type": "object", "properties": {"localEducationAgency": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.LocalEducationAgency"}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.GetResourceClaimsGridResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "instanceId": {"type": "string", "nullable": true}, "resourceClaims": {"type": "array", "items": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.ResourceClaim"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.Instance": {"type": "object", "properties": {"id": {"type": "string", "description": "Details", "nullable": true}, "instanceName": {"type": "string", "nullable": true}, "useCustomId": {"type": "boolean"}, "customId": {"type": "string", "nullable": true}, "description": {"type": "string", "nullable": true}, "connectionName": {"type": "string", "nullable": true}, "selectedConnectionId": {"type": "string", "description": "Connection", "nullable": true}, "selectedConnection": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.EdFiConnection"}, "databases": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.InstanceDatabases"}, "password": {"type": "string", "description": "API Client", "nullable": true}, "apiClientKey": {"type": "string", "nullable": true}, "apiClientSecret": {"type": "string", "nullable": true}, "isApiClientSecretSecured": {"type": "string", "nullable": true}, "tenantId": {"type": "string", "description": "Metadata", "nullable": true}, "createdBy": {"type": "string", "nullable": true}, "createdDateTime": {"type": "string", "nullable": true}, "isDeleted": {"type": "boolean"}, "lastModifiedBy": {"type": "string", "nullable": true}, "lastModifiedDateTime": {"type": "string", "nullable": true}, "apiAuthUrl": {"type": "string", "description": "URLs", "nullable": true}, "apiResourcesUrls": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}, "apiCompositesUrls": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}, "selectedConnectionType": {"type": "string", "description": "Connection", "nullable": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.InstanceDatabase": {"type": "object", "properties": {"selectedTierId": {"type": "string", "nullable": true}, "selectedTierName": {"type": "string", "nullable": true}, "status": {"type": "string", "nullable": true}, "jobs": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.InstanceDatabaseJobs"}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.InstanceDatabaseJobs": {"type": "object", "properties": {"createJobId": {"type": "string", "nullable": true}, "deleteJobId": {"type": "string", "nullable": true}, "resetDeleteJobId": {"type": "string", "nullable": true}, "resetCreateJobId": {"type": "string", "nullable": true}, "generateReportsJobId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.InstanceDatabases": {"type": "object", "properties": {"admin": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.InstanceDatabase"}, "security": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.InstanceDatabase"}, "ods": {"type": "array", "items": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.InstanceOdsDatabase"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.InstanceEndpointsResponse": {"type": "object", "properties": {"authUrl": {"type": "string", "nullable": true}, "resourcesUrls": {"type": "array", "items": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.ApplicationEndpoint"}, "nullable": true, "readOnly": true}, "compositesUrls": {"type": "array", "items": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.ApplicationEndpoint"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.InstanceOdsDatabase": {"type": "object", "properties": {"selectedTierId": {"type": "string", "nullable": true}, "selectedTierName": {"type": "string", "nullable": true}, "status": {"type": "string", "nullable": true}, "jobs": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.InstanceDatabaseJobs"}, "year": {"type": "integer", "format": "int32"}, "odsBackupCode": {"type": "string", "nullable": true}, "odsBackupDescription": {"type": "string", "nullable": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.InstancePaginatedItemsViewModel": {"type": "object", "properties": {"pageIndex": {"type": "integer", "format": "int32"}, "pageSize": {"type": "integer", "format": "int32"}, "count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.Instance"}, "nullable": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.LocalEducationAgency": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "instanceId": {"type": "string", "nullable": true}, "educationOrganizationId": {"type": "integer", "format": "int32"}, "localEducationAgencyId": {"type": "integer", "format": "int32"}, "nameOfInstitution": {"type": "string", "nullable": true}, "shortnameOfInstitution": {"type": "string", "nullable": true}, "webSite": {"type": "string", "nullable": true}, "operationalStatusDescriptorId": {"type": "integer", "format": "int32"}, "discriminator": {"type": "string", "nullable": true}, "createDate": {"type": "string", "nullable": true}, "lastModifiedDate": {"type": "string", "nullable": true}, "addresses": {"type": "array", "items": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.EducationOrganizationAddress"}, "nullable": true, "readOnly": true}, "categories": {"type": "array", "items": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.EducationOrganizationCategoryDescriptor"}, "nullable": true, "readOnly": true}, "localEducationAgencyCategoryDescriptorCodeValue": {"type": "string", "nullable": true}, "id": {"type": "string", "nullable": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.LocalEducationAgencyCreatedResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "instanceId": {"type": "string", "nullable": true}, "localEducationAgency": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.LocalEducationAgency"}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.LocalEducationAgencyTableViewResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "instanceId": {"type": "string", "nullable": true}, "educationOrganizationId": {"type": "integer", "format": "int64"}, "id": {"type": "string", "nullable": true}, "nameOfInstitution": {"type": "string", "nullable": true}, "educationOrganizationCategory": {"type": "string", "nullable": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.LocalEducationAgencyTableViewResponsePaginatedItemsViewModel": {"type": "object", "properties": {"pageIndex": {"type": "integer", "format": "int32"}, "pageSize": {"type": "integer", "format": "int32"}, "count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.LocalEducationAgencyTableViewResponse"}, "nullable": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.OdsApiConnectionEndpoint": {"type": "object", "properties": {"accessTypeId": {"type": "string", "nullable": true}, "compositesUrl": {"type": "string", "nullable": true}, "resourcesUrl": {"type": "string", "nullable": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.RaceRepresentation": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "instanceId": {"type": "string", "nullable": true}, "value": {"type": "string", "nullable": true}, "percentOfTotal": {"type": "number", "format": "double"}, "displayName": {"type": "string", "nullable": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.RegenerateApiClientSecretResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "instanceId": {"type": "string", "nullable": true}, "apiClientId": {"type": "integer", "format": "int32"}, "newSecret": {"type": "string", "nullable": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.ReportsStatusResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "instanceId": {"type": "string", "nullable": true}, "districtSchoolsByTypeReport": {"type": "boolean"}, "districtTotalEnrollmentsReport": {"type": "boolean"}, "localEducationAgenciesReport": {"type": "boolean"}, "studentDemographicsReport": {"type": "boolean"}, "studentEconomicSituationReport": {"type": "boolean"}, "studentsByProgramReport": {"type": "boolean"}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.ResetInstanceResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "instanceId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.ResourceClaim": {"type": "object", "properties": {"resourceClaimId": {"type": "integer", "format": "int32"}, "name": {"type": "string", "nullable": true}, "create": {"type": "boolean"}, "createAuthStrategy": {"type": "string", "nullable": true}, "read": {"type": "boolean"}, "readAuthStrategy": {"type": "string", "nullable": true}, "update": {"type": "boolean"}, "updateAuthStrategy": {"type": "string", "nullable": true}, "delete": {"type": "boolean"}, "deleteAuthStrategy": {"type": "string", "nullable": true}, "children": {"type": "array", "items": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.ResourceClaim"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.SaveClaimSetRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "instanceId": {"type": "string", "nullable": true}, "claimSetId": {"type": "integer", "format": "int32"}, "claimSetName": {"type": "string", "nullable": true}, "applicationId": {"type": "integer", "format": "int32"}, "resourceClaims": {"type": "array", "items": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.ClaimSetDetailsResourceClaim"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.SaveClaimSetResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "instanceId": {"type": "string", "nullable": true}, "claimSetId": {"type": "integer", "format": "int32"}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.SchoolCountRepresentation": {"type": "object", "properties": {"description": {"type": "string", "nullable": true}, "count": {"type": "integer", "format": "int32"}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.SchoolsByTypeReportResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "instanceId": {"type": "string", "nullable": true}, "schoolCountRepresentations": {"type": "array", "items": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.SchoolCountRepresentation"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.StateEducationAgency": {"type": "object", "properties": {"id": {"type": "string", "nullable": true}, "stateEducationAgencyId": {"type": "integer", "format": "int32"}, "nameOfInstitution": {"type": "string", "nullable": true}, "educationOrganizationCategoryDescriptors": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.StateEducationAgencyCreatedResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "instanceId": {"type": "string", "nullable": true}, "id": {"type": "string", "nullable": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.StudentEconomicSituationReportResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "instanceId": {"type": "string", "nullable": true}, "localEducationAgencyId": {"type": "integer", "format": "int32"}, "localEducationAgencyName": {"type": "string", "nullable": true}, "totalStudentCount": {"type": "integer", "format": "int32"}, "studentEconomicSituationRepresentation": {"type": "array", "items": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.StudentEconomicSituationRepresentation"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.StudentEconomicSituationRepresentation": {"type": "object", "properties": {"description": {"type": "string", "nullable": true}, "percentOfTotal": {"type": "number", "format": "double"}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.StudentEnrollmentByEthnicityReportResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "instanceId": {"type": "string", "nullable": true}, "localEducationAgencyId": {"type": "integer", "format": "int32"}, "localEducationAgencyName": {"type": "string", "nullable": true}, "totalStudentCount": {"type": "integer", "format": "int32"}, "hispanicLatinoPercent": {"type": "number", "format": "double"}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.StudentEnrollmentByGenderReportResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "instanceId": {"type": "string", "nullable": true}, "localEducationAgencyId": {"type": "integer", "format": "int32"}, "localEducationAgencyName": {"type": "string", "nullable": true}, "totalStudentCount": {"type": "integer", "format": "int32"}, "genderRepresentation": {"type": "array", "items": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.GenderRepresentation"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.StudentEnrollmentByRaceReportResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "instanceId": {"type": "string", "nullable": true}, "localEducationAgencyId": {"type": "integer", "format": "int32"}, "localEducationAgencyName": {"type": "string", "nullable": true}, "totalStudentCount": {"type": "integer", "format": "int32"}, "raceRepresentation": {"type": "array", "items": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.RaceRepresentation"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.StudentProgramRepresentation": {"type": "object", "properties": {"programName": {"type": "string", "nullable": true}, "percentOfTotalStudents": {"type": "number", "format": "double"}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.StudentsByProgramReportResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "instanceId": {"type": "string", "nullable": true}, "localEducationAgencyId": {"type": "integer", "format": "int32"}, "localEducationAgencyName": {"type": "string", "nullable": true}, "totalStudentCount": {"type": "integer", "format": "int32"}, "studentProgramRepresentations": {"type": "array", "items": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.StudentProgramRepresentation"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.SyncApplicationRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "instanceId": {"type": "string", "nullable": true}, "year": {"type": "integer", "format": "int32", "nullable": true}, "applicationId": {"type": "integer", "format": "int32"}, "entries": {"type": "array", "items": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.SyncEntry"}, "nullable": true, "readOnly": true}, "assignToExistingLeas": {"type": "boolean"}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.SyncClaimSetRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "instanceId": {"type": "string", "nullable": true}, "year": {"type": "integer", "format": "int32", "nullable": true}, "claimSetId": {"type": "integer", "format": "int32"}, "entries": {"type": "array", "items": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.SyncEntry"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.SyncEntry": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "instances": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.SyncLocalEducationAgencyRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "instanceId": {"type": "string", "nullable": true}, "year": {"type": "integer", "format": "int32", "nullable": true}, "edOrgId": {"type": "integer", "format": "int32"}, "edOrgGuid": {"type": "string", "nullable": true}, "entries": {"type": "array", "items": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.SyncEntry"}, "nullable": true, "readOnly": true}, "assignToExistingApplications": {"type": "boolean"}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.SyncResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "instanceId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.SyncVendorRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "instanceId": {"type": "string", "nullable": true}, "year": {"type": "integer", "format": "int32", "nullable": true}, "vendorId": {"type": "integer", "format": "int32"}, "entries": {"type": "array", "items": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.SyncEntry"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.TestInstanceConnectionResponse": {"type": "object", "properties": {"status": {"type": "string", "nullable": true}, "details": {"type": "string", "nullable": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.TierOdsApiConnection": {"type": "object", "properties": {"clientId": {"type": "string", "nullable": true}, "clientSecret": {"type": "string", "nullable": true}, "tokenUrl": {"type": "string", "nullable": true}, "endpoints": {"type": "array", "items": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.OdsApiConnectionEndpoint"}, "nullable": true, "readOnly": true}, "metadataUrl": {"type": "string", "nullable": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.TierSqlConnection": {"type": "object", "properties": {"sqlServer": {"type": "string", "nullable": true}, "sqlServerUserName": {"type": "string", "nullable": true}, "sqlServerPasswordSecret": {"type": "string", "nullable": true}, "azureSubscriptionId": {"type": "string", "nullable": true}, "azureResourceGroupName": {"type": "string", "nullable": true}, "azureServerName": {"type": "string", "nullable": true}, "azureServerElasticPoolName": {"type": "string", "nullable": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.TotalEnrollmentsReportResponse": {"type": "object", "properties": {"enrollmentCount": {"type": "integer", "format": "int32"}, "educationOrganizationId": {"type": "integer", "format": "int32"}, "id": {"type": "string", "nullable": true}, "nameOfInstitution": {"type": "string", "nullable": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.UpdateEdFiApplicationRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "instanceId": {"type": "string", "nullable": true}, "applicationId": {"type": "integer", "format": "int32"}, "applicationName": {"type": "string", "nullable": true}, "claimSetName": {"type": "string", "nullable": true}, "operationalContextUri": {"type": "string", "nullable": true}, "vendorId": {"type": "integer", "format": "int32"}, "educationOrganizations": {"type": "array", "items": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.EducationOrganization"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.UpdateEdFiConnectionRequest": {"type": "object", "properties": {"connectionId": {"type": "string", "nullable": true}, "tenantId": {"type": "string", "nullable": true}, "connectionName": {"type": "string", "nullable": true}, "edFiVersion": {"type": "string", "nullable": true}, "edFiExtension": {"type": "string", "nullable": true}, "metadataUrl": {"type": "string", "nullable": true}, "clientId": {"type": "string", "nullable": true}, "clientSecret": {"type": "string", "nullable": true}, "tokenUrl": {"type": "string", "nullable": true}, "resourcesUrl": {"type": "string", "nullable": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.UpdateEducationServiceCenterRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "instanceId": {"type": "string", "nullable": true}, "id": {"type": "string", "nullable": true}, "educationServiceCenterId": {"type": "integer", "format": "int32"}, "nameOfInstitution": {"type": "string", "nullable": true}, "educationOrganizationCategoryDescriptors": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.UpdateInstanceRequest": {"type": "object", "properties": {"id": {"type": "string", "description": "The Instance ID or Custom ID", "nullable": true}, "instanceName": {"type": "string", "description": "Details", "nullable": true}, "description": {"type": "string", "nullable": true}, "tenantId": {"type": "string", "description": "Metadata", "nullable": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.UpdateLocalEducationAgencyRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "instanceId": {"type": "string", "nullable": true}, "year": {"type": "integer", "format": "int32", "nullable": true}, "localEducationAgency": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.LocalEducationAgency"}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.UpdateStateEducationAgencyRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "instanceId": {"type": "string", "nullable": true}, "id": {"type": "string", "nullable": true}, "stateEducationAgencyId": {"type": "integer", "format": "int32"}, "nameOfInstitution": {"type": "string", "nullable": true}, "educationOrganizationCategoryDescriptors": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.UpdateVendorRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "instanceId": {"type": "string", "nullable": true}, "vendorId": {"type": "integer", "format": "int32"}, "vendorName": {"type": "string", "nullable": true}, "applications": {"type": "array", "items": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.EdFiApplication"}, "nullable": true, "readOnly": true}, "namespacePrefixes": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.Vendor": {"type": "object", "properties": {"vendorId": {"type": "integer", "format": "int32"}, "vendorName": {"type": "string", "nullable": true}, "applications": {"type": "array", "items": {"type": "integer", "format": "int32"}, "description": "TODO: Changed from application object to applicationId's to remove cyclic structure", "nullable": true, "readOnly": true}, "namespacePrefixes": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}}, "additionalProperties": false, "description": "Common Objects"}, "EdfiAdminApi.EdfiAdmin.V1.VendorCreatedResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "instanceId": {"type": "string", "nullable": true}, "vendorId": {"type": "integer", "format": "int32"}, "vendorName": {"type": "string", "nullable": true}, "applications": {"type": "array", "items": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.EdFiApplication"}, "nullable": true, "readOnly": true}, "namespacePrefixes": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.VendorListResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "vendorId": {"type": "integer", "format": "int32"}, "vendorName": {"type": "string", "nullable": true}, "namespacePrefixes": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.VendorListResponsePaginatedItemsViewModel": {"type": "object", "properties": {"pageIndex": {"type": "integer", "format": "int32"}, "pageSize": {"type": "integer", "format": "int32"}, "count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.VendorListResponse"}, "nullable": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.VendorProfileResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "vendorId": {"type": "integer", "format": "int32"}, "vendorName": {"type": "string", "nullable": true}, "namespacePrefixes": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.VendorUpdatedResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "instanceId": {"type": "string", "nullable": true}, "vendorId": {"type": "integer", "format": "int32"}}, "additionalProperties": false}, "IMSAdminApi.V1.Clients.AccessTokenType": {"enum": ["Jwt", "Reference"], "type": "string"}, "IMSAdminApi.V1.Clients.Claim": {"type": "object", "properties": {"type": {"type": "string", "nullable": true}, "value": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IMSAdminApi.V1.Clients.ClientCreatedResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "applicationId": {"type": "string", "nullable": true}, "clientId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IMSAdminApi.V1.Clients.ClientDeletedResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "applicationId": {"type": "string", "nullable": true}, "clientId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IMSAdminApi.V1.Clients.ClientListResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "applicationId": {"type": "string", "nullable": true}, "clientId": {"type": "string", "nullable": true}, "clientName": {"type": "string", "nullable": true}, "clientUri": {"type": "string", "nullable": true}, "enabled": {"type": "boolean"}, "createdBy": {"type": "string", "nullable": true}, "createdDateTime": {"type": "string", "nullable": true}, "lastModifiedBy": {"type": "string", "nullable": true}, "lastModifiedDateTime": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IMSAdminApi.V1.Clients.ClientProfileResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "applicationId": {"type": "string", "nullable": true}, "clientId": {"type": "string", "nullable": true}, "clientName": {"type": "string", "nullable": true}, "description": {"type": "string", "nullable": true}, "clientUri": {"type": "string", "nullable": true}, "logoUri": {"type": "string", "nullable": true}, "enabled": {"type": "boolean"}, "accessTokenType": {"$ref": "#/components/schemas/IMSAdminApi.V1.Clients.AccessTokenType"}, "tokenUsage": {"$ref": "#/components/schemas/IMSAdminApi.V1.Clients.TokenUsage"}, "refreshTokenExpiration": {"$ref": "#/components/schemas/IMSAdminApi.V1.Clients.TokenExpiration"}, "enableLocalLogin": {"type": "boolean"}, "allowOfflineAccess": {"type": "boolean"}, "allowAccessTokensViaBrowser": {"type": "boolean"}, "updateAccessTokenClaimsOnRefresh": {"type": "boolean"}, "alwaysIncludeUserClaimsInIdToken": {"type": "boolean"}, "identityTokenLifetime": {"type": "integer", "format": "int32"}, "accessTokenLifetime": {"type": "integer", "format": "int32"}, "authorizationCodeLifetime": {"type": "integer", "format": "int32"}, "absoluteRefreshTokenLifetime": {"type": "integer", "format": "int32"}, "slidingRefreshTokenLifetime": {"type": "integer", "format": "int32"}, "requireClientSecret": {"type": "boolean"}, "requireConsent": {"type": "boolean"}, "allowedScopes": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}, "allowedCorsOrigins": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}, "allowedGrantTypes": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}, "identityProviderRestrictions": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}, "redirectUris": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}, "postLogoutRedirectUris": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}, "clientSecrets": {"type": "array", "items": {"$ref": "#/components/schemas/IMSAdminApi.V1.Clients.Secret"}, "nullable": true, "readOnly": true}, "claims": {"type": "array", "items": {"$ref": "#/components/schemas/IMSAdminApi.V1.Clients.Claim"}, "nullable": true, "readOnly": true}, "requirePkce": {"type": "boolean"}, "createdBy": {"type": "string", "nullable": true}, "createdDateTime": {"type": "string", "nullable": true}, "lastModifiedBy": {"type": "string", "nullable": true}, "lastModifiedDateTime": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IMSAdminApi.V1.Clients.ClientUpdatedResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "applicationId": {"type": "string", "nullable": true}, "clientId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IMSAdminApi.V1.Clients.CreateClientRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "applicationId": {"type": "string", "nullable": true}, "clientId": {"type": "string", "nullable": true}, "clientName": {"type": "string", "nullable": true}, "description": {"type": "string", "nullable": true}, "clientUri": {"type": "string", "nullable": true}, "logoUri": {"type": "string", "nullable": true}, "enabled": {"type": "boolean"}, "accessTokenType": {"$ref": "#/components/schemas/IMSAdminApi.V1.Clients.AccessTokenType"}, "tokenUsage": {"$ref": "#/components/schemas/IMSAdminApi.V1.Clients.TokenUsage"}, "refreshTokenExpiration": {"$ref": "#/components/schemas/IMSAdminApi.V1.Clients.TokenExpiration"}, "enableLocalLogin": {"type": "boolean"}, "allowOfflineAccess": {"type": "boolean"}, "allowAccessTokensViaBrowser": {"type": "boolean"}, "updateAccessTokenClaimsOnRefresh": {"type": "boolean"}, "alwaysIncludeUserClaimsInIdToken": {"type": "boolean"}, "identityTokenLifetime": {"type": "integer", "format": "int32"}, "accessTokenLifetime": {"type": "integer", "format": "int32"}, "authorizationCodeLifetime": {"type": "integer", "format": "int32"}, "absoluteRefreshTokenLifetime": {"type": "integer", "format": "int32"}, "slidingRefreshTokenLifetime": {"type": "integer", "format": "int32"}, "requireClientSecret": {"type": "boolean"}, "requireConsent": {"type": "boolean"}, "allowedScopes": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}, "allowedCorsOrigins": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}, "allowedGrantTypes": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}, "identityProviderRestrictions": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}, "redirectUris": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}, "postLogoutRedirectUris": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}, "secret": {"type": "string", "nullable": true}, "claims": {"type": "array", "items": {"$ref": "#/components/schemas/IMSAdminApi.V1.Clients.Claim"}, "nullable": true, "readOnly": true}, "requirePkce": {"type": "boolean"}, "instanceId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IMSAdminApi.V1.Clients.PaginatedItemsResponse": {"type": "object", "properties": {"pageIndex": {"type": "integer", "format": "int32"}, "pageSize": {"type": "integer", "format": "int32"}, "count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/IMSAdminApi.V1.Clients.ClientListResponse"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "IMSAdminApi.V1.Clients.Secret": {"type": "object", "properties": {"type": {"type": "string", "nullable": true}, "value": {"type": "string", "nullable": true}, "description": {"type": "string", "nullable": true}, "expiration": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IMSAdminApi.V1.Clients.TokenExpiration": {"enum": ["Sliding", "Absolute"], "type": "string"}, "IMSAdminApi.V1.Clients.TokenUsage": {"enum": ["ReUse", "OneTimeOnly"], "type": "string"}, "IMSAdminApi.V1.Clients.UpdateClientRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "applicationId": {"type": "string", "nullable": true}, "clientId": {"type": "string", "nullable": true}, "clientName": {"type": "string", "nullable": true}, "description": {"type": "string", "nullable": true}, "clientUri": {"type": "string", "nullable": true}, "logoUri": {"type": "string", "nullable": true}, "enabled": {"type": "boolean"}, "accessTokenType": {"$ref": "#/components/schemas/IMSAdminApi.V1.Clients.AccessTokenType"}, "tokenUsage": {"$ref": "#/components/schemas/IMSAdminApi.V1.Clients.TokenUsage"}, "refreshTokenExpiration": {"$ref": "#/components/schemas/IMSAdminApi.V1.Clients.TokenExpiration"}, "enableLocalLogin": {"type": "boolean"}, "allowOfflineAccess": {"type": "boolean"}, "allowAccessTokensViaBrowser": {"type": "boolean"}, "updateAccessTokenClaimsOnRefresh": {"type": "boolean"}, "alwaysIncludeUserClaimsInIdToken": {"type": "boolean"}, "identityTokenLifetime": {"type": "integer", "format": "int32"}, "accessTokenLifetime": {"type": "integer", "format": "int32"}, "authorizationCodeLifetime": {"type": "integer", "format": "int32"}, "absoluteRefreshTokenLifetime": {"type": "integer", "format": "int32"}, "slidingRefreshTokenLifetime": {"type": "integer", "format": "int32"}, "requireClientSecret": {"type": "boolean"}, "requireConsent": {"type": "boolean"}, "allowedScopes": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}, "allowedCorsOrigins": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}, "allowedGrantTypes": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}, "identityProviderRestrictions": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}, "redirectUris": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}, "postLogoutRedirectUris": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}, "claims": {"type": "array", "items": {"$ref": "#/components/schemas/IMSAdminApi.V1.Clients.Claim"}, "nullable": true, "readOnly": true}, "requirePkce": {"type": "boolean"}}, "additionalProperties": false}, "IMSAdminApi.V1.Connections.ConnectionDetails": {"type": "object", "properties": {"type": {"type": "string", "nullable": true}, "metadata": {"type": "array", "items": {"$ref": "#/components/schemas/IMSAdminApi.V1.Connections.ConnectionDetailsMetadata"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "IMSAdminApi.V1.Connections.ConnectionDetailsMetadata": {"type": "object", "properties": {"key": {"type": "string", "nullable": true}, "value": {"type": "string", "nullable": true}, "secret": {"type": "boolean"}}, "additionalProperties": false}, "IMSAdminApi.V1.Connections.ConnectionListResponse": {"type": "object", "properties": {"connectionId": {"type": "string", "nullable": true}, "createdBy": {"type": "string", "nullable": true}, "createdDateTime": {"type": "string", "nullable": true}, "lastModifiedBy": {"type": "string", "nullable": true}, "lastModifiedDateTime": {"type": "string", "nullable": true}, "allowedTenants": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}, "name": {"type": "string", "nullable": true}, "details": {"type": "array", "items": {"$ref": "#/components/schemas/IMSAdminApi.V1.Connections.ConnectionDetails"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "IMSAdminApi.V1.Connections.ConnectionProfileResponse": {"type": "object", "properties": {"connectionId": {"type": "string", "nullable": true}, "createdBy": {"type": "string", "nullable": true}, "createdDateTime": {"type": "string", "nullable": true}, "lastModifiedBy": {"type": "string", "nullable": true}, "lastModifiedDateTime": {"type": "string", "nullable": true}, "allowedTenants": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}, "name": {"type": "string", "nullable": true}, "details": {"type": "array", "items": {"$ref": "#/components/schemas/IMSAdminApi.V1.Connections.ConnectionDetails"}, "nullable": true, "readOnly": true}, "tiers": {"type": "array", "items": {"$ref": "#/components/schemas/IMSAdminApi.V1.Tiers.Tier"}, "nullable": true, "readOnly": true}, "backupCodes": {"type": "array", "items": {"$ref": "#/components/schemas/IMSAdminApi.V1.DbBackupCodes.DbBackupCode"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "IMSAdminApi.V1.Connections.PagedConnectionsResponse": {"type": "object", "properties": {"pageIndex": {"type": "integer", "format": "int32"}, "pageSize": {"type": "integer", "format": "int32"}, "count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/IMSAdminApi.V1.Connections.ConnectionListResponse"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "IMSAdminApi.V1.DbBackupCodes.DbBackupCode": {"type": "object", "properties": {"name": {"type": "string", "nullable": true}, "type": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IMSAdminApi.V1.Instances.CreateInstanceRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "name": {"type": "string", "nullable": true}, "useCustomId": {"type": "boolean"}, "customId": {"type": "string", "nullable": true}, "description": {"type": "string", "nullable": true}, "connectionId": {"type": "string", "nullable": true}, "tier": {"type": "string", "nullable": true}, "backupCode": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IMSAdminApi.V1.Instances.GetInstanceCsvExportResponse": {"type": "object", "properties": {"downloadUri": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IMSAdminApi.V1.Instances.InstanceEndpointsResponse": {"type": "object", "properties": {"tokenUrl": {"type": "string", "nullable": true}, "resourcesUrl": {"type": "string", "nullable": true}, "clientId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IMSAdminApi.V1.Instances.InstanceListResponse": {"type": "object", "properties": {"instanceId": {"type": "string", "nullable": true}, "createdBy": {"type": "string", "nullable": true}, "createdDateTime": {"type": "string", "nullable": true}, "lastModifiedBy": {"type": "string", "nullable": true}, "lastModifiedDateTime": {"type": "string", "nullable": true}, "tenantId": {"type": "string", "nullable": true}, "name": {"type": "string", "nullable": true}, "useCustomId": {"type": "boolean"}, "customId": {"type": "string", "nullable": true}, "description": {"type": "string", "nullable": true}, "connection": {"$ref": "#/components/schemas/IMSAdminApi.V1.Connections.ConnectionListResponse"}, "tier": {"$ref": "#/components/schemas/IMSAdminApi.V1.Tiers.Tier"}, "backupCode": {"$ref": "#/components/schemas/IMSAdminApi.V1.DbBackupCodes.DbBackupCode"}, "status": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IMSAdminApi.V1.Instances.InstanceProfileResponse": {"type": "object", "properties": {"instanceId": {"type": "string", "nullable": true}, "createdBy": {"type": "string", "nullable": true}, "createdDateTime": {"type": "string", "nullable": true}, "lastModifiedBy": {"type": "string", "nullable": true}, "lastModifiedDateTime": {"type": "string", "nullable": true}, "tenantId": {"type": "string", "nullable": true}, "name": {"type": "string", "nullable": true}, "useCustomId": {"type": "boolean"}, "customId": {"type": "string", "nullable": true}, "description": {"type": "string", "nullable": true}, "connection": {"$ref": "#/components/schemas/IMSAdminApi.V1.Connections.ConnectionProfileResponse"}, "tier": {"$ref": "#/components/schemas/IMSAdminApi.V1.Tiers.Tier"}, "backupCode": {"$ref": "#/components/schemas/IMSAdminApi.V1.DbBackupCodes.DbBackupCode"}, "status": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IMSAdminApi.V1.Instances.InstanceResetResponse": {"type": "object", "properties": {"instanceId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IMSAdminApi.V1.Instances.PagedInstancesResponse": {"type": "object", "properties": {"pageIndex": {"type": "integer", "format": "int32"}, "pageSize": {"type": "integer", "format": "int32"}, "count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/IMSAdminApi.V1.Instances.InstanceListResponse"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "IMSAdminApi.V1.Instances.UpdateInstanceRequest": {"type": "object", "properties": {"instanceId": {"type": "string", "nullable": true}, "name": {"type": "string", "nullable": true}, "description": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IMSAdminApi.V1.Tiers.Tier": {"type": "object", "properties": {"name": {"type": "string", "nullable": true}, "type": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.ApiClient.V1.AccessTokenType": {"enum": ["Jwt", "Reference"], "type": "string"}, "IdentityApi.ApiClient.V1.ApiClaim": {"type": "object", "properties": {"applicationId": {"type": "string", "nullable": true}, "subscriptionId": {"type": "string", "nullable": true}, "value": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "IdentityApi.ApiClient.V1.ApiClientCreatedResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "clientId": {"type": "string", "nullable": true}, "secretValue": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.ApiClient.V1.ApiClientListResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "clientId": {"type": "string", "nullable": true}, "clientName": {"type": "string", "nullable": true}, "clientUri": {"type": "string", "nullable": true}, "enabled": {"type": "boolean"}, "createdBy": {"type": "string", "nullable": true}, "createdDateTime": {"type": "string", "nullable": true}, "lastModifiedBy": {"type": "string", "nullable": true}, "lastModifiedDateTime": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.ApiClient.V1.ApiClientPaginatedItemsResponse": {"type": "object", "properties": {"pageIndex": {"type": "integer", "format": "int32"}, "pageSize": {"type": "integer", "format": "int32"}, "count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/IdentityApi.ApiClient.V1.ApiClientListResponse"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "IdentityApi.ApiClient.V1.ApiClientPaginatedItemsResponsePaginatedItemsViewModel": {"type": "object", "properties": {"pageIndex": {"type": "integer", "format": "int32"}, "pageSize": {"type": "integer", "format": "int32"}, "count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/IdentityApi.ApiClient.V1.ApiClientPaginatedItemsResponse"}, "nullable": true}}, "additionalProperties": false}, "IdentityApi.ApiClient.V1.ApiClientProfileResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "clientId": {"type": "string", "nullable": true}, "clientName": {"type": "string", "nullable": true}, "description": {"type": "string", "nullable": true}, "clientUri": {"type": "string", "nullable": true}, "logoUri": {"type": "string", "nullable": true}, "enabled": {"type": "boolean"}, "accessTokenType": {"$ref": "#/components/schemas/IdentityApi.ApiClient.V1.AccessTokenType"}, "tokenUsage": {"$ref": "#/components/schemas/IdentityApi.ApiClient.V1.TokenUsage"}, "refreshTokenExpiration": {"$ref": "#/components/schemas/IdentityApi.ApiClient.V1.TokenExpiration"}, "enableLocalLogin": {"type": "boolean"}, "allowOfflineAccess": {"type": "boolean"}, "allowAccessTokensViaBrowser": {"type": "boolean"}, "updateAccessTokenClaimsOnRefresh": {"type": "boolean"}, "alwaysIncludeUserClaimsInIdToken": {"type": "boolean"}, "identityTokenLifetime": {"type": "integer", "format": "int32"}, "accessTokenLifetime": {"type": "integer", "format": "int32"}, "authorizationCodeLifetime": {"type": "integer", "format": "int32"}, "absoluteRefreshTokenLifetime": {"type": "integer", "format": "int32"}, "slidingRefreshTokenLifetime": {"type": "integer", "format": "int32"}, "requireClientSecret": {"type": "boolean"}, "requireConsent": {"type": "boolean"}, "allowedScopes": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}, "allowedCorsOrigins": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}, "allowedGrantTypes": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}, "identityProviderRestrictions": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}, "redirectUris": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}, "postLogoutRedirectUris": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}, "claims": {"type": "array", "items": {"$ref": "#/components/schemas/IdentityApi.ApiClient.V1.Claim"}, "nullable": true, "readOnly": true}, "requirePkce": {"type": "boolean"}, "createdBy": {"type": "string", "nullable": true}, "createdDateTime": {"type": "string", "nullable": true}, "lastModifiedBy": {"type": "string", "nullable": true}, "lastModifiedDateTime": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.ApiClient.V1.ApiClientSecretRegeneratedResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "clientId": {"type": "string", "nullable": true}, "secretValue": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.ApiClient.V1.ApiClientUpdatedResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "clientId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.ApiClient.V1.Claim": {"type": "object", "properties": {"type": {"type": "string", "nullable": true}, "value": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.ApiClient.V1.CreateApiClientRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "clientName": {"type": "string", "nullable": true}, "enabled": {"type": "boolean"}, "apiClaims": {"type": "array", "items": {"$ref": "#/components/schemas/IdentityApi.ApiClient.V1.ApiClaim"}, "nullable": true, "readOnly": true}, "secretExpirationDateTime": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.ApiClient.V1.RegenerateApiClientSecretRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "clientId": {"type": "string", "nullable": true}, "secretExpirationDateTime": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.ApiClient.V1.TokenExpiration": {"enum": ["Sliding", "Absolute"], "type": "string"}, "IdentityApi.ApiClient.V1.TokenUsage": {"enum": ["ReUse", "OneTimeOnly"], "type": "string"}, "IdentityApi.ApiClient.V1.UpdateApiClientRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "clientId": {"type": "string", "nullable": true}, "clientName": {"type": "string", "nullable": true}, "enabled": {"type": "boolean"}, "apiClaims": {"type": "array", "items": {"$ref": "#/components/schemas/IdentityApi.ApiClient.V1.ApiClaim"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "IdentityApi.ClientSettingsType.V1.ClientSettingsTypeResponse": {"type": "object", "properties": {"id": {"type": "string", "nullable": true}, "clientId": {"type": "string", "nullable": true}, "code": {"type": "string", "nullable": true}, "dataType": {"type": "string", "nullable": true}, "order": {"type": "integer", "format": "int32"}, "hidden": {"type": "boolean"}, "htmlElement": {"type": "string", "description": "Html attributes", "nullable": true}, "label": {"type": "string", "nullable": true}, "inputType": {"type": "string", "nullable": true}, "defaultValue": {"type": "string", "nullable": true}, "minValue": {"type": "integer", "format": "int32", "nullable": true}, "maxValue": {"type": "integer", "format": "int32", "nullable": true}, "maxLength": {"type": "integer", "format": "int32", "nullable": true}, "options": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}, "createdBy": {"type": "string", "nullable": true}, "createdDateTime": {"type": "string", "nullable": true}, "lastModifiedBy": {"type": "string", "nullable": true}, "lastModifiedDateTime": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.ClientSettingsType.V1.GetClientSettingsTypesResponse": {"type": "object", "properties": {"pageIndex": {"type": "integer", "format": "int32"}, "pageSize": {"type": "integer", "format": "int32"}, "count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/IdentityApi.ClientSettingsType.V1.ClientSettingsTypeResponse"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "IdentityApi.Invitation.V1.AssignLicenseRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "subscriptionId": {"type": "string", "nullable": true}, "applicationId": {"type": "string", "nullable": true}, "userId": {"type": "string", "nullable": true}, "roles": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "IdentityApi.Invitation.V1.InvitationListResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "invitationId": {"type": "string", "nullable": true}, "firstName": {"type": "string", "nullable": true}, "lastName": {"type": "string", "nullable": true}, "email": {"type": "string", "nullable": true}, "role": {"type": "string", "nullable": true}, "invitationToken": {"type": "string", "nullable": true}, "invitationStatus": {"$ref": "#/components/schemas/IdentityApi.Invitation.V1.InvitationStatus"}, "invitationSentDateTime": {"type": "string", "nullable": true}, "assignLicenseRequests": {"type": "array", "items": {"$ref": "#/components/schemas/IdentityApi.Invitation.V1.AssignLicenseRequest"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "IdentityApi.Invitation.V1.InvitationListResponsePaginatedItemsViewModel": {"type": "object", "properties": {"pageIndex": {"type": "integer", "format": "int32"}, "pageSize": {"type": "integer", "format": "int32"}, "count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/IdentityApi.Invitation.V1.InvitationListResponse"}, "nullable": true}}, "additionalProperties": false}, "IdentityApi.Invitation.V1.InvitationResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "invitationId": {"type": "string", "nullable": true}, "firstName": {"type": "string", "nullable": true}, "lastName": {"type": "string", "nullable": true}, "email": {"type": "string", "nullable": true}, "role": {"type": "string", "nullable": true}, "invitationToken": {"type": "string", "nullable": true}, "invitationStatus": {"$ref": "#/components/schemas/IdentityApi.Invitation.V1.InvitationStatus"}, "invitationSentDateTime": {"type": "string", "nullable": true}, "assignLicenseRequests": {"type": "array", "items": {"$ref": "#/components/schemas/IdentityApi.Invitation.V1.AssignLicenseRequest"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "IdentityApi.Invitation.V1.InvitationSentResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "invitationId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.Invitation.V1.InvitationStatus": {"enum": ["Unknown", "Invited", "Accepted"], "type": "string"}, "IdentityApi.StaffClassification.V1.CreateStaffClassificationRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "namespace": {"type": "string", "nullable": true}, "codeValue": {"type": "string", "nullable": true}, "shortDescription": {"type": "string", "nullable": true}, "description": {"type": "string", "nullable": true}, "licenses": {"type": "array", "items": {"$ref": "#/components/schemas/IdentityApi.StaffClassification.V1.StaffClassificationLicenseRequest"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "IdentityApi.StaffClassification.V1.GetStaffClassificationsResponse": {"type": "object", "properties": {"pageIndex": {"type": "integer", "format": "int32"}, "pageSize": {"type": "integer", "format": "int32"}, "count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/IdentityApi.StaffClassification.V1.StaffClassificationResponse"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "IdentityApi.StaffClassification.V1.StaffClassificationCreatedResponse": {"type": "object", "properties": {"id": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.StaffClassification.V1.StaffClassificationDeletedResponse": {"type": "object", "properties": {"id": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.StaffClassification.V1.StaffClassificationLicense": {"type": "object", "properties": {"applicationId": {"type": "string", "nullable": true}, "licenseStatus": {"type": "string", "nullable": true}, "roles": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "IdentityApi.StaffClassification.V1.StaffClassificationLicenseRequest": {"type": "object", "properties": {"applicationId": {"type": "string", "nullable": true}, "licenseStatus": {"type": "string", "nullable": true}, "roles": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "IdentityApi.StaffClassification.V1.StaffClassificationResponse": {"type": "object", "properties": {"id": {"type": "string", "nullable": true}, "createdBy": {"type": "string", "nullable": true}, "createdDateTime": {"type": "string", "nullable": true}, "lastModifiedBy": {"type": "string", "nullable": true}, "lastModifiedDateTime": {"type": "string", "nullable": true}, "isDeleted": {"type": "boolean"}, "tenantId": {"type": "string", "nullable": true}, "namespace": {"type": "string", "nullable": true}, "codeValue": {"type": "string", "nullable": true}, "shortDescription": {"type": "string", "nullable": true}, "description": {"type": "string", "nullable": true}, "licenses": {"type": "array", "items": {"$ref": "#/components/schemas/IdentityApi.StaffClassification.V1.StaffClassificationLicense"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "IdentityApi.StaffClassification.V1.StaffClassificationUpdatedResponse": {"type": "object", "properties": {"id": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.StaffClassification.V1.UpdateStaffClassificationRequest": {"type": "object", "properties": {"id": {"type": "string", "nullable": true}, "namespace": {"type": "string", "nullable": true}, "codeValue": {"type": "string", "nullable": true}, "shortDescription": {"type": "string", "nullable": true}, "description": {"type": "string", "nullable": true}, "licenses": {"type": "array", "items": {"$ref": "#/components/schemas/IdentityApi.StaffClassification.V1.StaffClassificationLicenseRequest"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "IdentityApi.User.V1.ActivateUserRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "userId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.User.V1.DeactivateUserRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "userId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.User.V1.EducationOrganization": {"type": "object", "properties": {"educationOrganizationId": {"type": "integer", "format": "int32"}, "shortNameOfInstitution": {"type": "string", "nullable": true}, "nameOfInstitution": {"type": "string", "nullable": true}, "staffClassifications": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}, "source": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.User.V1.EducationOrganizationAddedResponse": {"type": "object", "properties": {"userId": {"type": "string", "nullable": true}, "tenantId": {"type": "string", "nullable": true}, "educationOrganizationId": {"type": "integer", "format": "int32"}}, "additionalProperties": false}, "IdentityApi.User.V1.EducationOrganizationPaginatedItemsResponse": {"type": "object", "properties": {"pageIndex": {"type": "integer", "format": "int32"}, "pageSize": {"type": "integer", "format": "int32"}, "count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/IdentityApi.User.V1.EducationOrganization"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "IdentityApi.User.V1.EducationOrganizationRemovedResponse": {"type": "object", "properties": {"userId": {"type": "string", "nullable": true}, "tenantId": {"type": "string", "nullable": true}, "educationOrganizationId": {"type": "integer", "format": "int32"}}, "additionalProperties": false}, "IdentityApi.User.V1.EducationOrganizationUpdatedResponse": {"type": "object", "properties": {"userId": {"type": "string", "nullable": true}, "tenantId": {"type": "string", "nullable": true}, "educationOrganizationId": {"type": "integer", "format": "int32"}}, "additionalProperties": false}, "IdentityApi.User.V1.LicenseAssignedBulkResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "userId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.User.V1.LicenseAssignedResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "subscriptionId": {"type": "string", "nullable": true}, "applicationId": {"type": "string", "nullable": true}, "userId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.User.V1.LicenseRevokedBulkResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "userId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.User.V1.LicenseRevokedResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "subscriptionId": {"type": "string", "nullable": true}, "applicationId": {"type": "string", "nullable": true}, "userId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.User.V1.LocalUserCreatedResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "userId": {"type": "string", "nullable": true}, "password": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.User.V1.PasswordResettedResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "userId": {"type": "string", "nullable": true}, "password": {"type": "string", "nullable": true}, "autoGeneratedPassword": {"type": "boolean"}}, "additionalProperties": false}, "IdentityApi.User.V1.Preference": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "clientId": {"type": "string", "nullable": true}, "code": {"type": "string", "nullable": true}, "value": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.User.V1.ResetPasswordRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "userId": {"type": "string", "nullable": true}, "password": {"type": "string", "nullable": true}, "autoGeneratedPassword": {"type": "boolean"}}, "additionalProperties": false}, "IdentityApi.User.V1.RevokeLicenseRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "subscriptionId": {"type": "string", "nullable": true}, "applicationId": {"type": "string", "nullable": true}, "userId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.User.V1.SetUserExtensionRequest": {"type": "object", "properties": {"userId": {"type": "string", "nullable": true}, "code": {"type": "string", "nullable": true}, "data": {"type": "string", "nullable": true}, "dataType": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.User.V1.UpdateUserRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "userId": {"type": "string", "nullable": true}, "role": {"type": "string", "nullable": true}, "isPlatformAdmin": {"type": "boolean", "nullable": true}}, "additionalProperties": false}, "IdentityApi.User.V1.UserActivatedResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "userId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.User.V1.UserDeactivatedResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "userId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.User.V1.UserExtension": {"type": "object", "properties": {"code": {"type": "string", "nullable": true}, "data": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.User.V1.UserExtensionRemovedResponse": {"type": "object", "properties": {"userId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.User.V1.UserExtensionSetResponse": {"type": "object", "properties": {"userId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.User.V1.UserPreferenceUpdatedResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "clientId": {"type": "string", "nullable": true}, "code": {"type": "string", "nullable": true}, "value": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.User.V1.UserTenantStatusProfile": {"type": "object", "properties": {"email": {"type": "string", "nullable": true}, "username": {"type": "string", "nullable": true}, "firstName": {"type": "string", "nullable": true}, "lastName": {"type": "string", "nullable": true}, "status": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.User.V1.UserUpdatedResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "userId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "Microsoft.AspNetCore.Mvc.ProblemDetails": {"type": "object", "properties": {"type": {"type": "string", "nullable": true}, "title": {"type": "string", "nullable": true}, "status": {"type": "integer", "format": "int32", "nullable": true}, "detail": {"type": "string", "nullable": true}, "instance": {"type": "string", "nullable": true}}, "additionalProperties": {}}, "Microsoft.AspNetCore.Mvc.ValidationProblemDetails": {"type": "object", "properties": {"errors": {"type": "object", "additionalProperties": {"type": "array", "items": {"type": "string"}}, "nullable": true}, "type": {"type": "string", "nullable": true}, "title": {"type": "string", "nullable": true}, "status": {"type": "integer", "format": "int32", "nullable": true}, "detail": {"type": "string", "nullable": true}, "instance": {"type": "string", "nullable": true}}, "additionalProperties": {}}, "RegistrationApi.Registration.V2.ApprovalStatus": {"enum": ["Unknown", "Pending", "Approved", "Denied", "Failed", "Completed"], "type": "string"}, "RegistrationApi.Registration.V2.SubmitTenantRegistrationRequest": {"type": "object", "properties": {"tenantType": {"$ref": "#/components/schemas/RegistrationApi.Registration.V2.TenantType"}, "firstName": {"type": "string", "nullable": true}, "lastName": {"type": "string", "nullable": true}, "email": {"type": "string", "nullable": true}, "state": {"type": "string", "nullable": true}, "organizationIdentifier": {"type": "string", "nullable": true}, "organizationName": {"type": "string", "nullable": true}, "password": {"type": "string", "nullable": true}, "applicationIds": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}, "azureSubscriptionId": {"type": "string", "nullable": true}, "azureSubscriptionStoragePath": {"type": "string", "nullable": true}}, "additionalProperties": false}, "RegistrationApi.Registration.V2.TenantType": {"enum": ["Unknown", "Internal", "State", "Collaborative", "District", "Partner", "Teacher", "Student"], "type": "string"}, "TenantApi.Tenant.V1.CreateDomainRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "domainName": {"type": "string", "nullable": true}, "domainStatus": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.DomainStatus"}, "autoAssignUsers": {"type": "boolean"}}, "additionalProperties": false}, "TenantApi.Tenant.V1.CreateOnboardingStepRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "number": {"type": "integer", "format": "int32"}, "description": {"type": "string", "nullable": true}, "status": {"type": "string", "nullable": true}}, "additionalProperties": false}, "TenantApi.Tenant.V1.CreateOrganizationRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "identifierType": {"type": "string", "nullable": true}, "identifierValue": {"type": "string", "nullable": true}, "shortNameOfInstitution": {"type": "string", "nullable": true}, "nameOfInstitution": {"type": "string", "nullable": true}, "discriminator": {"type": "string", "nullable": true}, "source": {"type": "string", "nullable": true}, "includeInJwt": {"type": "boolean"}}, "additionalProperties": false}, "TenantApi.Tenant.V1.CreateSubscriptionRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "subscriptionId": {"type": "string", "nullable": true}, "applicationId": {"type": "string", "nullable": true}, "startDateTime": {"type": "string", "nullable": true}, "endDateTime": {"type": "string", "nullable": true}, "gracePeriod": {"type": "integer", "format": "int32"}, "numberOfLicenses": {"type": "integer", "format": "int32"}, "assignedLicenses": {"type": "integer", "format": "int32"}, "licenseType": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.LicenseType"}, "subscriptionStatus": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.SubscriptionStatus"}, "autoAssign": {"type": "boolean"}}, "additionalProperties": false}, "TenantApi.Tenant.V1.DomainCreatedResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "domainName": {"type": "string", "nullable": true}}, "additionalProperties": false}, "TenantApi.Tenant.V1.DomainProfileResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "domainName": {"type": "string", "nullable": true}, "domainStatus": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.DomainStatus"}, "autoAssignUsers": {"type": "boolean"}, "createdBy": {"type": "string", "nullable": true}, "createdDateTime": {"type": "string", "nullable": true}, "lastModifiedBy": {"type": "string", "nullable": true}, "lastModifiedDateTime": {"type": "string", "nullable": true}}, "additionalProperties": false}, "TenantApi.Tenant.V1.DomainStatus": {"enum": ["Unknown", "Unverified", "Verified", "Rejected", "Error"], "type": "string"}, "TenantApi.Tenant.V1.DomainUpdatedResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "oldDomainName": {"type": "string", "nullable": true}, "newDomainName": {"type": "string", "nullable": true}, "domainStatus": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.DomainStatus"}}, "additionalProperties": false}, "TenantApi.Tenant.V1.DomainVerifiedResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "domainName": {"type": "string", "nullable": true}, "domainStatus": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.DomainStatus"}}, "additionalProperties": false}, "TenantApi.Tenant.V1.EdFiAdminInstance": {"type": "object", "properties": {"id": {"type": "string", "description": "Details", "nullable": true}, "instanceName": {"type": "string", "nullable": true}, "useCustomId": {"type": "boolean"}, "customId": {"type": "string", "nullable": true}, "description": {"type": "string", "nullable": true}, "connectionName": {"type": "string", "nullable": true}, "selectedConnectionId": {"type": "string", "description": "Connection", "nullable": true}, "databases": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.InstanceDatabases"}, "password": {"type": "string", "description": "API Client", "nullable": true}, "apiClientKey": {"type": "string", "nullable": true}, "apiClientSecret": {"type": "string", "nullable": true}, "isApiClientSecretSecured": {"type": "boolean"}, "tenantId": {"type": "string", "description": "Metadata", "nullable": true}, "createdBy": {"type": "string", "nullable": true}, "createdDateTime": {"type": "string", "nullable": true}, "isDeleted": {"type": "boolean"}, "lastModifiedBy": {"type": "string", "nullable": true}, "lastModifiedDateTime": {"type": "string", "nullable": true}, "apiAuthUrl": {"type": "string", "description": "URLs", "nullable": true}, "apiResourcesUrls": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}, "apiCompositesUrls": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "TenantApi.Tenant.V1.GetAppSettingsResponse": {"type": "object", "properties": {"data": {"type": "array", "items": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.TenantAppSettings"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "TenantApi.Tenant.V1.GetEdFiAdminInstancesResponse": {"type": "object", "properties": {"pageIndex": {"type": "integer", "format": "int32"}, "pageSize": {"type": "integer", "format": "int32"}, "count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.EdFiAdminInstance"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "TenantApi.Tenant.V1.GetOrganizationsPaginatedResponse": {"type": "object", "properties": {"pageIndex": {"type": "integer", "format": "int32"}, "pageSize": {"type": "integer", "format": "int32"}, "count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.Organization"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "TenantApi.Tenant.V1.InstanceDatabase": {"type": "object", "properties": {"selectedTierId": {"type": "string", "nullable": true}, "selectedTierName": {"type": "string", "nullable": true}, "status": {"type": "string", "nullable": true}, "jobs": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.InstanceDatabaseJobs"}}, "additionalProperties": false}, "TenantApi.Tenant.V1.InstanceDatabaseJobs": {"type": "object", "properties": {"createJobId": {"type": "string", "nullable": true}, "deleteJobId": {"type": "string", "nullable": true}, "resetDeleteJobId": {"type": "string", "nullable": true}, "resetCreateJobId": {"type": "string", "nullable": true}, "generateReportsJobId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "TenantApi.Tenant.V1.InstanceDatabases": {"type": "object", "properties": {"admin": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.InstanceDatabase"}, "security": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.InstanceDatabase"}, "ods": {"type": "array", "items": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.InstanceOdsDatabase"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "TenantApi.Tenant.V1.InstanceOdsDatabase": {"type": "object", "properties": {"selectedTierId": {"type": "string", "nullable": true}, "selectedTierName": {"type": "string", "nullable": true}, "status": {"type": "string", "nullable": true}, "jobs": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.InstanceDatabaseJobs"}, "year": {"type": "integer", "format": "int32"}, "odsBackupCode": {"type": "string", "nullable": true}, "odsBackupDescription": {"type": "string", "nullable": true}}, "additionalProperties": false}, "TenantApi.Tenant.V1.LicenseType": {"enum": ["Unknown", "Full", "Trial"], "type": "string"}, "TenantApi.Tenant.V1.Onboarding": {"type": "object", "properties": {"status": {"type": "string", "nullable": true}, "progressPercentage": {"type": "number", "format": "float"}, "totalSteps": {"type": "integer", "format": "int32"}, "lastCompletedStep": {"type": "integer", "format": "int32", "nullable": true}, "startedAt": {"type": "string", "nullable": true}, "completedAt": {"type": "string", "nullable": true}, "steps": {"type": "array", "items": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.OnboardingStep"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "TenantApi.Tenant.V1.OnboardingStep": {"type": "object", "properties": {"number": {"type": "integer", "format": "int32"}, "description": {"type": "string", "nullable": true}, "status": {"type": "string", "nullable": true}, "startedAt": {"type": "string", "nullable": true}, "completedAt": {"type": "string", "nullable": true}}, "additionalProperties": false}, "TenantApi.Tenant.V1.Organization": {"type": "object", "properties": {"identifierType": {"type": "string", "nullable": true}, "identifierValue": {"type": "string", "nullable": true}, "discriminator": {"type": "string", "nullable": true}, "source": {"type": "string", "nullable": true}, "shortNameOfInstitution": {"type": "string", "nullable": true}, "nameOfInstitution": {"type": "string", "nullable": true}, "includeInJwt": {"type": "boolean"}}, "additionalProperties": false}, "TenantApi.Tenant.V1.OrganizationCreatedResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "identifierValue": {"type": "string", "nullable": true}}, "additionalProperties": false}, "TenantApi.Tenant.V1.OrganizationDeletedResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "identifierValue": {"type": "string", "nullable": true}}, "additionalProperties": false}, "TenantApi.Tenant.V1.OrganizationUpdatedResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "identifierValue": {"type": "string", "nullable": true}}, "additionalProperties": false}, "TenantApi.Tenant.V1.OrganizationsSyncedResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "TenantApi.Tenant.V1.SetAppSettingsRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "clientId": {"type": "string", "nullable": true}, "code": {"type": "string", "nullable": true}, "data": {"type": "string", "nullable": true}, "dataType": {"type": "string", "nullable": true}}, "additionalProperties": false}, "TenantApi.Tenant.V1.SetAppSettingsResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "clientId": {"type": "string", "nullable": true}, "code": {"type": "string", "nullable": true}}, "additionalProperties": false}, "TenantApi.Tenant.V1.SubscriptionCreatedResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "subscriptionId": {"type": "string", "nullable": true}, "applicationId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "TenantApi.Tenant.V1.SubscriptionProfileResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "subscriptionId": {"type": "string", "nullable": true}, "applicationId": {"type": "string", "nullable": true}, "startDateTime": {"type": "string", "nullable": true}, "endDateTime": {"type": "string", "nullable": true}, "actualEndDateTime": {"type": "string", "nullable": true}, "gracePeriod": {"type": "integer", "format": "int32"}, "numberOfLicenses": {"type": "integer", "format": "int32"}, "assignedLicenses": {"type": "integer", "format": "int32"}, "maxAssignedLicenses": {"type": "integer", "format": "int32"}, "lastMaxAssignedLicensesDateTime": {"type": "string", "nullable": true}, "licenseType": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.LicenseType"}, "subscriptionStatus": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.SubscriptionStatus"}, "autoAssign": {"type": "boolean"}, "createdBy": {"type": "string", "nullable": true}, "createdDateTime": {"type": "string", "nullable": true}, "lastModifiedBy": {"type": "string", "nullable": true}, "lastModifiedDateTime": {"type": "string", "nullable": true}, "deletedAt": {"type": "string", "nullable": true}}, "additionalProperties": false}, "TenantApi.Tenant.V1.SubscriptionStatus": {"enum": ["Unknown", "Active", "Inactive", "Pending", "Rejected"], "type": "string"}, "TenantApi.Tenant.V1.SubscriptionUpdatedResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "subscriptionId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "TenantApi.Tenant.V1.SyncOrganizationsRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "instanceId": {"type": "string", "nullable": true}, "year": {"type": "integer", "format": "int32"}}, "additionalProperties": false}, "TenantApi.Tenant.V1.TenantAppSettings": {"type": "object", "properties": {"clientId": {"type": "string", "nullable": true}, "code": {"type": "string", "nullable": true}, "data": {"type": "string", "nullable": true}, "dataType": {"type": "string", "nullable": true}}, "additionalProperties": false}, "TenantApi.Tenant.V1.TenantIdentityProviders": {"enum": ["Local", "Aad", "Google", "Adfs"], "type": "string"}, "TenantApi.Tenant.V1.TenantProfileResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "tenantType": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.TenantType"}, "organizationIdentifier": {"type": "string", "nullable": true}, "organizationName": {"type": "string", "nullable": true}, "state": {"type": "string", "nullable": true}, "tenantStatus": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.TenantStatus"}, "isDemo": {"type": "boolean"}, "enforceMfa": {"type": "boolean"}, "subscriptionsMigrated": {"type": "boolean"}, "showLocalLoginOptionToTenantAdmins": {"type": "boolean"}, "subscriptions": {"type": "array", "items": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.SubscriptionProfileResponse"}, "nullable": true, "readOnly": true}, "domains": {"type": "array", "items": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.DomainProfileResponse"}, "nullable": true, "readOnly": true}, "createdBy": {"type": "string", "nullable": true}, "createdDateTime": {"type": "string", "nullable": true}, "lastModifiedBy": {"type": "string", "nullable": true}, "lastModifiedDateTime": {"type": "string", "nullable": true}, "identityProviders": {"type": "array", "items": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.TenantIdentityProviders"}, "nullable": true, "readOnly": true}, "onboarding": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.Onboarding"}, "organizations": {"type": "array", "items": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.Organization"}, "nullable": true, "readOnly": true}, "organizationIdentifierHash": {"type": "string", "nullable": true}}, "additionalProperties": false}, "TenantApi.Tenant.V1.TenantStatus": {"enum": ["Unknown", "Active", "Inactive"], "type": "string"}, "TenantApi.Tenant.V1.TenantType": {"enum": ["Unknown", "Internal", "State", "Collaborative", "District", "Partner", "Teacher", "Student"], "type": "string"}, "TenantApi.Tenant.V1.TenantUpdatedResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "TenantApi.Tenant.V1.UpdateDomainRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "oldDomainName": {"type": "string", "nullable": true}, "newDomainName": {"type": "string", "nullable": true}, "domainStatus": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.DomainStatus"}, "autoAssignUsers": {"type": "boolean"}}, "additionalProperties": false}, "TenantApi.Tenant.V1.UpdateOnboardingStepRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "number": {"type": "integer", "format": "int32"}, "status": {"type": "string", "nullable": true}}, "additionalProperties": false}, "TenantApi.Tenant.V1.UpdateOrganizationRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "identifierValue": {"type": "string", "nullable": true}, "discriminator": {"type": "string", "nullable": true}, "source": {"type": "string", "nullable": true}, "shortNameOfInstitution": {"type": "string", "nullable": true}, "nameOfInstitution": {"type": "string", "nullable": true}, "includeInJwt": {"type": "boolean"}}, "additionalProperties": false}, "TenantApi.Tenant.V1.UpdateSubscriptionRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "subscriptionId": {"type": "string", "nullable": true}, "startDateTime": {"type": "string", "nullable": true}, "endDateTime": {"type": "string", "nullable": true}, "gracePeriod": {"type": "integer", "format": "int32"}, "numberOfLicenses": {"type": "integer", "format": "int32"}, "assignedLicenses": {"type": "integer", "format": "int32"}, "licenseType": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.LicenseType"}, "autoAssign": {"type": "boolean", "description": "SubscriptionStatus SubscriptionStatus = 10;"}}, "additionalProperties": false}, "TenantApi.Tenant.V1.VerifyDomainRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "domainName": {"type": "string", "nullable": true}}, "additionalProperties": false}, "TenantApi.Webhook.V1.CreateWebhookRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "name": {"type": "string", "nullable": true}, "url": {"type": "string", "nullable": true}, "secretHeader": {"type": "string", "nullable": true}, "secretValue": {"type": "string", "nullable": true}, "contentType": {"type": "string", "nullable": true}, "eventSubscriptions": {"type": "array", "items": {"$ref": "#/components/schemas/TenantApi.Webhook.V1.WebhookSubscriberResponse"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "TenantApi.Webhook.V1.PaginatedItemsResponse": {"type": "object", "properties": {"pageIndex": {"type": "integer", "format": "int32"}, "pageSize": {"type": "integer", "format": "int32"}, "count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/TenantApi.Webhook.V1.WebhookResponse"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "TenantApi.Webhook.V1.UpdateWebhookRequest": {"type": "object", "properties": {"id": {"type": "string", "nullable": true}, "tenantId": {"type": "string", "nullable": true}, "name": {"type": "string", "nullable": true}, "url": {"type": "string", "nullable": true}, "secretHeader": {"type": "string", "nullable": true}, "secretValue": {"type": "string", "nullable": true}, "contentType": {"type": "string", "nullable": true}, "status": {"type": "string", "nullable": true}, "eventSubscriptions": {"type": "array", "items": {"$ref": "#/components/schemas/TenantApi.Webhook.V1.WebhookSubscriberResponse"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "TenantApi.Webhook.V1.WebhookEventsResponse": {"type": "object", "properties": {"eventSubscriptions": {"type": "array", "items": {"$ref": "#/components/schemas/TenantApi.Webhook.V1.WebhookSubscriberResponse"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "TenantApi.Webhook.V1.WebhookIdResponse": {"type": "object", "properties": {"id": {"type": "string", "nullable": true}}, "additionalProperties": false}, "TenantApi.Webhook.V1.WebhookResponse": {"type": "object", "properties": {"id": {"type": "string", "nullable": true}, "tenantId": {"type": "string", "nullable": true}, "createdAt": {"type": "string", "nullable": true}, "createdBy": {"type": "string", "nullable": true}, "updatedAt": {"type": "string", "nullable": true}, "updatedBy": {"type": "string", "nullable": true}, "isDeleted": {"type": "boolean"}, "name": {"type": "string", "nullable": true}, "url": {"type": "string", "nullable": true}, "secretHeader": {"type": "string", "nullable": true}, "secretValue": {"type": "string", "nullable": true}, "contentType": {"type": "string", "nullable": true}, "status": {"type": "string", "nullable": true}, "eventSubscriptions": {"type": "array", "items": {"$ref": "#/components/schemas/TenantApi.Webhook.V1.WebhookSubscriberResponse"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "TenantApi.Webhook.V1.WebhookSubscriberResponse": {"type": "object", "properties": {"eventName": {"type": "string", "nullable": true}, "eventVersion": {"type": "string", "nullable": true}, "eventSchema": {"type": "string", "nullable": true}, "groupName": {"type": "string", "nullable": true}, "scope": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}}, "additionalProperties": false, "description": "Webhook Subscribers"}, "ValidationsApi.Containers.V1.ContainerDto": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "id": {"type": "string", "nullable": true}, "name": {"type": "string", "nullable": true}, "description": {"type": "string", "nullable": true}, "containerType": {"type": "string", "nullable": true}, "parentContainerId": {"type": "string", "nullable": true}, "isDefault": {"type": "boolean"}, "environmentType": {"type": "string", "nullable": true}, "childContainers": {"type": "array", "items": {"$ref": "#/components/schemas/ValidationsApi.Containers.V1.ContainerDto"}, "nullable": true, "readOnly": true}, "childContainersCount": {"type": "integer", "format": "int32", "nullable": true}, "tags": {"type": "array", "items": {"$ref": "#/components/schemas/ValidationsApi.Containers.V1.ContainerDto+Types+TagDto"}, "nullable": true, "readOnly": true}, "rulesCount": {"type": "integer", "format": "int32", "nullable": true}}, "additionalProperties": false}, "ValidationsApi.Containers.V1.ContainerDto+Types+TagDto": {"type": "object", "properties": {"id": {"type": "string", "nullable": true}, "name": {"type": "string", "nullable": true}, "description": {"type": "string", "nullable": true}}, "additionalProperties": false}, "ValidationsApi.Containers.V1.CreateCollectionRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "name": {"type": "string", "nullable": true}, "description": {"type": "string", "nullable": true}, "environmentType": {"type": "string", "nullable": true}, "tags": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "ValidationsApi.Containers.V1.CreateContainerRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "name": {"type": "string", "nullable": true}, "description": {"type": "string", "nullable": true}, "environmentType": {"type": "string", "nullable": true}, "tags": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}, "parentContainerId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "ValidationsApi.Containers.V1.GetJsonResponse": {"type": "object", "properties": {"collectionJson": {"type": "string", "nullable": true}}, "additionalProperties": false}, "ValidationsApi.Containers.V1.PaginatedContainers": {"type": "object", "properties": {"pageIndex": {"type": "integer", "format": "int32"}, "pageSize": {"type": "integer", "format": "int32"}, "count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/ValidationsApi.Containers.V1.ContainerDto"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "ValidationsApi.Containers.V1.UpdateCollectionRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "id": {"type": "string", "nullable": true}, "name": {"type": "string", "nullable": true}, "description": {"type": "string", "nullable": true}, "environmentType": {"type": "string", "nullable": true}, "tags": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "ValidationsApi.Containers.V1.UpdateContainerRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "id": {"type": "string", "nullable": true}, "name": {"type": "string", "nullable": true}, "description": {"type": "string", "nullable": true}, "tags": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "ValidationsApi.Containers.V1.UploadCollectionRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "collectionJson": {"type": "string", "nullable": true}}, "additionalProperties": false}, "ValidationsApi.Core.V1.CreatedResponse": {"type": "object", "properties": {"id": {"type": "string", "nullable": true}}, "additionalProperties": false}, "ValidationsApi.Core.V1.EmptyResponse": {"type": "object", "additionalProperties": false}, "ValidationsApi.DbEnvironments.V1.AzureSynapseSqlServerlessConnection": {"type": "object", "properties": {"server": {"type": "string", "nullable": true}, "database": {"type": "string", "nullable": true}, "username": {"type": "string", "nullable": true}, "password": {"type": "string", "nullable": true}}, "additionalProperties": false}, "ValidationsApi.DbEnvironments.V1.CreateRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "description": "Details", "nullable": true}, "id": {"type": "string", "nullable": true}, "name": {"type": "string", "nullable": true}, "connectionType": {"type": "string", "description": "Connection", "nullable": true}, "sqlServerConnection": {"$ref": "#/components/schemas/ValidationsApi.DbEnvironments.V1.SqlServerConnection"}, "azureSynapseSqlServerlessConnection": {"$ref": "#/components/schemas/ValidationsApi.DbEnvironments.V1.AzureSynapseSqlServerlessConnection"}, "maxNumberResults": {"type": "integer", "description": "Metadata", "format": "int32", "nullable": true}, "timeoutInMinutes": {"type": "integer", "format": "int32", "nullable": true}, "version": {"type": "integer", "format": "int32", "nullable": true}, "mapTables": {"type": "string", "nullable": true}}, "additionalProperties": false}, "ValidationsApi.DbEnvironments.V1.DbEnvironmentDto": {"type": "object", "properties": {"tenantId": {"type": "string", "description": "Details", "nullable": true}, "id": {"type": "string", "nullable": true}, "name": {"type": "string", "nullable": true}, "connectionType": {"type": "string", "description": "Connection", "nullable": true}, "sqlServerConnection": {"$ref": "#/components/schemas/ValidationsApi.DbEnvironments.V1.SqlServerConnection"}, "azureSynapseSqlServerlessConnection": {"$ref": "#/components/schemas/ValidationsApi.DbEnvironments.V1.AzureSynapseSqlServerlessConnection"}, "connectionString": {"type": "string", "nullable": true}, "maxNumberResults": {"type": "integer", "description": "Metadata", "format": "int32", "nullable": true}, "timeoutInMinutes": {"type": "integer", "format": "int32", "nullable": true}, "version": {"type": "integer", "format": "int32", "nullable": true}, "mapTables": {"type": "string", "nullable": true}}, "additionalProperties": false}, "ValidationsApi.DbEnvironments.V1.PaginatedDbEnvironments": {"type": "object", "properties": {"pageIndex": {"type": "integer", "format": "int32"}, "pageSize": {"type": "integer", "format": "int32"}, "count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/ValidationsApi.DbEnvironments.V1.DbEnvironmentDto"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "ValidationsApi.DbEnvironments.V1.SqlServerConnection": {"type": "object", "properties": {"server": {"type": "string", "nullable": true}, "database": {"type": "string", "nullable": true}, "username": {"type": "string", "nullable": true}, "password": {"type": "string", "nullable": true}}, "additionalProperties": false}, "ValidationsApi.DbEnvironments.V1.TestConnectionRequest": {"type": "object", "properties": {"id": {"type": "string", "nullable": true}, "connectionType": {"type": "string", "nullable": true}, "sqlServerConnection": {"$ref": "#/components/schemas/ValidationsApi.DbEnvironments.V1.SqlServerConnection"}, "azureSynapseSqlServerlessConnection": {"$ref": "#/components/schemas/ValidationsApi.DbEnvironments.V1.AzureSynapseSqlServerlessConnection"}}, "additionalProperties": false}, "ValidationsApi.DbEnvironments.V1.TestConnectionResponse": {"type": "object", "properties": {"canConnect": {"type": "boolean"}, "reasonFailed": {"type": "string", "nullable": true}}, "additionalProperties": false}, "ValidationsApi.DbEnvironments.V1.UpdateRequest": {"type": "object", "properties": {"id": {"type": "string", "description": "Details", "nullable": true}, "name": {"type": "string", "nullable": true}, "connectionType": {"type": "string", "description": "Connection", "nullable": true}, "sqlServerConnection": {"$ref": "#/components/schemas/ValidationsApi.DbEnvironments.V1.SqlServerConnection"}, "azureSynapseSqlServerlessConnection": {"$ref": "#/components/schemas/ValidationsApi.DbEnvironments.V1.AzureSynapseSqlServerlessConnection"}, "maxNumberResults": {"type": "integer", "description": "Metadata", "format": "int32", "nullable": true}, "timeoutInMinutes": {"type": "integer", "format": "int32", "nullable": true}, "version": {"type": "integer", "format": "int32", "nullable": true}, "mapTables": {"type": "string", "nullable": true}}, "additionalProperties": false}, "ValidationsApi.Jobs.V1.ChildJob": {"type": "object", "properties": {"jobId": {"type": "string", "nullable": true}, "jobExecutionId": {"type": "string", "nullable": true}, "childJobId": {"type": "string", "nullable": true}, "childJobName": {"type": "string", "nullable": true}, "jobExecutionStatus": {"$ref": "#/components/schemas/ValidationsApi.Jobs.V1.JobExecutionStatus"}, "jobExecutionStartDateTime": {"type": "string", "nullable": true}, "jobExecutionEndDateTime": {"type": "string", "nullable": true}, "metrics": {"type": "array", "items": {"$ref": "#/components/schemas/ValidationsApi.Jobs.V1.Metric"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "ValidationsApi.Jobs.V1.CreateRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "name": {"type": "string", "nullable": true}, "jobMetadata": {"type": "array", "items": {"$ref": "#/components/schemas/ValidationsApi.Jobs.V1.JobMetadata"}, "nullable": true, "readOnly": true}, "schedule": {"$ref": "#/components/schemas/ValidationsApi.Jobs.V1.Schedule"}, "notificationEmails": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "ValidationsApi.Jobs.V1.DataRefreshType": {"enum": ["Unknown", "Full", "Deltasincelastjobexecution", "Deltasincespecificdatetime"], "type": "string"}, "ValidationsApi.Jobs.V1.JobExecutionStatus": {"enum": ["Unknown", "Queued", "Running", "Completed", "CompletedWithErrors", "Cancelled", "Error", "QueuedForCancel"], "type": "string"}, "ValidationsApi.Jobs.V1.JobListResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "jobId": {"type": "string", "nullable": true}, "name": {"type": "string", "nullable": true}, "jobTypeId": {"type": "string", "nullable": true}, "jobTypeName": {"type": "string", "nullable": true}, "sourceConnectionId": {"type": "string", "nullable": true}, "destinationConnectionId": {"type": "string", "nullable": true}, "profileId": {"type": "string", "nullable": true}, "applicationId": {"type": "string", "nullable": true}, "schedule": {"$ref": "#/components/schemas/ValidationsApi.Jobs.V1.Schedule"}, "jobStatus": {"$ref": "#/components/schemas/ValidationsApi.Jobs.V1.JobStatus"}, "jobExecutionId": {"type": "string", "nullable": true}, "jobExecutionStatus": {"$ref": "#/components/schemas/ValidationsApi.Jobs.V1.JobExecutionStatus"}, "jobExecutionStartDateTime": {"type": "string", "nullable": true}, "jobExecutionEndDateTime": {"type": "string", "nullable": true}, "metrics": {"type": "array", "items": {"$ref": "#/components/schemas/ValidationsApi.Jobs.V1.Metric"}, "nullable": true, "readOnly": true}, "childJobs": {"type": "array", "items": {"$ref": "#/components/schemas/ValidationsApi.Jobs.V1.ChildJob"}, "nullable": true, "readOnly": true}, "createdBy": {"type": "string", "nullable": true}, "createdDateTime": {"type": "string", "nullable": true}, "lastModifiedBy": {"type": "string", "nullable": true}, "lastModifiedDateTime": {"type": "string", "nullable": true}, "collectionId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "ValidationsApi.Jobs.V1.JobMetadata": {"type": "object", "properties": {"code": {"type": "string", "nullable": true}, "value": {"type": "string", "nullable": true}}, "additionalProperties": false}, "ValidationsApi.Jobs.V1.JobProfileResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "jobId": {"type": "string", "nullable": true}, "name": {"type": "string", "nullable": true}, "jobTypeId": {"type": "string", "nullable": true}, "jobTypeName": {"type": "string", "nullable": true}, "sourceConnectionId": {"type": "string", "nullable": true}, "destinationConnectionId": {"type": "string", "nullable": true}, "profileId": {"type": "string", "nullable": true}, "profileName": {"type": "string", "nullable": true}, "applicationId": {"type": "string", "nullable": true}, "jobPoints": {"type": "integer", "format": "int32"}, "dataRefreshType": {"$ref": "#/components/schemas/ValidationsApi.Jobs.V1.DataRefreshType"}, "dataRefreshSpecificDate": {"type": "string", "nullable": true}, "maxApiFailure": {"type": "integer", "format": "int32"}, "maxApiRetry": {"type": "integer", "format": "int32"}, "jobCompleteCallbackUrl": {"type": "string", "nullable": true}, "jobMetadata": {"type": "array", "items": {"$ref": "#/components/schemas/ValidationsApi.Jobs.V1.JobMetadata"}, "nullable": true, "readOnly": true}, "schedule": {"$ref": "#/components/schemas/ValidationsApi.Jobs.V1.Schedule"}, "notificationEmails": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}, "jobStatus": {"$ref": "#/components/schemas/ValidationsApi.Jobs.V1.JobStatus"}, "jobExecutionId": {"type": "string", "nullable": true}, "jobExecutionStatus": {"$ref": "#/components/schemas/ValidationsApi.Jobs.V1.JobExecutionStatus"}, "jobExecutionStartDateTime": {"type": "string", "nullable": true}, "jobExecutionEndDateTime": {"type": "string", "nullable": true}, "metrics": {"type": "array", "items": {"$ref": "#/components/schemas/ValidationsApi.Jobs.V1.Metric"}, "nullable": true, "readOnly": true}, "childJobs": {"type": "array", "items": {"$ref": "#/components/schemas/ValidationsApi.Jobs.V1.ChildJob"}, "nullable": true, "readOnly": true}, "createdBy": {"type": "string", "nullable": true}, "createdDateTime": {"type": "string", "nullable": true}, "lastModifiedBy": {"type": "string", "nullable": true}, "lastModifiedDateTime": {"type": "string", "nullable": true}, "collectionId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "ValidationsApi.Jobs.V1.JobStatus": {"enum": ["Unknown", "Active", "Deactivated", "QueuedForDelete", "QueuedForScheduleRestart"], "type": "string"}, "ValidationsApi.Jobs.V1.Metric": {"type": "object", "properties": {"entity": {"type": "string", "nullable": true}, "processed": {"type": "integer", "format": "int32"}, "success": {"type": "integer", "format": "int32"}, "errors": {"type": "integer", "format": "int32"}}, "additionalProperties": false}, "ValidationsApi.Jobs.V1.PaginatedItemsResponse": {"type": "object", "properties": {"pageIndex": {"type": "integer", "format": "int32"}, "pageSize": {"type": "integer", "format": "int32"}, "count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/ValidationsApi.Jobs.V1.JobListResponse"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "ValidationsApi.Jobs.V1.Schedule": {"type": "object", "properties": {"enabled": {"type": "boolean"}, "beginDate": {"type": "string", "nullable": true}, "endDate": {"type": "string", "nullable": true}, "cron": {"type": "string", "nullable": true}, "timeZone": {"type": "string", "nullable": true}}, "additionalProperties": false}, "ValidationsApi.Jobs.V1.UpdateRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "id": {"type": "string", "nullable": true}, "name": {"type": "string", "nullable": true}, "jobMetadata": {"type": "array", "items": {"$ref": "#/components/schemas/ValidationsApi.Jobs.V1.JobMetadata"}, "nullable": true, "readOnly": true}, "schedule": {"$ref": "#/components/schemas/ValidationsApi.Jobs.V1.Schedule"}, "notificationEmails": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "ValidationsApi.RuleExecutionLogs.V1.FindResponse": {"type": "object", "properties": {"pageIndex": {"type": "integer", "format": "int32"}, "pageSize": {"type": "integer", "format": "int32"}, "count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/ValidationsApi.RuleExecutionLogs.V1.RuleExecutionLogDto"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "ValidationsApi.RuleExecutionLogs.V1.RuleExecutionLogDto": {"type": "object", "properties": {"id": {"type": "string", "nullable": true}, "environmentId": {"type": "string", "nullable": true}, "collectionId": {"type": "string", "nullable": true}, "containerId": {"type": "string", "nullable": true}, "ruleId": {"type": "string", "nullable": true}, "jobId": {"type": "string", "nullable": true}, "jobExecutionId": {"type": "string", "nullable": true}, "response": {"type": "string", "nullable": true}, "result": {"type": "integer", "format": "int32"}, "evaluation": {"type": "boolean"}, "statusId": {"type": "integer", "format": "int32"}, "executionDate": {"type": "string", "nullable": true}, "executionTimeMs": {"type": "integer", "format": "int64"}, "executedSql": {"type": "string", "nullable": true}, "diagnosticSql": {"type": "string", "nullable": true}, "ruleDetailsDestinationId": {"type": "integer", "format": "int32", "nullable": true}, "detailsSchema": {"type": "string", "nullable": true}, "detailsTableName": {"type": "string", "nullable": true}, "details": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "ValidationsApi.Rules.V1.CreateRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "description": "Details", "nullable": true}, "containerId": {"type": "string", "nullable": true}, "id": {"type": "string", "nullable": true}, "name": {"type": "string", "nullable": true}, "description": {"type": "string", "nullable": true}, "diagnosticSql": {"type": "string", "description": "SQL", "nullable": true}, "countSql": {"type": "string", "nullable": true}, "errorSeverityLevel": {"type": "integer", "format": "int32"}, "errorMessage": {"type": "string", "nullable": true}, "maxNumberResults": {"type": "integer", "format": "int32", "nullable": true}, "ruleIdentification": {"type": "string", "description": "Metadata", "nullable": true}, "resolution": {"type": "string", "nullable": true}, "tags": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}, "version": {"type": "string", "nullable": true}}, "additionalProperties": false}, "ValidationsApi.Rules.V1.PaginatedRules": {"type": "object", "properties": {"pageIndex": {"type": "integer", "format": "int32"}, "pageSize": {"type": "integer", "format": "int32"}, "count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/ValidationsApi.Rules.V1.RuleDto"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "ValidationsApi.Rules.V1.RuleDto": {"type": "object", "properties": {"tenantId": {"type": "string", "description": "Details", "nullable": true}, "containerId": {"type": "string", "nullable": true}, "id": {"type": "string", "nullable": true}, "name": {"type": "string", "nullable": true}, "description": {"type": "string", "nullable": true}, "diagnosticSql": {"type": "string", "description": "SQL", "nullable": true}, "countSql": {"type": "string", "nullable": true}, "errorSeverityLevel": {"type": "integer", "format": "int32"}, "errorMessage": {"type": "string", "nullable": true}, "maxNumberResults": {"type": "integer", "format": "int32", "nullable": true}, "ruleIdentification": {"type": "string", "description": "Metadata", "nullable": true}, "resolution": {"type": "string", "nullable": true}, "tags": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}, "version": {"type": "string", "nullable": true}, "parentCollection": {"$ref": "#/components/schemas/ValidationsApi.Containers.V1.ContainerDto"}, "parentContainer": {"$ref": "#/components/schemas/ValidationsApi.Containers.V1.ContainerDto"}}, "additionalProperties": false}, "ValidationsApi.Rules.V1.UpdateRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "description": "Details", "nullable": true}, "id": {"type": "string", "nullable": true}, "name": {"type": "string", "nullable": true}, "description": {"type": "string", "nullable": true}, "diagnosticSql": {"type": "string", "description": "SQL", "nullable": true}, "countSql": {"type": "string", "nullable": true}, "errorSeverityLevel": {"type": "integer", "format": "int32"}, "errorMessage": {"type": "string", "nullable": true}, "maxNumberResults": {"type": "integer", "format": "int32", "nullable": true}, "ruleIdentification": {"type": "string", "description": "Metadata", "nullable": true}, "resolution": {"type": "string", "nullable": true}, "tags": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}, "version": {"type": "string", "nullable": true}}, "additionalProperties": false}, "ValidationsApi.Tags.V1.CreateRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "name": {"type": "string", "nullable": true}, "description": {"type": "string", "nullable": true}, "isPublic": {"type": "boolean"}}, "additionalProperties": false}, "ValidationsApi.Tags.V1.PaginatedTags": {"type": "object", "properties": {"pageIndex": {"type": "integer", "format": "int32"}, "pageSize": {"type": "integer", "format": "int32"}, "count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/ValidationsApi.Tags.V1.TagDto"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "ValidationsApi.Tags.V1.TagDto": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "id": {"type": "string", "nullable": true}, "name": {"type": "string", "nullable": true}, "description": {"type": "string", "nullable": true}, "isPublic": {"type": "boolean"}}, "additionalProperties": false}, "ValidationsApi.Tags.V1.UpdateRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "id": {"type": "string", "nullable": true}, "name": {"type": "string", "nullable": true}, "description": {"type": "string", "nullable": true}, "isPublic": {"type": "boolean"}}, "additionalProperties": false}}, "securitySchemes": {"oauth2": {"type": "oauth2", "description": "Use bearer token generated from an OpenId server", "flows": {"clientCredentials": {"tokenUrl": "https://login.demo.txedexchange.net/connect/token", "scopes": {"https://api.edgraph.com/tenant": "EdGraph Platform - Tenant Api"}}}}}}, "security": [{"oauth2": ["https://api.edgraph.com/tenant"]}]}