{"openapi": "3.0.1", "info": {"title": "Management Api", "description": "Api to help platform wide items such as users, tenants, applications, subscriptions, etc.", "version": "v1.0"}, "servers": [{"url": "https://api.dev.txedexchange.net/management"}], "paths": {"/apiresources/{apiResourceId}": {"delete": {"tags": ["Api Resources"], "summary": "Deletes an OpenId Api Resource", "operationId": "DeleteApiResourceAsync", "parameters": [{"name": "apiResourceId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "204": {"description": "The resource was successfully deleted."}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "get": {"tags": ["Api Resources"], "summary": "Retrieves a specific OpenId Api Resource", "operationId": "GetApiResourceByIdAsync", "parameters": [{"name": "apiResourceId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Responses.ApiResourceResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "put": {"tags": ["Api Resources"], "summary": "Adds or Updates an OpenId Api Resource", "operationId": "CreateOrUpdateApiResourceAsync", "parameters": [{"name": "apiResourceId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.UpdateApiResourceRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.UpdateApiResourceRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.UpdateApiResourceRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.UpdateApiResourceRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Responses.ApiResourceResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/apiresources": {"get": {"tags": ["Api Resources"], "summary": "Retrieves a list of OpenId Api Resources", "operationId": "GetAllApiResourcesAsync", "parameters": [{"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string", "default": "Name ASC"}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Responses.ApiResourceResponsePaginatedItemsViewModel"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "post": {"tags": ["Api Resources"], "summary": "Creates a new OpenId Api Resource", "operationId": "CreateApiResourceAsync", "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.CreateApiResourceRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.CreateApiResourceRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.CreateApiResourceRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.CreateApiResourceRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "201": {"description": "The resource was created. The location of the resource is available in the Location header of the response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Responses.ApiResourceResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/apiscopes/{apiScopeId}": {"delete": {"tags": ["Api Scopes"], "summary": "Deletes an OpenId Api Scope", "operationId": "DeleteApiScopeAsync", "parameters": [{"name": "apiScopeId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "204": {"description": "The resource was successfully deleted."}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "get": {"tags": ["Api Scopes"], "summary": "Retrieves a specific OpenId Api Scope", "operationId": "GetApiScopeByIdAsync", "parameters": [{"name": "apiScopeId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.ApiScope.V1.ApiScopeResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "put": {"tags": ["Api Scopes"], "summary": "Adds or Updates an OpenId Api Scope", "operationId": "CreateOrUpdateApiScopeAsync", "parameters": [{"name": "apiScopeId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.ApiScope.V1.UpdateApiScopeRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.ApiScope.V1.UpdateApiScopeRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.ApiScope.V1.UpdateApiScopeRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.ApiScope.V1.UpdateApiScopeRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.ApiScope.V1.ApiScopeResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/apiscopes": {"get": {"tags": ["Api Scopes"], "summary": "Retrieves a list of OpenId Api Scopes", "operationId": "GetAllApiScopesAsync", "parameters": [{"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string", "default": "Name ASC"}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.ApiScope.V1.ApiScopeResponsePaginatedItemsViewModel"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "post": {"tags": ["Api Scopes"], "summary": "Creates a new OpenId Api Scope", "operationId": "CreateApiScopeAsync", "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.ApiScope.V1.CreateApiScopeRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.ApiScope.V1.CreateApiScopeRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.ApiScope.V1.CreateApiScopeRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.ApiScope.V1.CreateApiScopeRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "201": {"description": "The resource was created. The location of the resource is available in the Location header of the response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.ApiScope.V1.ApiScopeResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/applications/{applicationId}/launchersettings": {"get": {"tags": ["Applications"], "summary": "Retrieves the launcher settings for a specific application", "operationId": "GetApplicationLauncherSettingsByIdAsync", "parameters": [{"name": "applicationId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ApplicationApi.Application.V1.ApplicationLauncherSettingsResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found."}}}, "put": {"tags": ["Applications"], "summary": "Update an application's launcher settings", "operationId": "UpdateApplicationLauncherSettingsAsync", "parameters": [{"name": "applicationId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.UpdateApplicationLauncherSettingsRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.UpdateApplicationLauncherSettingsRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.UpdateApplicationLauncherSettingsRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.UpdateApplicationLauncherSettingsRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ApplicationApi.Application.V1.ApplicationUpdatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/applications/{applicationId}/publish": {"put": {"tags": ["Applications"], "summary": "Publish an application", "operationId": "PublishApplicationAsync", "parameters": [{"name": "applicationId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ApplicationApi.Application.V1.ApplicationPublishedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/applications/{applicationId}/purge": {"delete": {"tags": ["Applications"], "summary": "Purges an application", "operationId": "PurgeApplicationAsync", "parameters": [{"name": "applicationId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/ApplicationApi.Application.V1.PurgeApplicationRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/ApplicationApi.Application.V1.PurgeApplicationRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/ApplicationApi.Application.V1.PurgeApplicationRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/ApplicationApi.Application.V1.PurgeApplicationRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "Success", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ApplicationApi.Application.V1.ApplicationPurgedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "204": {"description": "The resource was successfully purged."}}}}, "/applications/{applicationId}/recover": {"put": {"tags": ["Applications"], "summary": "Recovers a deleted application", "operationId": "RecoverApplicationAsync", "parameters": [{"name": "applicationId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/ApplicationApi.Application.V1.RecoverApplicationRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/ApplicationApi.Application.V1.RecoverApplicationRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/ApplicationApi.Application.V1.RecoverApplicationRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/ApplicationApi.Application.V1.RecoverApplicationRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "Success", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ApplicationApi.Application.V1.ApplicationRecoveredResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "204": {"description": "The resource was successfully purged."}}}}, "/applications/{applicationId}/tenants/{tenantId}/instances/{instanceId}/verificationstatus/{step}": {"put": {"tags": ["Applications"], "summary": "Updates an Instance Onboarding Step for a Tenant Subscribed to a given application.", "operationId": "UpdateApplicationInstanceOnboardingStepAsync", "parameters": [{"name": "applicationId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "instanceId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "step", "in": "path", "description": "", "required": true, "schema": {"type": "integer", "format": "int32"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.UpdateOnboardingStepRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.UpdateOnboardingStepRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.UpdateOnboardingStepRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.UpdateOnboardingStepRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.InstanceUpdatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/applications/{applicationId}/tenants/{tenantId}/instances": {"get": {"tags": ["Applications"], "summary": "Retrieves all Application Instances for a Tenant", "operationId": "GetTenantInstancesAsync", "parameters": [{"name": "applicationId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "Success", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Services.Management.EdFiInstanceListModelPaginatedItemsViewModel"}}}}, "400": {"description": "Bad Request", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "post": {"tags": ["Applications"], "summary": "Creates an Ed-Fi Instance for a tenant subscribed to a given application", "operationId": "CreateApplicationTenantInstance", "parameters": [{"name": "applicationId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {}}, "application/json": {"schema": {}}, "text/json": {"schema": {}}, "application/*+json": {"schema": {}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Services.Management.EdFiInstanceCreatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/applications/{applicationId}/tenants": {"get": {"tags": ["Applications"], "summary": "Retrieves a list of Tenants subscribed to a given Application.", "operationId": "GetApplicationTenantsAsync", "parameters": [{"name": "applicationId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.TenantListResponsePaginatedItemsViewModel"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/applications/{applicationId}/users": {"get": {"tags": ["Applications"], "summary": "Retrieves a list of Users licensed to a given Application", "operationId": "GetApplicationUsersAsync", "parameters": [{"name": "applicationId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.UserListResponsePaginatedItemsViewModel"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/applications/{applicationId}": {"delete": {"tags": ["Applications"], "summary": "Delete an application", "operationId": "DeleteApplicationAsync", "parameters": [{"name": "applicationId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/ApplicationApi.Application.V1.DeleteApplicationRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/ApplicationApi.Application.V1.DeleteApplicationRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/ApplicationApi.Application.V1.DeleteApplicationRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/ApplicationApi.Application.V1.DeleteApplicationRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "204": {"description": "The resource was successfully deleted."}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "get": {"tags": ["Applications"], "summary": "Retrieves a specific application", "operationId": "GetApplicationProfileByIdAsync", "parameters": [{"name": "applicationId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ApplicationApi.Application.V1.ApplicationProfileResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found."}}}, "put": {"tags": ["Applications"], "summary": "Update an application's profile", "operationId": "UpdateApplicationProfileAsync", "parameters": [{"name": "applicationId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.UpdateApplicationRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.UpdateApplicationRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.UpdateApplicationRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.UpdateApplicationRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ApplicationApi.Application.V1.ApplicationUpdatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/applications": {"get": {"tags": ["Applications"], "summary": "Retrieves a list applications", "operationId": "GetAllApplicationsAsync", "parameters": [{"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ApplicationApi.Application.V1.PaginatedItemsResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "post": {"tags": ["Applications"], "summary": "Create an application", "operationId": "CreateApplicationAsync", "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.CreateApplicationRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.CreateApplicationRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.CreateApplicationRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.CreateApplicationRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "201": {"description": "The resource was created. The location of the resource is available in the Location header of the response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ApplicationApi.Application.V1.ApplicationCreatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/authorizationResources/{authorizationResourceId}": {"delete": {"tags": ["AuthorizationResources"], "summary": "Deletes a AuthorizationResource.", "operationId": "DeleteAuthorizationResource", "parameters": [{"name": "authorizationResourceId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "204": {"description": "The resource was successfully deleted."}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.AuthorizationResource.V1.AuthorizationResourceDeletedResponse"}}}}}}, "get": {"tags": ["AuthorizationResources"], "summary": "Retrieves a AuthorizationResource by name.", "operationId": "GetAuthorizationResourceById", "parameters": [{"name": "authorizationResourceId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.AuthorizationResource.V1.AuthorizationResourceResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}, "put": {"tags": ["AuthorizationResources"], "summary": "Updates a AuthorizationResource.", "operationId": "UpdateAuthorizationResource", "parameters": [{"name": "authorizationResourceId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.AuthorizationResource.V1.UpdateAuthorizationResourceRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.AuthorizationResource.V1.UpdateAuthorizationResourceRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.AuthorizationResource.V1.UpdateAuthorizationResourceRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.AuthorizationResource.V1.UpdateAuthorizationResourceRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.AuthorizationResource.V1.AuthorizationResourceUpdatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/authorizationResources/bulk": {"post": {"tags": ["AuthorizationResources"], "summary": "Creates AuthorizationResources in bulk.", "operationId": "CreateAuthorizationResourcesBulk", "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.CreateAuthorizationResourcesBulkRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.CreateAuthorizationResourcesBulkRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.CreateAuthorizationResourcesBulkRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.CreateAuthorizationResourcesBulkRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "201": {"description": "The resource was created. The location of the resource is available in the Location header of the response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.AuthorizationResource.V1.AuthorizationResourcesBulkCreatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/authorizationResources": {"get": {"tags": ["AuthorizationResources"], "summary": "Retrieves a list of AuthorizationResources.", "operationId": "GetAuthorizationResources", "parameters": [{"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.AuthorizationResource.V1.GetAuthorizationResourcesResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "post": {"tags": ["AuthorizationResources"], "summary": "Creates a AuthorizationResource.", "operationId": "CreateAuthorizationResource", "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.AuthorizationResource.V1.CreateAuthorizationResourceRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.AuthorizationResource.V1.CreateAuthorizationResourceRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.AuthorizationResource.V1.CreateAuthorizationResourceRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.AuthorizationResource.V1.CreateAuthorizationResourceRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "201": {"description": "The resource was created. The location of the resource is available in the Location header of the response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.AuthorizationResource.V1.AuthorizationResourceCreatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/connections/{connectionId}": {"get": {"tags": ["DataSync Connections"], "summary": "Retrieves a connection for a tenant by Id", "operationId": "GetConnectionProfileById", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "connectionId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Connection.V1.ConnectionProfileResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "delete": {"tags": ["Tenant / Connections"], "summary": "Deletes a connection for a given tenant", "operationId": "DeleteConnectionById", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "connectionId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Connection.V1.DeleteConnectionRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Connection.V1.DeleteConnectionRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Connection.V1.DeleteConnectionRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Connection.V1.DeleteConnectionRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Connection.V1.ConnectionDeletedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "put": {"tags": ["Tenant / Connections"], "summary": "Updates a connection for a given tenant", "operationId": "UpdateConnectionById", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "connectionId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Connection.V1.UpdateConnectionRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Connection.V1.UpdateConnectionRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Connection.V1.UpdateConnectionRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Connection.V1.UpdateConnectionRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Connection.V1.ConnectionUpdatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/datasync/jobtypes/{jobTypeId}/profiles/{profileId}": {"delete": {"tags": ["DataSync"], "summary": "Delete a profile assigned to the DataSync job type", "operationId": "DeleteDataSyncProfileAsync", "parameters": [{"name": "jobTypeId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "profileId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.JobType.V1.DeleteProfileRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.JobType.V1.DeleteProfileRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.JobType.V1.DeleteProfileRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.JobType.V1.DeleteProfileRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "204": {"description": "The resource was successfully deleted."}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "put": {"tags": ["DataSync"], "summary": "Updates a profile assigned to the DataSync job type", "operationId": "UpdateDataSyncProfileAsync", "parameters": [{"name": "jobTypeId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "profileId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.JobType.V1.UpdateProfileRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.JobType.V1.UpdateProfileRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.JobType.V1.UpdateProfileRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.JobType.V1.UpdateProfileRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.JobType.V1.ProfileUpdatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/datasync/jobtypes/{jobTypeId}/profiles": {"post": {"tags": ["DataSync"], "summary": "Creates a new profile assigned to the DataSync job type", "operationId": "CreateDataSyncProfileAsync", "parameters": [{"name": "jobTypeId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.JobType.V1.CreateProfileRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.JobType.V1.CreateProfileRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.JobType.V1.CreateProfileRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.JobType.V1.CreateProfileRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "201": {"description": "The resource was created. The location of the resource is available in the Location header of the response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.JobType.V1.ProfileCreatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/datasync/jobtypes/{jobTypeId}": {"delete": {"tags": ["DataSync"], "summary": "Delete a DataSync job type", "operationId": "DeleteDataSyncJobTypeAsync", "parameters": [{"name": "jobTypeId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.JobType.V1.DeleteJobTypeRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.JobType.V1.DeleteJobTypeRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.JobType.V1.DeleteJobTypeRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.JobType.V1.DeleteJobTypeRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "204": {"description": "The resource was successfully deleted."}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "get": {"tags": ["DataSync"], "summary": "Retrieves a specific DataSync job type", "operationId": "GetDataSyncJobTypeProfileByIdAsync", "parameters": [{"name": "jobTypeId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.JobType.V1.JobTypeProfileResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "put": {"tags": ["DataSync"], "summary": "Updates a DataSync job type", "operationId": "UpdateDataSyncJobTypeAsync", "parameters": [{"name": "jobTypeId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.JobType.V1.UpdateJobTypeRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.JobType.V1.UpdateJobTypeRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.JobType.V1.UpdateJobTypeRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.JobType.V1.UpdateJobTypeRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.JobType.V1.JobTypeUpdatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/datasync/jobtypes": {"get": {"tags": ["DataSync"], "summary": "Retrieves a list of DataSync job types", "operationId": "GetAllDataSyncJobTypesAsync", "parameters": [{"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.JobType.V1.JobTypeListResponsePaginatedItemsViewModel"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "post": {"tags": ["DataSync"], "summary": "Creates a new DataSync job type", "operationId": "CreateDataSyncJobTypeAsync", "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.JobType.V1.CreateJobTypeRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.JobType.V1.CreateJobTypeRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.JobType.V1.CreateJobTypeRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.JobType.V1.CreateJobTypeRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "201": {"description": "The resource was created. The location of the resource is available in the Location header of the response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.JobType.V1.JobTypeCreatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/datasync/providers/{providerId}/connectiontypes/{connectionTypeId}": {"delete": {"tags": ["DataSync"], "summary": "Delete a connection type assigned to the DataSync provider", "operationId": "DeleteDataSyncConnectionTypeAsync", "parameters": [{"name": "providerId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "connectionTypeId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Provider.V1.DeleteConnectionTypeRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Provider.V1.DeleteConnectionTypeRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Provider.V1.DeleteConnectionTypeRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Provider.V1.DeleteConnectionTypeRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "204": {"description": "The resource was successfully deleted."}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "put": {"tags": ["DataSync"], "summary": "Updates a connection type assigned to the DataSync provider", "operationId": "UpdateDataSyncConnectionTypeAsync", "parameters": [{"name": "providerId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "connectionTypeId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Provider.V1.UpdateConnectionTypeRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Provider.V1.UpdateConnectionTypeRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Provider.V1.UpdateConnectionTypeRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Provider.V1.UpdateConnectionTypeRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Provider.V1.ConnectionTypeUpdatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/datasync/providers/{providerId}/connectiontypes": {"post": {"tags": ["DataSync"], "summary": "Creates a new connection type assigned to the DataSync provider", "operationId": "CreateDataSyncConnectionTypeAsync", "parameters": [{"name": "providerId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Provider.V1.CreateConnectionTypeRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Provider.V1.CreateConnectionTypeRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Provider.V1.CreateConnectionTypeRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Provider.V1.CreateConnectionTypeRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "201": {"description": "The resource was created. The location of the resource is available in the Location header of the response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Provider.V1.ConnectionTypeCreatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/datasync/providers/{providerId}": {"delete": {"tags": ["DataSync"], "summary": "Delete a DataSync provider", "operationId": "DeleteDataSyncProviderAsync", "parameters": [{"name": "providerId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Provider.V1.DeleteProviderRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Provider.V1.DeleteProviderRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Provider.V1.DeleteProviderRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Provider.V1.DeleteProviderRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "204": {"description": "The resource was successfully deleted."}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "get": {"tags": ["DataSync"], "summary": "Retrieves a specific DataSync provider", "operationId": "GetDataSyncProviderProfileByIdAsync", "parameters": [{"name": "providerId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Provider.V1.ProviderProfileResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "put": {"tags": ["DataSync"], "summary": "Updates a DataSync provider", "operationId": "UpdateDataSyncProviderAsync", "parameters": [{"name": "providerId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Provider.V1.UpdateProviderRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Provider.V1.UpdateProviderRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Provider.V1.UpdateProviderRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Provider.V1.UpdateProviderRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Provider.V1.ProviderUpdatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/datasync/providers": {"get": {"tags": ["DataSync"], "summary": "Retrieves a list of DataSync providers", "operationId": "GetAllDataSyncProvidersAsync", "parameters": [{"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Provider.V1.ProviderListResponsePaginatedItemsViewModel"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "post": {"tags": ["DataSync"], "summary": "Creates a new DataSync provider", "operationId": "CreateDataSyncProviderAsync", "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Provider.V1.CreateProviderRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Provider.V1.CreateProviderRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Provider.V1.CreateProviderRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Provider.V1.CreateProviderRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "201": {"description": "The resource was created. The location of the resource is available in the Location header of the response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Provider.V1.ProviderCreatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/domains/{domainName}": {"delete": {"tags": ["Domains"], "summary": "Deletes a user", "operationId": "DeleteTenantDomainAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "domainName", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "204": {"description": "The resource was successfully deleted."}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "get": {"tags": ["Domains"], "summary": "Retrieves a domain", "operationId": "GetTenantDomainProfileByNameAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "domainName", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.DomainProfileResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}, "put": {"tags": ["Domains"], "summary": "Updates a domain", "operationId": "UpdateTenantDomainAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "domainName", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.UpdateDomainRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.UpdateDomainRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.UpdateDomainRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.UpdateDomainRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.DomainUpdatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/domains": {"get": {"tags": ["Domains"], "summary": "Retrieves a list of domains associated to this tenant", "operationId": "GetAllTenantDomainsAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Responses.DomainListResponseDtoPaginatedItemsViewModel"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "post": {"tags": ["Domains"], "summary": "Creates a new domain", "operationId": "CreateTenantDomainAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.CreateDomainRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.CreateDomainRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.CreateDomainRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.CreateDomainRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "201": {"description": "The resource was created. The location of the resource is available in the Location header of the response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.DomainCreatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/jobs/edfi/usersync-reset": {"get": {"tags": ["Ed-Fi"], "summary": "Purges all of the existing Ed-Fi Sync Jobs", "operationId": "PurgeEdFiSyncJobs", "parameters": [{"name": "commit", "in": "query", "schema": {"type": "boolean"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.EdFiRosterSync.V1.JobPurgedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/identityresources/{identityResourceId}": {"delete": {"tags": ["Identity Resources"], "summary": "Deletes an OpenId Identity Resource", "operationId": "DeleteIdentityResourceAsync", "parameters": [{"name": "identityResourceId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "204": {"description": "The resource was successfully deleted."}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "get": {"tags": ["Identity Resources"], "summary": "Retrieves a specific OpenId Identity Resource", "operationId": "GetIdentityResourceByIdAsync", "parameters": [{"name": "identityResourceId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Responses.IdentityResourceResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "put": {"tags": ["Identity Resources"], "summary": "Adds or Updates an OpenId Identity Resource", "operationId": "CreateOrUpdateIdentityResourceAsync", "parameters": [{"name": "identityResourceId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.UpdateIdentityResourceRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.UpdateIdentityResourceRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.UpdateIdentityResourceRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.UpdateIdentityResourceRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Responses.IdentityResourceResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/identityresources": {"get": {"tags": ["Identity Resources"], "summary": "Retrieves a list of OpenId Identity Resources", "description": "Referenced from IdentityServer4", "operationId": "GetAllIdentityResourcesAsync", "parameters": [{"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string", "default": "Name ASC"}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Responses.IdentityResourceResponsePaginatedItemsViewModel"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "post": {"tags": ["Identity Resources"], "summary": "Creates a new OpenId Identity Resource", "operationId": "CreateIdentityResourceAsync", "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.CreateIdentityResourceRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.CreateIdentityResourceRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.CreateIdentityResourceRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.CreateIdentityResourceRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "201": {"description": "The resource was created. The location of the resource is available in the Location header of the response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Responses.IdentityResourceResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/invitations": {"get": {"tags": ["Invitations"], "summary": "Retrieves a list of invitations", "operationId": "GetAllInvitationsAsync", "parameters": [{"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.Invitation.V1.InvitationListResponsePaginatedItemsViewModel"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/invitations/{invitationId}": {"delete": {"tags": ["Invitations"], "summary": "Deletes an invitation", "operationId": "DeleteTenantInvitationAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "invitationId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "204": {"description": "The resource was successfully deleted."}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "get": {"tags": ["Invitations"], "summary": "Retrieves a specific invitation", "operationId": "GetTenantInvitationById", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "invitationId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.Invitation.V1.InvitationResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/invitations": {"get": {"tags": ["Invitations"], "summary": "Retrieves tenant invitations", "operationId": "GetTenantInvitationsAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "pageSize", "in": "query", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "pageIndex", "in": "query", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "orderBy", "in": "query", "schema": {"type": "string", "default": ""}}, {"name": "filter", "in": "query", "schema": {"type": "string", "default": ""}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.Invitation.V1.InvitationResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}, "post": {"tags": ["Invitations"], "summary": "Creates and sends an invitation to a user", "operationId": "SendTenantInvitation", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.SendInvitationRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.SendInvitationRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.SendInvitationRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.SendInvitationRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "201": {"description": "The resource was created. The location of the resource is available in the Location header of the response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.Invitation.V1.InvitationSentResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/metrics/educationorganizationusagereport/{tenantId}/organizations": {"get": {"tags": ["Metrics"], "parameters": [{"name": "tenantId", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "Success", "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Responses.EducationOrganizationUserMetricsResponse"}}}}}, "400": {"description": "Bad Request", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/metrics/educationorganizationusagereport": {"get": {"tags": ["Metrics"], "parameters": [{"name": "pageSize", "in": "query", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "pageIndex", "in": "query", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "orderBy", "in": "query", "schema": {"type": "string", "default": ""}}, {"name": "filter", "in": "query", "schema": {"type": "string", "default": ""}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "Success", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.TenantEducationOrganizationMetricsPaginatedItemsViewModel"}}}}, "400": {"description": "Bad Request", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/metrics/globalusagereport": {"get": {"tags": ["Metrics"], "parameters": [{"name": "pageSize", "in": "query", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "pageIndex", "in": "query", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "orderBy", "in": "query", "schema": {"type": "string", "default": ""}}, {"name": "filter", "in": "query", "schema": {"type": "string", "default": ""}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "Success", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.GlobalApplicationUserMetricsPaginatedItemsViewModel"}}}}, "400": {"description": "Bad Request", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/metrics/tenantapplicationusagereport/{applicationId}/role": {"get": {"tags": ["Metrics"], "parameters": [{"name": "applicationId", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "Success", "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Responses.TenantApplicationRoleMetricsResponse"}}}}}, "400": {"description": "Bad Request", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/metrics/tenantapplicationusagereport/{tenantId}/subscriptions": {"get": {"tags": ["Metrics"], "parameters": [{"name": "tenantId", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "Success", "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Responses.TenantApplicationActiveSubscriptionMetricsResponse"}}}}}, "400": {"description": "Bad Request", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/metrics/tenantusagereport": {"get": {"tags": ["Metrics"], "parameters": [{"name": "pageSize", "in": "query", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "pageIndex", "in": "query", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "orderBy", "in": "query", "schema": {"type": "string", "default": ""}}, {"name": "filter", "in": "query", "schema": {"type": "string", "default": ""}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "Success", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.TenantUserMetricsPaginatedItemsViewModel"}}}}, "400": {"description": "Bad Request", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/migrations/applications/up": {"post": {"tags": ["Migrations"], "summary": "Applies a migration, upgrading the data.", "operationId": "ApplicationsMigrateUpAsync", "requestBody": {"content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/ApplicationApi.Application.V1.MigrateUpRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/ApplicationApi.Application.V1.MigrateUpRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/ApplicationApi.Application.V1.MigrateUpRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/ApplicationApi.Application.V1.MigrateUpRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.MigrationResult"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/migrations/edfiadmin/up": {"post": {"tags": ["Migrations"], "summary": "Applies a migration, upgrading the data.", "operationId": "EdFiAdminMigrateUpAsync", "requestBody": {"content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.MigrateUpRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.MigrateUpRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.MigrateUpRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.MigrateUpRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.MigrationResult"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/migrations/validations/up": {"post": {"tags": ["Migrations"], "summary": "Applies a migration, upgrading the data.", "operationId": "ValidationsMigrateUpAsync", "requestBody": {"content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Migrations.V1.MigrateUpRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Migrations.V1.MigrateUpRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Migrations.V1.MigrateUpRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Migrations.V1.MigrateUpRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.MigrationResult"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/me/extensions/{code}": {"delete": {"tags": ["My Extensions"], "summary": "Removes a user's profile extension.", "operationId": "RemoveUserExtension", "parameters": [{"name": "code", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.UserExtensionRemovedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/me/extensions": {"post": {"tags": ["My Extensions"], "summary": "Creates or update a user's profile extension.", "operationId": "SetUserExtension", "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.SetUserExtensionRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.SetUserExtensionRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.SetUserExtensionRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.SetUserExtensionRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.UserExtensionSetResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/me/preferences": {"post": {"tags": ["My Preferences"], "summary": "Creates or update a user's preference.", "operationId": "UpdateUserPreferenceAsync", "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.UpdateUserPreferenceRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.UpdateUserPreferenceRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.UpdateUserPreferenceRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.UpdateUserPreferenceRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.UserPreferenceUpdatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/me": {"get": {"tags": ["My Profile"], "summary": "Retrieves the profile of the user that is currently logged in, including the user's preferences and its associated tenants", "operationId": "GetUserCacheAsync", "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Responses.UserCacheResponse"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/oneroster/connections/{connectionId}": {"get": {"tags": ["OneRoster"], "summary": "Retrieves the profile of a Connection.", "operationId": "GetOneRosterConnectionById", "parameters": [{"name": "connectionId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IMSAdminApi.V1.Connections.PagedConnectionsResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/oneroster/connections": {"get": {"tags": ["OneRoster"], "summary": "Retrieves a list of Connections.", "operationId": "GetOneRosterPagedConnections", "parameters": [{"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IMSAdminApi.V1.Connections.PagedConnectionsResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "post": {"tags": ["OneRoster"], "summary": "Creates a Connection.", "operationId": "CreateOneRosterConnection", "requestBody": {"content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/IMSAdminApi.V1.Connections.CreateConnectionRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/IMSAdminApi.V1.Connections.CreateConnectionRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/IMSAdminApi.V1.Connections.CreateConnectionRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/IMSAdminApi.V1.Connections.CreateConnectionRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IMSAdminApi.V1.Connections.ConnectionCreatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/clients/{clientId}/secrets/{secretId}": {"delete": {"tags": ["OpenId Clients / Secrets"], "summary": "Deletes a specific OpenId client Secret", "operationId": "DeleteClientSecretAsync", "parameters": [{"name": "clientId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "secretId", "in": "path", "description": "The index of the secret in the array", "required": true, "schema": {"type": "integer", "format": "int32"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "204": {"description": "The resource was successfully deleted."}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/clients/{clientId}/secrets": {"post": {"tags": ["OpenId Clients / Secrets"], "summary": "Creates a new secret for an OpenId client", "operationId": "AddClientSecret", "parameters": [{"name": "clientId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.Client.V1.AddClientSecretRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.Client.V1.AddClientSecretRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.Client.V1.AddClientSecretRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.Client.V1.AddClientSecretRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.Client.V1.ClientSecretAddedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/clients/{clientId}/settings/{clientSettingsTypeId}": {"delete": {"tags": ["OpenId Clients / Settings"], "summary": "Deletes a ClientSettingsType.", "operationId": "DeleteClientSettingsTypeAsync", "parameters": [{"name": "clientId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "clientSettingsTypeId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "204": {"description": "The resource was successfully deleted."}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}, "get": {"tags": ["OpenId Clients / Settings"], "summary": "Retrieves a ClientSettingsType by ID.", "operationId": "GetClientSettingsTypeByIdAsync", "parameters": [{"name": "clientId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "clientSettingsTypeId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.ClientSettingsType.V1.ClientSettingsTypeResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}, "put": {"tags": ["OpenId Clients / Settings"], "summary": "Updates a ClientSettingsType.", "operationId": "UpdateClientSettingsTypeAsync", "parameters": [{"name": "clientId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "clientSettingsTypeId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.ClientSettingsType.V1.UpdateClientSettingsTypeRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.ClientSettingsType.V1.UpdateClientSettingsTypeRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.ClientSettingsType.V1.UpdateClientSettingsTypeRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.ClientSettingsType.V1.UpdateClientSettingsTypeRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.ClientSettingsType.V1.ClientSettingsTypeUpdatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/clients/{clientId}/settings": {"get": {"tags": ["OpenId Clients / Settings"], "summary": "Retrieves a list of ClientSettingsTypes.", "operationId": "GetClientSettingsTypesAsync", "parameters": [{"name": "clientId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.ClientSettingsType.V1.GetClientSettingsTypesResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "post": {"tags": ["OpenId Clients / Settings"], "summary": "Creates a ClientSettingsType.", "operationId": "CreateClientSettingsTypeAsync", "parameters": [{"name": "clientId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.ClientSettingsType.V1.CreateClientSettingsTypeRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.ClientSettingsType.V1.CreateClientSettingsTypeRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.ClientSettingsType.V1.CreateClientSettingsTypeRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.ClientSettingsType.V1.CreateClientSettingsTypeRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "201": {"description": "The resource was created. The location of the resource is available in the Location header of the response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.ClientSettingsType.V1.ClientSettingsTypeCreatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/clients/{clientId}/regeneratesecret": {"put": {"tags": ["OpenId Clients"], "summary": "Regenerates the secret of an OpenId client", "operationId": "RegenerateClientSecret", "parameters": [{"name": "clientId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.Client.V1.RegenerateClientSecretRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.Client.V1.RegenerateClientSecretRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.Client.V1.RegenerateClientSecretRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.Client.V1.RegenerateClientSecretRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.Client.V1.ClientSecretRegeneratedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/clients/{clientId}": {"delete": {"tags": ["OpenId Clients"], "summary": "Deletes a OpenId client", "operationId": "DeleteClientAsync", "parameters": [{"name": "clientId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "204": {"description": "The resource was successfully deleted."}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "get": {"tags": ["OpenId Clients"], "summary": "Retrieves a specific OpenId client", "operationId": "GetClientProfileByIdAsync", "parameters": [{"name": "clientId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.Client.V1.ClientProfileResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "put": {"tags": ["OpenId Clients"], "summary": "Adds or Updates a OpenId client", "operationId": "CreateOrUpdateClientAsync", "parameters": [{"name": "clientId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.Client.V1.UpdateClientRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.Client.V1.UpdateClientRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.Client.V1.UpdateClientRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.Client.V1.UpdateClientRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.Client.V1.UpdateClientRequest"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/clients": {"get": {"tags": ["OpenId Clients"], "summary": "Retrieves a list of OpenId Clients", "operationId": "GetAllClientsAsync", "parameters": [{"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.Client.V1.ClientListResponsePaginatedItemsViewModel"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "post": {"tags": ["OpenId Clients"], "summary": "Creates a new OpenId client", "operationId": "CreateClientAsync", "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.Client.V1.CreateClientRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.Client.V1.CreateClientRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.Client.V1.CreateClientRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.Client.V1.CreateClientRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "201": {"description": "The resource was created. The location of the resource is available in the Location header of the response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.Client.V1.ClientCreatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/partnerships/{partnershipId}": {"delete": {"tags": ["Partnerships"], "summary": "Deletes a Partnership.", "operationId": "DeletePartnership", "parameters": [{"name": "partnershipId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Partnership.V1.PartnershipDeletedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "get": {"tags": ["Partnerships"], "summary": "Retrieves a Partnership by ID.", "operationId": "GetPartnershipById", "parameters": [{"name": "partnershipId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Partnership.V1.PartnershipByIdResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/partnerships": {"get": {"tags": ["Partnerships"], "summary": "Retrieves a list of Partnerships.", "operationId": "GetAllPartnerships", "parameters": [{"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Partnership.V1.PaginatedItemsResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "post": {"tags": ["Partnerships"], "summary": "Creates a partnership.", "operationId": "CreatePartnership", "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/TenantApi.Partnership.V1.CreatePartnershipRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Partnership.V1.CreatePartnershipRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Partnership.V1.CreatePartnershipRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/TenantApi.Partnership.V1.CreatePartnershipRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "201": {"description": "The resource was created. The location of the resource is available in the Location header of the response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Partnership.V1.PartnershipCreatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "put": {"tags": ["Partnerships"], "summary": "Updates a Partnership.", "operationId": "UpdatePartnership", "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/TenantApi.Partnership.V1.UpdatePartnershipRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Partnership.V1.UpdatePartnershipRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Partnership.V1.UpdatePartnershipRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/TenantApi.Partnership.V1.UpdatePartnershipRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Partnership.V1.PartnershipUpdatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/registrations/{registrationId}/approve": {"put": {"tags": ["Registrations"], "summary": "Approve a tenant's registration request", "operationId": "ApproveTenantRegistrationAsync", "parameters": [{"name": "registrationId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "Success"}, "400": {"description": "Bad Request", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/registrations/{registrationId}/deny": {"put": {"tags": ["Registrations"], "summary": "Deny a tenant's registration request", "operationId": "DenyTenantRegistrationAsync", "parameters": [{"name": "registrationId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/RegistrationApi.Registration.V1.DenyTenantRegistrationRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/RegistrationApi.Registration.V1.DenyTenantRegistrationRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/RegistrationApi.Registration.V1.DenyTenantRegistrationRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/RegistrationApi.Registration.V1.DenyTenantRegistrationRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "Success"}, "400": {"description": "Bad Request", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/registrations/{registrationId}": {"delete": {"tags": ["Registrations"], "summary": "Delete a tenant's registration request", "operationId": "DeleteTenantRegistrationAsync", "parameters": [{"name": "registrationId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/RegistrationApi.Registration.V1.DeleteTenantRegistrationRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/RegistrationApi.Registration.V1.DeleteTenantRegistrationRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/RegistrationApi.Registration.V1.DeleteTenantRegistrationRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/RegistrationApi.Registration.V1.DeleteTenantRegistrationRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "204": {"description": "The resource was successfully deleted."}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "get": {"tags": ["Registrations"], "summary": "Retrieves a specific tenant registration using its primary key", "operationId": "GetTenantRegistrationByIdAsync", "parameters": [{"name": "registrationId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/RegistrationApi.Registration.V1.RegistrationProfileResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "put": {"tags": ["Registrations"], "summary": "Update a tenant's registration request", "operationId": "UpdateTenantRegistrationAsync", "parameters": [{"name": "registrationId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/RegistrationApi.Registration.V1.UpdateTenantRegistrationRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/RegistrationApi.Registration.V1.UpdateTenantRegistrationRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/RegistrationApi.Registration.V1.UpdateTenantRegistrationRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/RegistrationApi.Registration.V1.UpdateTenantRegistrationRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "Success", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/RegistrationApi.Registration.V1.TenantRegistrationUpdatedResponse"}}}}, "400": {"description": "Bad Request", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/registrations/applications": {"get": {"tags": ["Registrations"], "summary": "Gets a list of applications available for registration/onboarding", "operationId": "GetOnboardingApplicationsAsync", "parameters": [{"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ApplicationApi.Application.V1.PaginatedItemsResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/registrations/azure/subscriptions": {"get": {"tags": ["Registrations"], "summary": "Gets an Azure Subscription", "operationId": "GetAzureSubscriptionAsync", "parameters": [{"name": "subscriptionStoragePath", "in": "query", "description": "", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/RegistrationApi.Registration.V1.AzureSubscription"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/registrations": {"get": {"tags": ["Registrations"], "summary": "Retrieves a list of registrations", "operationId": "GetAllTenantRegistrationsAsync", "parameters": [{"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/RegistrationApi.Registration.V1.RegistrationListResponsePaginatedItemsViewModel"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "post": {"tags": ["Registrations"], "summary": "Create a registration on behalf of a user/tenant", "operationId": "CreateTenantRegistrationAsync", "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/RegistrationApi.Registration.V1.CreateTenantRegistrationRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/RegistrationApi.Registration.V1.CreateTenantRegistrationRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/RegistrationApi.Registration.V1.CreateTenantRegistrationRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/RegistrationApi.Registration.V1.CreateTenantRegistrationRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "201": {"description": "The resource was created. The location of the resource is available in the Location header of the response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/RegistrationApi.Registration.V1.TenantRegistrationCreatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/roles/{name}": {"delete": {"tags": ["Roles"], "summary": "Deletes a Role.", "operationId": "DeleteRole", "parameters": [{"name": "name", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "204": {"description": "The resource was successfully deleted."}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.Role.V1.RoleDeletedResponse"}}}}}}, "get": {"tags": ["Roles"], "summary": "Retrieves a Role by name.", "operationId": "GetRoleByName", "parameters": [{"name": "name", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.Role.V1.RoleResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}, "put": {"tags": ["Roles"], "summary": "Updates a Role.", "operationId": "UpdateRole", "parameters": [{"name": "name", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.Role.V1.UpdateRoleRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.Role.V1.UpdateRoleRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.Role.V1.UpdateRoleRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.Role.V1.UpdateRoleRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.Role.V1.RoleUpdatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/roles/bulk": {"post": {"tags": ["Roles"], "summary": "Creates Roles in bulk.", "operationId": "CreateRolesBulk", "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.CreateRolesBulkRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.CreateRolesBulkRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.CreateRolesBulkRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.CreateRolesBulkRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "201": {"description": "The resource was created. The location of the resource is available in the Location header of the response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.Role.V1.RolesCreatedBulkResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/roles": {"get": {"tags": ["Roles"], "summary": "Retrieves a list of Roles.", "operationId": "GetRoles", "parameters": [{"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.Role.V1.GetRolesResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "post": {"tags": ["Roles"], "summary": "Creates a Role.", "operationId": "CreateRole", "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.Role.V1.CreateRoleRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.Role.V1.CreateRoleRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.Role.V1.CreateRoleRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.Role.V1.CreateRoleRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "201": {"description": "The resource was created. The location of the resource is available in the Location header of the response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.Role.V1.RoleCreatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/serviceProviderResources/{entityId}": {"delete": {"tags": ["ServiceProviderResources"], "summary": "Deletes a ServiceProviderResource.", "operationId": "DeleteServiceProviderResource", "parameters": [{"name": "entityId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "204": {"description": "The resource was successfully deleted."}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.ServiceProviderResource.V1.ServiceProviderResourceDeletedResponse"}}}}}}, "get": {"tags": ["ServiceProviderResources"], "summary": "Retrieves a ServiceProviderResource by name.", "operationId": "GetServiceProviderResourceById", "parameters": [{"name": "entityId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.ServiceProviderResource.V1.ServiceProviderResourceResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}, "put": {"tags": ["ServiceProviderResources"], "summary": "Updates a ServiceProviderResource.", "operationId": "UpdateServiceProviderResource", "parameters": [{"name": "entityId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.ServiceProviderResource.V1.UpdateServiceProviderResourceRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.ServiceProviderResource.V1.UpdateServiceProviderResourceRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.ServiceProviderResource.V1.UpdateServiceProviderResourceRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.ServiceProviderResource.V1.UpdateServiceProviderResourceRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.ServiceProviderResource.V1.ServiceProviderResourceUpdatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/serviceProviderResources": {"get": {"tags": ["ServiceProviderResources"], "summary": "Retrieves a list of ServiceProviderResources.", "operationId": "GetServiceProviderResources", "parameters": [{"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.ServiceProviderResource.V1.GetServiceProviderResourcesResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "post": {"tags": ["ServiceProviderResources"], "summary": "Creates a ServiceProviderResource.", "operationId": "CreateServiceProviderResource", "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.ServiceProviderResource.V1.CreateServiceProviderResourceRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.ServiceProviderResource.V1.CreateServiceProviderResourceRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.ServiceProviderResource.V1.CreateServiceProviderResourceRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.ServiceProviderResource.V1.CreateServiceProviderResourceRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "201": {"description": "The resource was created. The location of the resource is available in the Location header of the response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.ServiceProviderResource.V1.ServiceProviderResourceCreatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/staffClassifications/{staffClassificationId}": {"delete": {"tags": ["StaffClassifications"], "summary": "Deletes a StaffClassification.", "operationId": "DeleteStaffClassification", "parameters": [{"name": "staffClassificationId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.StaffClassification.V1.StaffClassificationDeletedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "get": {"tags": ["StaffClassifications"], "summary": "Retrieves a StaffClassification by ID.", "operationId": "GetStaffClassificationById", "parameters": [{"name": "staffClassificationId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.StaffClassification.V1.StaffClassificationResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}, "put": {"tags": ["StaffClassifications"], "summary": "Updates a StaffClassification.", "operationId": "UpdateStaffClassification", "parameters": [{"name": "staffClassificationId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.StaffClassification.V1.UpdateStaffClassificationRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.StaffClassification.V1.UpdateStaffClassificationRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.StaffClassification.V1.UpdateStaffClassificationRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.StaffClassification.V1.UpdateStaffClassificationRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.StaffClassification.V1.StaffClassificationUpdatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/staffClassifications/bulk": {"post": {"tags": ["StaffClassifications"], "summary": "Creates StaffClassifications in bulk.", "operationId": "CreateStaffClassificationsBulk", "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.CreateStaffClassificationBulkRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.CreateStaffClassificationBulkRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.CreateStaffClassificationBulkRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.CreateStaffClassificationBulkRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "201": {"description": "Created", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.StaffClassification.V1.StaffClassificationsBulkCreatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved."}}}}, "/staffClassifications/namespaces": {"get": {"tags": ["StaffClassifications"], "summary": "Retrieves a list of unique Staff Classification Namespaces.", "operationId": "GetStaffClassificationsNamespaces", "parameters": [{"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.StaffClassification.V1.GetStaffClassificationsNamespacesResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/staffClassifications": {"get": {"tags": ["StaffClassifications"], "summary": "Retrieves a list of StaffClassifications.", "operationId": "GetStaffClassifications", "parameters": [{"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.StaffClassification.V1.GetStaffClassificationsResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "post": {"tags": ["StaffClassifications"], "summary": "Creates a StaffClassification.", "operationId": "CreateStaffClassification", "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.StaffClassification.V1.CreateStaffClassificationRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.StaffClassification.V1.CreateStaffClassificationRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.StaffClassification.V1.CreateStaffClassificationRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.StaffClassification.V1.CreateStaffClassificationRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "201": {"description": "The resource was created. The location of the resource is available in the Location header of the response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.StaffClassification.V1.StaffClassificationCreatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/blacklisted-domains/{domainName}": {"delete": {"tags": ["Tenant / Blacklisted Domains"], "summary": "Removes a blacklisted domain from a given tenant", "operationId": "RemoveTenantBlacklistedDomain", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "domainName", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "204": {"description": "The resource was successfully deleted."}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/blacklisted-domains": {"get": {"tags": ["Tenant / Blacklisted Domains"], "summary": "Get list of all blacklisted domains for a tenant", "operationId": "GetTenantBlacklistedDomains", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.BlacklistedDomainsListResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "post": {"tags": ["Tenant / Blacklisted Domains"], "summary": "Adds a blacklisted domain for a given tenant", "operationId": "AddTenantBlacklistedDomain", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.AddBlacklistedDomainRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.AddBlacklistedDomainRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.AddBlacklistedDomainRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.AddBlacklistedDomainRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.BlacklistedDomainAddedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/connections": {"get": {"tags": ["Tenant / Connections"], "summary": "Retrieves all connections", "operationId": "GetAllConnections", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Connection.V1.ConnectionListResponsePaginatedItemsViewModel"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "post": {"tags": ["Tenant / Connections"], "summary": "Creates a connection for a given tenant", "operationId": "CreateConnection", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Connection.V1.CreateConnectionRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Connection.V1.CreateConnectionRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Connection.V1.CreateConnectionRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Connection.V1.CreateConnectionRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Connection.V1.ConnectionCreatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/jobs/edfisync/execute": {"post": {"tags": ["Tenant / Ed-Fi Sync"], "summary": "Executes an Ed-Fi Sync Job", "operationId": "ExecuteEdFiSyncJob", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "202": {"description": "Accepted", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Job.V1.JobExecutionRequestedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved."}}}}, "/tenants/{tenantId}/jobs/edfisync/mode": {"put": {"tags": ["Tenant / Ed-Fi Sync"], "summary": "Switches the mode of an Ed-Fi Sync job", "operationId": "SwitchEdFiSyncMode", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Services.EdFiRosterSync.SwitchEdFiRosterSyncJobModeRequestDto"}}, "application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Services.EdFiRosterSync.SwitchEdFiRosterSyncJobModeRequestDto"}}, "text/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Services.EdFiRosterSync.SwitchEdFiRosterSyncJobModeRequestDto"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Services.EdFiRosterSync.SwitchEdFiRosterSyncJobModeRequestDto"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "204": {"description": "No Content", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.NoContentResult"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved."}}}}, "/tenants/{tenantId}/jobs/edfisync": {"get": {"tags": ["Tenant / Ed-Fi Sync"], "summary": "Retrieves Ed-Fi Sync Connection Data for a given tenant", "operationId": "GetEdFiSyncData", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.EdFiRosterSync.V1.EdFiRosterSyncJobProfile"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "post": {"tags": ["Tenant / Ed-Fi Sync"], "summary": "Creates an Ed-Fi Sync Job for a given tenant", "operationId": "CreateEdFiSync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Services.EdFiRosterSync.CreateEdFiRosterSyncJobRequestDto"}}, "application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Services.EdFiRosterSync.CreateEdFiRosterSyncJobRequestDto"}}, "text/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Services.EdFiRosterSync.CreateEdFiRosterSyncJobRequestDto"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Services.EdFiRosterSync.CreateEdFiRosterSyncJobRequestDto"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Services.EdFiRosterSync.JobCreatedResult"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "put": {"tags": ["Tenant / Ed-Fi Sync"], "summary": "Updates an Ed-Fi Sync for a given tenant", "operationId": "UpdateEdFiSync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {}}, "application/json": {"schema": {}}, "text/json": {"schema": {}}, "application/*+json": {"schema": {}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "204": {"description": "No Content", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.NoContentResult"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved."}}}}, "/v2/tenants/{tenantId}/instances": {"get": {"tags": ["Tenant / Instances"], "summary": "Get list of all instances for a tenant - V2", "operationId": "GetTenantInstancesV2", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "searchTerm", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "type", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Services.Management.InstanceResponsePaginatedItemsViewModel"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/instances/{instanceId}": {"delete": {"tags": ["Tenant / Instances"], "summary": "Deletes an Instance.", "operationId": "DeleteInstanceV2", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "instanceId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "204": {"description": "The resource was successfully deleted."}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}, "get": {"tags": ["Tenant / Instances"], "summary": "Get Instance by Id", "operationId": "GetTenantInstanceByIdV2", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "instanceId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Services.Management.InstanceResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}, "put": {"tags": ["Tenant / Instances"], "summary": "Updates a new instance.", "operationId": "UpdateInstanceV2", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "instanceId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {}}, "application/json": {"schema": {}}, "text/json": {"schema": {}}, "application/*+json": {"schema": {}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved."}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/instances/edfi-api-metadata": {"post": {"tags": ["Tenant / Instances"], "summary": "Loads connection metadata.", "operationId": "LoadEdFiApiMetadataAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Services.Management.UseCases.EdFiApiMetadataRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Services.Management.UseCases.EdFiApiMetadataRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Services.Management.UseCases.EdFiApiMetadataRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Services.Management.UseCases.EdFiApiMetadataRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Services.Management.UseCases.EdFiApiLoadEdFiApiMetadataResult"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/instances/managed-edfi/{instanceId}/default": {"put": {"tags": ["Tenant / Instances"], "summary": "Updates the isDefault property for an instance", "operationId": "SetInstanceIsDefault", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "instanceId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.SetInstanceIsDefaultRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.SetInstanceIsDefaultRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.SetInstanceIsDefaultRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.SetInstanceIsDefaultRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved."}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/instances/managed-edfi/{instanceId}/onboardingsteps/{step}": {"put": {"tags": ["Tenant / Instances"], "summary": "Updates an Instance Onboarding Step.", "operationId": "UpdateInstanceOnboardingStepAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "instanceId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "step", "in": "path", "description": "", "required": true, "schema": {"type": "integer", "format": "int32"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.UpdateOnboardingStepRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.UpdateOnboardingStepRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.UpdateOnboardingStepRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.UpdateOnboardingStepRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.InstanceUpdatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/instances/managed-edfi/{instanceId}/onboardingsteps": {"post": {"tags": ["Tenant / Instances"], "summary": "Creates an Instance Onboarding Step.", "operationId": "CreateInstanceOnboardingStepAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "instanceId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.CreateOnboardingStepRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.CreateOnboardingStepRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.CreateOnboardingStepRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.CreateOnboardingStepRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.InstanceUpdatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/instances/managed-edfi/{instanceId}/urls": {"put": {"tags": ["Tenant / Instances"], "summary": "Updates an instance urls.", "operationId": "UpdateInstanceUrls", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "instanceId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Services.Management.UseCases.UpdateEdFiInstanceUrlsRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Services.Management.UseCases.UpdateEdFiInstanceUrlsRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Services.Management.UseCases.UpdateEdFiInstanceUrlsRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Services.Management.UseCases.UpdateEdFiInstanceUrlsRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved."}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/instances/managed-edfi/{instanceId}": {"delete": {"tags": ["Tenant / Instances"], "summary": "Deletes an Instance.", "operationId": "DeleteInstance", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "instanceId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "204": {"description": "The resource was successfully deleted."}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}, "get": {"tags": ["Tenant / Instances"], "summary": "Get Ed-Fi Instance by Id", "operationId": "GetTenantInstanceById", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "instanceId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.Instance"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}, "put": {"tags": ["Tenant / Instances"], "summary": "Updates an Instance.", "operationId": "UpdateInstance", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "instanceId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {}}, "application/json": {"schema": {}}, "text/json": {"schema": {}}, "application/*+json": {"schema": {}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved."}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/instances/managed-edfi": {"post": {"tags": ["Tenant / Instances"], "summary": "Creates a new Ed-Fi instance", "operationId": "CreateInstance", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {}}, "application/json": {"schema": {}}, "text/json": {"schema": {}}, "application/*+json": {"schema": {}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "301": {"description": "The requested resource has been moved permanently to a new URL.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Services.Management.MovedPermanentlyResponse"}}}}}}}, "/tenants/{tenantId}/instances/testconnection": {"post": {"tags": ["Tenant / Instances"], "summary": "Tests availability of provided connection metadata.", "operationId": "TestInstanceConnection", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {}}, "application/json": {"schema": {}}, "text/json": {"schema": {}}, "application/*+json": {"schema": {}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Services.Management.TestConnectionResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/instances": {"get": {"tags": ["Tenant / Instances"], "summary": "Get list of all instances for a tenant", "operationId": "GetTenantInstances", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Services.Management.EdFiInstanceListModelPaginatedItemsViewModel"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "post": {"tags": ["Tenant / Instances"], "summary": "Creates a new instance.", "operationId": "CreateInstanceV2", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {}}, "application/json": {"schema": {}}, "text/json": {"schema": {}}, "application/*+json": {"schema": {}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Services.Management.InstanceCreatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/jobs/{jobId}/executions/{executionId}/logs": {"get": {"tags": ["Tenant / Job Execution Logs"], "summary": "Retrieves all execution logs for a execution log of a job", "operationId": "GetTenantJobExecutionLogsByJobId", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "jobId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "executionId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.JobExecutionLog.V1.JobExecutionLogEntryPaginatedItemsViewModel"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/jobs/{jobId}/executions": {"get": {"tags": ["Tenant / Job Executions"], "summary": "Gets job executions by a given job Id", "operationId": "GetTenantJobExecutionsByJobId", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "jobId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.JobExecution.V1.JobExecutionListResponsePaginatedItemsViewModel"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/jobs/{jobId}/activate": {"post": {"tags": ["Tenant / Jobs"], "summary": "Activate tenant Job by Id", "operationId": "ActivateTenantJobById", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "jobId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Job.V1.JobActivatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/jobs/{jobId}/deactivate": {"post": {"tags": ["Tenant / Jobs"], "summary": "Deactivate tenant Job by Id", "operationId": "DeactivateTenantJobById", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "jobId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Job.V1.JobDeactivatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/jobs/{jobId}/execute": {"post": {"tags": ["Tenant / Jobs"], "summary": "Executes a job for a tenant", "operationId": "ExecuteTenantJob", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "jobId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Job.V1.ExecuteJobRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Job.V1.ExecuteJobRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Job.V1.ExecuteJobRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Job.V1.ExecuteJobRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Job.V1.JobExecutionRequestedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/jobs/{jobId}": {"get": {"tags": ["Tenant / Jobs"], "summary": "Retrieves a job profile by Id for a given tenant", "operationId": "GetTenantJobProfileById", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "jobId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Job.V1.JobProfileResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "put": {"tags": ["Tenant / Jobs"], "summary": "Updates a job for a given tenant", "operationId": "UpdateTenantJobById", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "jobId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Job.V1.UpdateJobRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Job.V1.UpdateJobRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Job.V1.UpdateJobRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Job.V1.UpdateJobRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Job.V1.JobUpdatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/jobs": {"get": {"tags": ["Tenant / Jobs"], "summary": "Retrieves all jobs for a tenant", "operationId": "GetAllTenantJobs", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Job.V1.JobListResponsePaginatedItemsViewModel"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "post": {"tags": ["Tenant / Jobs"], "summary": "Creates a job for a given tenant", "operationId": "CreateTenantJob", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Job.V1.CreateJobRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Job.V1.CreateJobRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Job.V1.CreateJobRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Job.V1.CreateJobRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Job.V1.JobCreatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/settings": {"get": {"tags": ["Tenant / SettingTypes"], "summary": "Retrieves all setting types", "operationId": "GetAllSettingTypes", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.TenantSettingTypesListResponsePaginatedItemsViewModel"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/staffclassifications": {"get": {"tags": ["Tenant / StaffClassifications"], "summary": "Retrieves a list of StaffClassifications.", "operationId": "GetTenantStaffClassifications", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.StaffClassification.V1.GetStaffClassificationsResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/onboardingsteps/{stepNumber}": {"put": {"tags": ["Tenants / Onboarding Steps"], "summary": "Updates the status of an Onboarding Step.", "operationId": "UpdateOnboardingStepAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "stepNumber", "in": "path", "description": "", "required": true, "schema": {"type": "integer", "format": "int32"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.UpdateOnboardingStepRequestDto"}}, "application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.UpdateOnboardingStepRequestDto"}}, "text/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.UpdateOnboardingStepRequestDto"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.UpdateOnboardingStepRequestDto"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.TenantUpdatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/onboardingsteps": {"post": {"tags": ["Tenants / Onboarding Steps"], "summary": "Creates an Onboarding Step.", "operationId": "CreateOnboardingStepAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.CreateOnboardingStepRequestDto"}}, "application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.CreateOnboardingStepRequestDto"}}, "text/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.CreateOnboardingStepRequestDto"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.CreateOnboardingStepRequestDto"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.TenantUpdatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/organizations/{organizationIdentifier}": {"delete": {"tags": ["Tenants / Organizations"], "summary": "Deletes a Tenant's Organization.", "operationId": "DeleteOrganizationAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "organizationIdentifier", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.OrganizationDeletedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}, "get": {"tags": ["Tenants / Organizations"], "summary": "Retrieves a Tenant's Organization by ID.", "operationId": "GetOrganizationByIdAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "organizationIdentifier", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.Organization"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}, "put": {"tags": ["Tenants / Organizations"], "summary": "Updates a Tenant's Organization.", "operationId": "UpdateOrganizationAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "organizationIdentifier", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.UpdateOrganizationRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.UpdateOrganizationRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.UpdateOrganizationRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.UpdateOrganizationRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.OrganizationUpdatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/organizations/instances": {"get": {"tags": ["Tenants / Organizations"], "summary": "Retrieves the tenant's Ed-Fi Admin instances.", "operationId": "GetEdFiAdminInstancesAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string", "default": "instanceName"}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.GetEdFiAdminInstancesResponse"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/organizations/sync": {"post": {"tags": ["Tenants / Organizations"], "summary": "Syncs an Ed-Fi Admin instance's organizations into the Tenant's organizations.", "operationId": "SyncOrganizationsAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.SyncOrganizationsRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.SyncOrganizationsRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.SyncOrganizationsRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.SyncOrganizationsRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "201": {"description": "Created", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.OrganizationsSyncedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved."}}}}, "/tenants/{tenantId}/organizations": {"get": {"tags": ["Tenants / Organizations"], "summary": "Retrieves a list of Tenant Organizations.", "operationId": "GetOrganizationsAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.GetOrganizationsPaginatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "post": {"tags": ["Tenants / Organizations"], "summary": "Creates a Tenant Organization.", "operationId": "CreateOrganizationAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.CreateOrganizationRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.CreateOrganizationRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.CreateOrganizationRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.CreateOrganizationRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "201": {"description": "The resource was created. The location of the resource is available in the Location header of the response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.OrganizationCreatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/users/{userId}/educationorganizations/{educationOrganizationId}": {"delete": {"tags": ["Tenants / Users - Education Organizations"], "summary": "Removes an Education Organization from a user.", "operationId": "RemoveUserEducationOrganization", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "userId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "educationOrganizationId", "in": "path", "description": "", "required": true, "schema": {"type": "integer", "format": "int32"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.EducationOrganizationRemovedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}, "put": {"tags": ["Tenants / Users - Education Organizations"], "summary": "Updates the Education Organization of a user.", "operationId": "UpdateUserEducationOrganization", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "userId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "educationOrganizationId", "in": "path", "description": "", "required": true, "schema": {"type": "integer", "format": "int32"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.UpdateEducationOrganizationRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.UpdateEducationOrganizationRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.UpdateEducationOrganizationRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.UpdateEducationOrganizationRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.EducationOrganizationUpdatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/users/{userId}/educationorganizations": {"get": {"tags": ["Tenants / Users - Education Organizations"], "summary": "Gets the Education Organizations of a user.", "operationId": "GetUserEducationOrganizations", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "userId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.EducationOrganizationPaginatedItemsResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}, "post": {"tags": ["Tenants / Users - Education Organizations"], "summary": "Adds an Education Organization to a user.", "operationId": "AddUserEducationOrganization", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "userId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.AddEducationOrganizationRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.AddEducationOrganizationRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.AddEducationOrganizationRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.AddEducationOrganizationRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.EducationOrganizationAddedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/applications/{applicationId}/launchersettings": {"get": {"tags": ["Tenants"], "summary": "Retrieves a specific application associated to a tenant", "operationId": "GetTenantApplicationLauncherSettingsByIdAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "applicationId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ApplicationApi.Application.V1.ApplicationLauncherSettingsResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "put": {"tags": ["Tenants"], "summary": "Update a tenant's application launcher settings", "operationId": "UpdateTenantApplicationLauncherSettingsAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "applicationId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/ApplicationApi.Application.V1.UpdateApplicationLauncherSettingsRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/ApplicationApi.Application.V1.UpdateApplicationLauncherSettingsRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/ApplicationApi.Application.V1.UpdateApplicationLauncherSettingsRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/ApplicationApi.Application.V1.UpdateApplicationLauncherSettingsRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ApplicationApi.Application.V1.ApplicationUpdatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/applications/{applicationId}/publish": {"put": {"tags": ["Tenants"], "summary": "Publish a tenant's application", "operationId": "PublishTenantApplicationAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "applicationId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ApplicationApi.Application.V1.ApplicationPublishedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/applications/{applicationId}": {"delete": {"tags": ["Tenants"], "summary": "Delete a tenant's application", "operationId": "DeleteTenantApplicationAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "applicationId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/ApplicationApi.Application.V1.DeleteApplicationRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/ApplicationApi.Application.V1.DeleteApplicationRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/ApplicationApi.Application.V1.DeleteApplicationRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/ApplicationApi.Application.V1.DeleteApplicationRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "204": {"description": "The resource was successfully deleted."}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "get": {"tags": ["Tenants"], "summary": "Retrieves a specific application associated to a tenant", "operationId": "GetTenantApplicationProfileByIdAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "applicationId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ApplicationApi.Application.V1.ApplicationProfileResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "put": {"tags": ["Tenants"], "summary": "Update a tenant's application profile", "operationId": "UpdateTenantApplicationProfileAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "applicationId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/ApplicationApi.Application.V1.UpdateApplicationProfileRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/ApplicationApi.Application.V1.UpdateApplicationProfileRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/ApplicationApi.Application.V1.UpdateApplicationProfileRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/ApplicationApi.Application.V1.UpdateApplicationProfileRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ApplicationApi.Application.V1.ApplicationUpdatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/applications": {"get": {"tags": ["Tenants"], "summary": "Retrieves a list of tenant applications", "operationId": "GetTenantApplicationsAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Responses.ApplicationListResponseWithSubscriptionPaginatedItemsViewModel"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "post": {"tags": ["Tenants"], "summary": "Create a tenant's application", "operationId": "CreateTenantApplicationAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/ApplicationApi.Application.V1.CreateApplicationRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/ApplicationApi.Application.V1.CreateApplicationRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/ApplicationApi.Application.V1.CreateApplicationRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/ApplicationApi.Application.V1.CreateApplicationRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "201": {"description": "The resource was created. The location of the resource is available in the Location header of the response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ApplicationApi.Application.V1.ApplicationCreatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/domains/{domainName}/verify": {"put": {"tags": ["Tenants"], "summary": "Verify a  tenant's domain", "operationId": "VerifyTenantDomainAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "domainName", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.VerifyDomainRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.VerifyDomainRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.VerifyDomainRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.VerifyDomainRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.DomainVerifiedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/subscriptions/{subscriptionId}/activate": {"put": {"tags": ["Tenants"], "summary": "Activate a Tenant Subscription", "operationId": "ActivateTenantSubscriptionAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "subscriptionId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.ActivateSubscriptionRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.ActivateSubscriptionRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.ActivateSubscriptionRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.ActivateSubscriptionRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.SubscriptionActivatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/subscriptions/{subscriptionId}/deactivate": {"put": {"tags": ["Tenants"], "summary": "Deactivate a Tenant Subscription", "operationId": "DeactivateTenantSubscriptionAsyncAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "subscriptionId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.DeactivateSubscriptionRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.DeactivateSubscriptionRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.DeactivateSubscriptionRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.DeactivateSubscriptionRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.SubscriptionDeactivatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/subscriptions/{subscriptionId}/reject": {"put": {"tags": ["Tenants"], "summary": "Reject a Tenant Subscription", "operationId": "RejectTenantSubscriptionAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "subscriptionId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.RejectSubscriptionRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.RejectSubscriptionRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.RejectSubscriptionRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.RejectSubscriptionRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.SubscriptionRejectedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/subscriptions/{subscriptionId}": {"delete": {"tags": ["Tenants"], "summary": "Deletes a Tenant Subscription", "operationId": "DeleteTenantSubscriptionAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "subscriptionId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.DeleteSubscriptionRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.DeleteSubscriptionRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.DeleteSubscriptionRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.DeleteSubscriptionRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "204": {"description": "The resource was successfully deleted."}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "get": {"tags": ["Tenants"], "summary": "Retrieves a specific Tenant Subscription", "operationId": "GetTenantSubscriptionProfileByIdAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "subscriptionId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.SubscriptionProfileResponse"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values."}}}, "put": {"tags": ["Tenants"], "summary": "Updates a Tenant Subscription", "operationId": "UpdateTenantSubscriptionAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "subscriptionId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.UpdateSubscriptionRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.UpdateSubscriptionRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.UpdateSubscriptionRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.UpdateSubscriptionRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.SubscriptionUpdatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/subscriptions": {"get": {"tags": ["Tenants"], "summary": "Retrieves a list of Tenant Subscriptions", "operationId": "GetAllTenantSubscriptionsAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.SubscriptionListResponsePaginatedItemsViewModel"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "post": {"tags": ["Tenants"], "summary": "Creates a new Tenant Subscription", "operationId": "CreateTenantSubscriptionAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.CreateSubscriptionRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.CreateSubscriptionRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.CreateSubscriptionRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.CreateSubscriptionRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "201": {"description": "The resource was created. The location of the resource is available in the Location header of the response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.SubscriptionCreatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}": {"delete": {"tags": ["Tenants"], "summary": "Deletes a tenant", "operationId": "DeleteTenantAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.DeleteTenantRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.DeleteTenantRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.DeleteTenantRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.DeleteTenantRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "204": {"description": "The resource was successfully deleted."}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "get": {"tags": ["Tenants"], "summary": "Retrieves a specific tenant", "operationId": "GetTenantByIdAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.TenantProfileResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "put": {"tags": ["Tenants"], "summary": "Updates a tenant", "operationId": "UpdateTenantAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.Tenants.UpdateTenantRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.Tenants.UpdateTenantRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.Tenants.UpdateTenantRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.Tenants.UpdateTenantRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.TenantUpdatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants": {"get": {"tags": ["Tenants"], "summary": "Retrieves a list of tenants", "operationId": "GetAllTenantsAsync", "parameters": [{"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.TenantListResponsePaginatedItemsViewModel"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "post": {"tags": ["Tenants"], "summary": "Creates a new tenant", "operationId": "CreateTenantAsync", "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.CreateTenantRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.CreateTenantRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.CreateTenantRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.CreateTenantRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "201": {"description": "The resource was created. The location of the resource is available in the Location header of the response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.TenantCreatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/testResources/{testResourceId}": {"delete": {"tags": ["TestResources"], "operationId": "DeleteTestResource", "parameters": [{"name": "testResourceId", "in": "path", "required": true, "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "204": {"description": "No Content"}, "400": {"description": "Bad Request", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}}}, "get": {"tags": ["TestResources"], "operationId": "GetTestResourceById", "parameters": [{"name": "testResourceId", "in": "path", "required": true, "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "Success"}, "400": {"description": "Bad Request", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "Not Found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}, "put": {"tags": ["TestResources"], "operationId": "UpdateTestResource", "parameters": [{"name": "testResourceId", "in": "path", "required": true, "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "Success"}, "400": {"description": "Bad Request", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/testResources": {"get": {"tags": ["TestResources"], "operationId": "GetTestResources", "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "Success"}, "400": {"description": "Bad Request", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}}}, "post": {"tags": ["TestResources"], "operationId": "CreateTestResource", "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "201": {"description": "Created"}, "400": {"description": "Bad Request", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/users/{userId}/licenses/assignbulk": {"put": {"tags": ["Users - Licenses"], "summary": "Assigns one or more licenses to a user in the context of a specific tenant", "operationId": "AssignLicenseTenantUserBulkAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "userId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.AssignLicenseBulkRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.AssignLicenseBulkRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.AssignLicenseBulkRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.AssignLicenseBulkRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.LicenseAssignedBulkResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/users/{userId}/licenses/assign": {"put": {"tags": ["Users - Licenses"], "summary": "Assigns a license to a user in the context of a specific tenant", "operationId": "AssignLicenseTenantUserAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "userId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.AssignLicenseRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.AssignLicenseRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.AssignLicenseRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.AssignLicenseRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.LicenseAssignedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/users/{userId}/licenses/revokebulk": {"put": {"tags": ["Users - Licenses"], "summary": "Revokes one or more licenses from a user in the context of a specific tenant", "operationId": "RevokeLicenseTenantUserBulkAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "userId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.RevokeLicenseBulkRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.RevokeLicenseBulkRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.RevokeLicenseBulkRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.RevokeLicenseBulkRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.LicenseRevokedBulkResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/users/{userId}/licenses/revoke": {"put": {"tags": ["Users - Licenses"], "summary": "Revokes a license from a user in the context of a specific tenant", "operationId": "RevokeLicenseTenantUserAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "userId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.RevokeLicenseRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.RevokeLicenseRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.RevokeLicenseRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.RevokeLicenseRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.LicenseRevokedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/users/{userId}/licenses": {"get": {"tags": ["Users - Licenses"], "summary": "Retrieves a list of user licenses in the context of a specific tenant", "operationId": "GetAllTenantUserApplicationLicensesAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "userId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Responses.UserLicensePaginatedItemsViewModel"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/users/extensions/{extensionTypeId}": {"delete": {"tags": ["Users / Extensions"], "summary": "Deletes a UserExtensionType.", "operationId": "DeleteUserExtensionTypeAsync", "parameters": [{"name": "extensionTypeId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "204": {"description": "The resource was successfully deleted."}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}, "get": {"tags": ["Users / Extensions"], "summary": "Retrieves a UserExtensionType by ID.", "operationId": "GetUserExtensionTypeByIdAsync", "parameters": [{"name": "extensionTypeId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.UserExtensionType.V1.UserExtensionTypeResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}, "put": {"tags": ["Users / Extensions"], "summary": "Updates a UserExtensionType.", "operationId": "UpdateUserExtensionTypeAsync", "parameters": [{"name": "extensionTypeId", "in": "query", "description": "", "schema": {"type": "string"}}, {"name": "extensionTypeId", "in": "path", "required": true, "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.UserExtensionType.V1.UpdateUserExtensionTypeRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.UserExtensionType.V1.UpdateUserExtensionTypeRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.UserExtensionType.V1.UpdateUserExtensionTypeRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.UserExtensionType.V1.UpdateUserExtensionTypeRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.UserExtensionType.V1.UserExtensionTypeUpdatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/users/extensions": {"get": {"tags": ["Users / Extensions"], "summary": "Retrieves a list of UserExtensionTypes.", "operationId": "GetUserExtensionTypesAsync", "parameters": [{"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.UserExtensionType.V1.GetUserExtensionTypesResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "post": {"tags": ["Users / Extensions"], "summary": "Creates a UserExtensionType.", "operationId": "CreateUserExtensionTypeAsync", "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.UserExtensionType.V1.CreateUserExtensionTypeRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.UserExtensionType.V1.CreateUserExtensionTypeRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.UserExtensionType.V1.CreateUserExtensionTypeRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.UserExtensionType.V1.CreateUserExtensionTypeRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "201": {"description": "The resource was created. The location of the resource is available in the Location header of the response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.UserExtensionType.V1.UserExtensionTypeCreatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/users/{email}/status": {"get": {"tags": ["Users"], "summary": "Searches a user by email and retrieves it's minimal information and status.", "operationId": "GetUserTenantStatusProfile", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "email", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.UserTenantStatusProfile"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/users/{userId}/disableuserbrowserdebug": {"put": {"tags": ["Users"], "summary": "Disable browser debug for a tenant user", "operationId": "DisableTenantUserBrowserDebugAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "userId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.DisableUserBrowserDebugRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.DisableUserBrowserDebugRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.DisableUserBrowserDebugRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.DisableUserBrowserDebugRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.UserBrowserDebugDisabledResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/users/{userId}/enableuserbrowserdebug": {"put": {"tags": ["Users"], "summary": "Enable browser debug for a tenant user", "operationId": "EnableTenantUserBrowserDebugAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "userId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.EnableUserBrowserDebugRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.EnableUserBrowserDebugRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.EnableUserBrowserDebugRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.EnableUserBrowserDebugRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.UserBrowserDebugEnabledResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/users/{userId}": {"delete": {"tags": ["Users"], "summary": "Deletes a user", "operationId": "DeleteTenantUserAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "userId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "204": {"description": "The resource was successfully deleted."}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "get": {"tags": ["Users"], "summary": "Retrieves a specific tenant's user", "operationId": "GetTenantUserProfileByIdAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "userId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.UserProfileResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "put": {"tags": ["Users"], "summary": "Creates or Updates a tenant's user", "operationId": "UpdateTenantUserAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "userId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.UpdateUserRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.UpdateUserRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.UpdateUserRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.UpdateUserRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.UserUpdatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/users": {"get": {"tags": ["Users"], "summary": "Retrieves a list of tenant users", "operationId": "GetAllTenantUsersAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.UserListResponsePaginatedItemsViewModel"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "post": {"tags": ["Users"], "summary": "Creates a new user", "operationId": "CreateLocalTenantUserAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.CreateLocalUserRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.CreateLocalUserRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.CreateLocalUserRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.CreateLocalUserRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "201": {"description": "The resource was created. The location of the resource is available in the Location header of the response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.LocalUserCreatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/users/{userId}/activate/bulk": {"put": {"tags": ["Users"], "summary": "Activates a user for all given tenants", "operationId": "ActivateBulkTenantUser", "parameters": [{"name": "userId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.Users.ActivateBulkTenantUser"}}, "application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.Users.ActivateBulkTenantUser"}}, "text/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.Users.ActivateBulkTenantUser"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.Users.ActivateBulkTenantUser"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.UserActivatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/users/{userId}/activate": {"put": {"tags": ["Users"], "summary": "Activates a user", "operationId": "ActivateTenantUserAsync", "parameters": [{"name": "userId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.ActivateUserRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.ActivateUserRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.ActivateUserRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.ActivateUserRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.UserActivatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/users/{userId}/deactivate/bulk": {"put": {"tags": ["Users"], "summary": "Deactivates a user for all given tenants", "operationId": "DeactivateBulkTenantUser", "parameters": [{"name": "userId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.Users.DeactivateBulkTenantUserRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.Users.DeactivateBulkTenantUserRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.Users.DeactivateBulkTenantUserRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.Users.DeactivateBulkTenantUserRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.UserDeactivatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/users/{userId}/deactivate": {"put": {"tags": ["Users"], "summary": "Deactivates a user", "operationId": "DeactivateTenantUser", "parameters": [{"name": "userId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.DeactivateUserRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.DeactivateUserRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.DeactivateUserRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.DeactivateUserRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.UserDeactivatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/users/{userId}/disableuserbrowserdebug": {"put": {"tags": ["Users"], "summary": "Disable browser debug for a user", "operationId": "DisableUserBrowserDebugAsync", "parameters": [{"name": "userId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.DisableUserBrowserDebugRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.DisableUserBrowserDebugRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.DisableUserBrowserDebugRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.DisableUserBrowserDebugRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.UserBrowserDebugDisabledResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/users/{userId}/enableuserbrowserdebug": {"put": {"tags": ["Users"], "summary": "Enable browser debug for a user", "operationId": "EnableUserBrowserDebugAsync", "parameters": [{"name": "userId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.EnableUserBrowserDebugRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.EnableUserBrowserDebugRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.EnableUserBrowserDebugRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.EnableUserBrowserDebugRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.UserBrowserDebugEnabledResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/users/{userId}/resetmfa": {"put": {"tags": ["Users"], "summary": "Reset the MFA Status for the User", "operationId": "ResetMfaStatusAsync", "parameters": [{"name": "userId", "in": "path", "required": true, "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "202": {"description": "Accepted"}, "400": {"description": "Bad Request", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "Not Found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/users/{userId}": {"delete": {"tags": ["Users"], "summary": "Deletes a user", "operationId": "DeleteUserAsync", "parameters": [{"name": "userId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "204": {"description": "The resource was successfully deleted."}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "get": {"tags": ["Users"], "summary": "Retrieves a specific user", "operationId": "GetUserProfileByIdAsync", "parameters": [{"name": "userId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Responses.UserProfileResponseWithApplicationLicense"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "put": {"tags": ["Users"], "summary": "Creates or Updates a user", "operationId": "UpdateUserAsync", "parameters": [{"name": "userId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.UpdateUserRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.UpdateUserRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.UpdateUserRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.UpdateUserRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.UserUpdatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/users": {"get": {"tags": ["Users"], "summary": "Retrieves a list of users", "operationId": "GetAllUsersAsync", "parameters": [{"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.UserListResponsePaginatedItemsViewModel"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "post": {"tags": ["Users"], "summary": "Creates a new user", "operationId": "CreateLocalUserAsync", "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.CreateLocalUserRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.CreateLocalUserRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.CreateLocalUserRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.CreateLocalUserRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "201": {"description": "The resource was created. The location of the resource is available in the Location header of the response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.LocalUserCreatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/webhooks/{webhookId}": {"delete": {"tags": ["Webhooks"], "summary": "Deletes a Webhook.", "operationId": "DeleteWebhookAsync", "parameters": [{"name": "webhookId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Webhook.V1.WebhookIdResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "get": {"tags": ["Webhooks"], "summary": "Retrieves a Webhook by ID.", "operationId": "GetWebhookByIdAsync", "parameters": [{"name": "webhookId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Webhook.V1.WebhookResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}, "put": {"tags": ["Webhooks"], "summary": "Updates a Webhook.", "operationId": "UpdateWebhookAsync", "parameters": [{"name": "webhookId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/TenantApi.Webhook.V1.UpdateWebhookRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Webhook.V1.UpdateWebhookRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Webhook.V1.UpdateWebhookRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/TenantApi.Webhook.V1.UpdateWebhookRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Webhook.V1.WebhookIdResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/webhooks/events": {"get": {"tags": ["Webhooks"], "summary": "Retrieves a list of webhook events.", "operationId": "GetAllWebhookSubscriptionsAsync", "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Webhook.V1.WebhookEventsResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/webhooks": {"get": {"tags": ["Webhooks"], "summary": "Retrieves a list of Webhooks.", "operationId": "GetAllWebhooksAsync", "parameters": [{"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Webhook.V1.PaginatedItemsResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "post": {"tags": ["Webhooks"], "summary": "Creates a Webhook.", "operationId": "CreateWebhookAsync", "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/TenantApi.Webhook.V1.CreateWebhookRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Webhook.V1.CreateWebhookRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Webhook.V1.CreateWebhookRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/TenantApi.Webhook.V1.CreateWebhookRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "201": {"description": "The resource was created. The location of the resource is available in the Location header of the response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Webhook.V1.WebhookIdResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}}, "components": {"schemas": {"ApplicationApi.Application.V1.ApplicationCreatedResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "applicationId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "ApplicationApi.Application.V1.ApplicationLauncherSettingsResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "applicationId": {"type": "string", "nullable": true}, "applicationDescription": {"type": "string", "nullable": true}, "lightIconUrl": {"type": "string", "nullable": true}, "darkIconUrl": {"type": "string", "nullable": true}, "lightBackgroundTileUrl": {"type": "string", "nullable": true}, "darkBackgroundTileUrl": {"type": "string", "nullable": true}, "lightOverlayTileUrl": {"type": "string", "nullable": true}, "darkOverlayTileUrl": {"type": "string", "nullable": true}, "documentationUrl": {"type": "string", "nullable": true}, "urls": {"type": "array", "items": {"$ref": "#/components/schemas/ApplicationApi.Application.V1.Url"}, "nullable": true, "readOnly": true}, "showInAppLauncher": {"type": "boolean"}, "showInQuickLauncher": {"type": "boolean"}}, "additionalProperties": false}, "ApplicationApi.Application.V1.ApplicationListResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "applicationId": {"type": "string", "nullable": true}, "applicationName": {"type": "string", "nullable": true}, "version": {"type": "string", "nullable": true}, "tags": {"type": "string", "nullable": true}, "groups": {"type": "string", "nullable": true}, "applicationStatus": {"$ref": "#/components/schemas/ApplicationApi.Application.V1.ApplicationStatus"}, "roles": {"type": "array", "items": {"$ref": "#/components/schemas/ApplicationApi.Application.V1.Role"}, "nullable": true, "readOnly": true}, "createdBy": {"type": "string", "nullable": true}, "createdDateTime": {"type": "string", "nullable": true}, "lastModifiedBy": {"type": "string", "nullable": true}, "lastModifiedDateTime": {"type": "string", "nullable": true}, "deletedAt": {"type": "string", "nullable": true}, "subscriptionType": {"$ref": "#/components/schemas/ApplicationApi.Application.V1.ApplicationSubscriptionType"}, "documentationUrl": {"type": "string", "nullable": true}}, "additionalProperties": false}, "ApplicationApi.Application.V1.ApplicationProfileResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "applicationId": {"type": "string", "nullable": true}, "applicationType": {"$ref": "#/components/schemas/ApplicationApi.Application.V1.ApplicationType"}, "applicationName": {"type": "string", "nullable": true}, "applicationUri": {"type": "string", "nullable": true}, "version": {"type": "string", "nullable": true}, "tooltipText": {"type": "string", "nullable": true}, "applicationDescription": {"type": "string", "nullable": true}, "tags": {"type": "string", "nullable": true}, "groups": {"type": "string", "nullable": true}, "applicationStatus": {"$ref": "#/components/schemas/ApplicationApi.Application.V1.ApplicationStatus"}, "openInNewWindow": {"type": "boolean"}, "roles": {"type": "array", "items": {"$ref": "#/components/schemas/ApplicationApi.Application.V1.Role"}, "nullable": true, "readOnly": true}, "createdBy": {"type": "string", "nullable": true}, "createdDateTime": {"type": "string", "nullable": true}, "lastModifiedBy": {"type": "string", "nullable": true}, "lastModifiedDateTime": {"type": "string", "nullable": true}, "clientId": {"type": "string", "nullable": true}, "subscriptionType": {"$ref": "#/components/schemas/ApplicationApi.Application.V1.ApplicationSubscriptionType"}}, "additionalProperties": false}, "ApplicationApi.Application.V1.ApplicationPublishedResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "applicationId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "ApplicationApi.Application.V1.ApplicationPurgedResponse": {"type": "object", "properties": {"applicationId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "ApplicationApi.Application.V1.ApplicationRecoveredResponse": {"type": "object", "properties": {"applicationId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "ApplicationApi.Application.V1.ApplicationStatus": {"enum": ["Unknown", "Draft", "Published"], "type": "string"}, "ApplicationApi.Application.V1.ApplicationSubscriptionType": {"enum": ["Auto", "Manual", "None"], "type": "string"}, "ApplicationApi.Application.V1.ApplicationType": {"enum": ["Unknown", "SSO", "Link"], "type": "string"}, "ApplicationApi.Application.V1.ApplicationUpdatedResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "applicationId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "ApplicationApi.Application.V1.CreateApplicationRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "applicationId": {"type": "string", "nullable": true}, "applicationType": {"$ref": "#/components/schemas/ApplicationApi.Application.V1.ApplicationType"}, "applicationName": {"type": "string", "nullable": true}, "applicationUri": {"type": "string", "nullable": true}, "version": {"type": "string", "nullable": true}, "tooltipText": {"type": "string", "nullable": true}, "applicationDescription": {"type": "string", "nullable": true}, "tags": {"type": "string", "nullable": true}, "groups": {"type": "string", "nullable": true}, "lightIconUrl": {"type": "string", "nullable": true}, "darkIconUrl": {"type": "string", "nullable": true}, "lightBackgroundTileUrl": {"type": "string", "nullable": true}, "darkBackgroundTileUrl": {"type": "string", "nullable": true}, "lightOverlayTileUrl": {"type": "string", "nullable": true}, "darkOverlayTileUrl": {"type": "string", "nullable": true}, "showInAppLauncher": {"type": "boolean"}, "showInQuickLauncher": {"type": "boolean"}, "openInNewWindow": {"type": "boolean"}, "roles": {"type": "array", "items": {"$ref": "#/components/schemas/ApplicationApi.Application.V1.Role"}, "nullable": true, "readOnly": true}, "urls": {"type": "array", "items": {"$ref": "#/components/schemas/ApplicationApi.Application.V1.Url"}, "nullable": true, "readOnly": true}, "documentationUrl": {"type": "string", "nullable": true}, "subscriptionType": {"$ref": "#/components/schemas/ApplicationApi.Application.V1.ApplicationSubscriptionType"}}, "additionalProperties": false}, "ApplicationApi.Application.V1.DeleteApplicationRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "applicationId": {"type": "string", "nullable": true}, "reason": {"type": "string", "nullable": true}}, "additionalProperties": false}, "ApplicationApi.Application.V1.MigrateUpRequest": {"type": "object", "properties": {"migrationCode": {"type": "string", "nullable": true}, "continueOnErrors": {"type": "boolean"}}, "additionalProperties": false}, "ApplicationApi.Application.V1.PaginatedItemsResponse": {"type": "object", "properties": {"pageIndex": {"type": "integer", "format": "int32"}, "pageSize": {"type": "integer", "format": "int32"}, "count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/ApplicationApi.Application.V1.ApplicationListResponse"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "ApplicationApi.Application.V1.PurgeApplicationRequest": {"type": "object", "properties": {"applicationId": {"type": "string", "nullable": true}, "reason": {"type": "string", "nullable": true}}, "additionalProperties": false}, "ApplicationApi.Application.V1.RecoverApplicationRequest": {"type": "object", "properties": {"applicationId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "ApplicationApi.Application.V1.Role": {"type": "object", "properties": {"roleName": {"type": "string", "nullable": true}, "isDefault": {"type": "boolean"}, "isAvailableForTenants": {"type": "boolean"}, "displayName": {"type": "string", "nullable": true}, "description": {"type": "string", "nullable": true}, "sortOrder": {"type": "integer", "format": "int32"}}, "additionalProperties": false}, "ApplicationApi.Application.V1.UpdateApplicationLauncherSettingsRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "applicationId": {"type": "string", "nullable": true}, "applicationDescription": {"type": "string", "nullable": true}, "lightIconUrl": {"type": "string", "nullable": true}, "darkIconUrl": {"type": "string", "nullable": true}, "lightBackgroundTileUrl": {"type": "string", "nullable": true}, "darkBackgroundTileUrl": {"type": "string", "nullable": true}, "lightOverlayTileUrl": {"type": "string", "nullable": true}, "darkOverlayTileUrl": {"type": "string", "nullable": true}, "documentationUrl": {"type": "string", "nullable": true}, "showInAppLauncher": {"type": "boolean"}, "showInQuickLauncher": {"type": "boolean"}, "subscriptionType": {"$ref": "#/components/schemas/ApplicationApi.Application.V1.ApplicationSubscriptionType"}, "urls": {"type": "array", "items": {"$ref": "#/components/schemas/ApplicationApi.Application.V1.Url"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "ApplicationApi.Application.V1.UpdateApplicationProfileRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "applicationId": {"type": "string", "nullable": true}, "applicationType": {"$ref": "#/components/schemas/ApplicationApi.Application.V1.ApplicationType"}, "applicationName": {"type": "string", "nullable": true}, "applicationUri": {"type": "string", "nullable": true}, "version": {"type": "string", "nullable": true}, "tooltipText": {"type": "string", "nullable": true}, "applicationDescription": {"type": "string", "nullable": true}, "tags": {"type": "string", "nullable": true}, "groups": {"type": "string", "nullable": true}, "openInNewWindow": {"type": "boolean"}, "roles": {"type": "array", "items": {"$ref": "#/components/schemas/ApplicationApi.Application.V1.Role"}, "nullable": true, "readOnly": true}, "urls": {"type": "array", "items": {"$ref": "#/components/schemas/ApplicationApi.Application.V1.Url"}, "nullable": true, "readOnly": true}, "subscriptionType": {"$ref": "#/components/schemas/ApplicationApi.Application.V1.ApplicationSubscriptionType"}}, "additionalProperties": false}, "ApplicationApi.Application.V1.Url": {"type": "object", "properties": {"code": {"type": "string", "nullable": true}, "label": {"type": "string", "nullable": true}, "value": {"type": "string", "nullable": true}, "openInNewTab": {"type": "boolean", "nullable": true}, "systemDefined": {"type": "boolean", "nullable": true}, "readonly": {"type": "boolean", "nullable": true}, "urlType": {"$ref": "#/components/schemas/ApplicationApi.Application.V1.UrlType"}}, "additionalProperties": false}, "ApplicationApi.Application.V1.UrlType": {"enum": ["Link", "Asset"], "type": "string"}, "DataSyncApi.Connection.V1.ConnectionCreatedResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "connectionId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "DataSyncApi.Connection.V1.ConnectionDeletedResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "connectionId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "DataSyncApi.Connection.V1.ConnectionListResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "connectionId": {"type": "string", "nullable": true}, "name": {"type": "string", "nullable": true}, "providerId": {"type": "string", "nullable": true}, "providerName": {"type": "string", "nullable": true}, "connectionTypeId": {"type": "string", "nullable": true}, "connectionTypeName": {"type": "string", "nullable": true}, "createdBy": {"type": "string", "nullable": true}, "createdDateTime": {"type": "string", "nullable": true}, "lastModifiedBy": {"type": "string", "nullable": true}, "lastModifiedDateTime": {"type": "string", "nullable": true}}, "additionalProperties": false}, "DataSyncApi.Connection.V1.ConnectionListResponsePaginatedItemsViewModel": {"type": "object", "properties": {"pageIndex": {"type": "integer", "format": "int32"}, "pageSize": {"type": "integer", "format": "int32"}, "count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/DataSyncApi.Connection.V1.ConnectionListResponse"}, "nullable": true}}, "additionalProperties": false}, "DataSyncApi.Connection.V1.ConnectionMetadata": {"type": "object", "properties": {"code": {"type": "string", "nullable": true}, "value": {"type": "string", "nullable": true}, "isSecret": {"type": "boolean"}}, "additionalProperties": false}, "DataSyncApi.Connection.V1.ConnectionProfileResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "connectionId": {"type": "string", "nullable": true}, "name": {"type": "string", "nullable": true}, "connectionMetadata": {"type": "array", "items": {"$ref": "#/components/schemas/DataSyncApi.Connection.V1.ConnectionMetadata"}, "nullable": true, "readOnly": true}, "providerId": {"type": "string", "nullable": true}, "providerName": {"type": "string", "nullable": true}, "connectionTypeId": {"type": "string", "nullable": true}, "connectionTypeName": {"type": "string", "nullable": true}, "createdBy": {"type": "string", "nullable": true}, "createdDateTime": {"type": "string", "nullable": true}, "lastModifiedBy": {"type": "string", "nullable": true}, "lastModifiedDateTime": {"type": "string", "nullable": true}}, "additionalProperties": false}, "DataSyncApi.Connection.V1.ConnectionUpdatedResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "connectionId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "DataSyncApi.Connection.V1.CreateConnectionRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "connectionId": {"type": "string", "nullable": true}, "name": {"type": "string", "nullable": true}, "connectionMetadata": {"type": "array", "items": {"$ref": "#/components/schemas/DataSyncApi.Connection.V1.ConnectionMetadata"}, "nullable": true, "readOnly": true}, "providerId": {"type": "string", "nullable": true}, "connectionTypeId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "DataSyncApi.Connection.V1.DeleteConnectionRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "connectionId": {"type": "string", "nullable": true}, "reason": {"type": "string", "nullable": true}}, "additionalProperties": false}, "DataSyncApi.Connection.V1.UpdateConnectionRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "connectionId": {"type": "string", "nullable": true}, "name": {"type": "string", "nullable": true}, "connectionMetadata": {"type": "array", "items": {"$ref": "#/components/schemas/DataSyncApi.Connection.V1.ConnectionMetadata"}, "nullable": true, "readOnly": true}, "providerId": {"type": "string", "nullable": true}, "connectionTypeId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "DataSyncApi.EdFiRosterSync.V1.EdFiRosterSyncJobMode": {"enum": ["Unknown", "DefaultInstance", "Custom"], "type": "string"}, "DataSyncApi.EdFiRosterSync.V1.EdFiRosterSyncJobProfile": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "mode": {"$ref": "#/components/schemas/DataSyncApi.EdFiRosterSync.V1.EdFiRosterSyncJobMode"}, "provider": {"$ref": "#/components/schemas/DataSyncApi.EdFiRosterSync.V1.EdFiRosterSyncJobProvider"}, "connectionId": {"type": "string", "nullable": true}, "jobId": {"type": "string", "nullable": true}, "clientId": {"type": "string", "nullable": true}, "clientSecret": {"type": "string", "nullable": true}, "baseUrl": {"type": "string", "nullable": true}, "authenticationUrl": {"type": "string", "nullable": true}, "resourcesUrl": {"type": "string", "nullable": true}, "enabled": {"type": "boolean", "nullable": true}, "edFiInstanceId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "DataSyncApi.EdFiRosterSync.V1.EdFiRosterSyncJobProvider": {"enum": ["Unknown", "EdGraph", "TexasEducationExchange"], "type": "string"}, "DataSyncApi.EdFiRosterSync.V1.JobPurgedResponse": {"type": "object", "properties": {"status": {"type": "string", "nullable": true}, "messages": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "DataSyncApi.Job.V1.ChildJob": {"type": "object", "properties": {"jobId": {"type": "string", "nullable": true}, "jobExecutionId": {"type": "string", "nullable": true}, "childJobId": {"type": "string", "nullable": true}, "childJobName": {"type": "string", "nullable": true}, "jobExecutionStatus": {"$ref": "#/components/schemas/DataSyncApi.Job.V1.JobExecutionStatus"}, "jobExecutionStartDateTime": {"type": "string", "nullable": true}, "jobExecutionEndDateTime": {"type": "string", "nullable": true}, "metrics": {"type": "array", "items": {"$ref": "#/components/schemas/DataSyncApi.Job.V1.Metric"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "DataSyncApi.Job.V1.CreateJobRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "jobId": {"type": "string", "nullable": true}, "name": {"type": "string", "nullable": true}, "jobTypeId": {"type": "string", "nullable": true}, "sourceConnectionId": {"type": "string", "nullable": true}, "destinationConnectionId": {"type": "string", "nullable": true}, "profileId": {"type": "string", "nullable": true}, "jobPoints": {"type": "integer", "format": "int32"}, "applicationId": {"type": "string", "nullable": true}, "dataRefreshType": {"$ref": "#/components/schemas/DataSyncApi.Job.V1.DataRefreshType"}, "dataRefreshSpecificDate": {"type": "string", "nullable": true}, "maxApiFailure": {"type": "integer", "format": "int32"}, "maxApiRetry": {"type": "integer", "format": "int32"}, "jobCompleteCallbackUrl": {"type": "string", "nullable": true}, "jobMetadata": {"type": "array", "items": {"$ref": "#/components/schemas/DataSyncApi.Job.V1.JobMetadata"}, "nullable": true, "readOnly": true}, "schedule": {"$ref": "#/components/schemas/DataSyncApi.Job.V1.Schedule"}, "notificationEmails": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "DataSyncApi.Job.V1.DataRefreshType": {"enum": ["Unknown", "Full", "Deltasincelastjobexecution", "Deltasincespecificdatetime"], "type": "string"}, "DataSyncApi.Job.V1.ExecuteJobRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "jobId": {"type": "string", "nullable": true}, "childJobId": {"type": "string", "nullable": true}, "dataRefreshType": {"$ref": "#/components/schemas/DataSyncApi.Job.V1.DataRefreshType"}, "dataRefreshSpecificDate": {"type": "string", "nullable": true}}, "additionalProperties": false}, "DataSyncApi.Job.V1.JobActivatedResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "jobId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "DataSyncApi.Job.V1.JobCreatedResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "jobId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "DataSyncApi.Job.V1.JobDeactivatedResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "jobId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "DataSyncApi.Job.V1.JobExecutionRequestedResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "jobId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "DataSyncApi.Job.V1.JobExecutionStatus": {"enum": ["Unknown", "Queued", "Running", "Completed", "CompletedWithErrors", "Cancelled", "Error", "QueuedForCancel"], "type": "string"}, "DataSyncApi.Job.V1.JobListResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "jobId": {"type": "string", "nullable": true}, "name": {"type": "string", "nullable": true}, "jobTypeId": {"type": "string", "nullable": true}, "jobTypeName": {"type": "string", "nullable": true}, "sourceConnectionId": {"type": "string", "nullable": true}, "destinationConnectionId": {"type": "string", "nullable": true}, "profileId": {"type": "string", "nullable": true}, "applicationId": {"type": "string", "nullable": true}, "schedule": {"$ref": "#/components/schemas/DataSyncApi.Job.V1.Schedule"}, "jobStatus": {"$ref": "#/components/schemas/DataSyncApi.Job.V1.JobStatus"}, "jobExecutionId": {"type": "string", "nullable": true}, "jobExecutionStatus": {"$ref": "#/components/schemas/DataSyncApi.Job.V1.JobExecutionStatus"}, "jobExecutionStartDateTime": {"type": "string", "nullable": true}, "jobExecutionEndDateTime": {"type": "string", "nullable": true}, "metrics": {"type": "array", "items": {"$ref": "#/components/schemas/DataSyncApi.Job.V1.Metric"}, "nullable": true, "readOnly": true}, "childJobs": {"type": "array", "items": {"$ref": "#/components/schemas/DataSyncApi.Job.V1.ChildJob"}, "nullable": true, "readOnly": true}, "createdBy": {"type": "string", "nullable": true}, "createdDateTime": {"type": "string", "nullable": true}, "lastModifiedBy": {"type": "string", "nullable": true}, "lastModifiedDateTime": {"type": "string", "nullable": true}}, "additionalProperties": false}, "DataSyncApi.Job.V1.JobListResponsePaginatedItemsViewModel": {"type": "object", "properties": {"pageIndex": {"type": "integer", "format": "int32"}, "pageSize": {"type": "integer", "format": "int32"}, "count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/DataSyncApi.Job.V1.JobListResponse"}, "nullable": true}}, "additionalProperties": false}, "DataSyncApi.Job.V1.JobMetadata": {"type": "object", "properties": {"code": {"type": "string", "nullable": true}, "value": {"type": "string", "nullable": true}}, "additionalProperties": false}, "DataSyncApi.Job.V1.JobProfileResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "jobId": {"type": "string", "nullable": true}, "name": {"type": "string", "nullable": true}, "jobTypeId": {"type": "string", "nullable": true}, "jobTypeName": {"type": "string", "nullable": true}, "sourceConnectionId": {"type": "string", "nullable": true}, "destinationConnectionId": {"type": "string", "nullable": true}, "profileId": {"type": "string", "nullable": true}, "profileName": {"type": "string", "nullable": true}, "applicationId": {"type": "string", "nullable": true}, "jobPoints": {"type": "integer", "format": "int32"}, "dataRefreshType": {"$ref": "#/components/schemas/DataSyncApi.Job.V1.DataRefreshType"}, "dataRefreshSpecificDate": {"type": "string", "nullable": true}, "maxApiFailure": {"type": "integer", "format": "int32"}, "maxApiRetry": {"type": "integer", "format": "int32"}, "jobCompleteCallbackUrl": {"type": "string", "nullable": true}, "jobMetadata": {"type": "array", "items": {"$ref": "#/components/schemas/DataSyncApi.Job.V1.JobMetadata"}, "nullable": true, "readOnly": true}, "schedule": {"$ref": "#/components/schemas/DataSyncApi.Job.V1.Schedule"}, "notificationEmails": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}, "jobStatus": {"$ref": "#/components/schemas/DataSyncApi.Job.V1.JobStatus"}, "jobExecutionId": {"type": "string", "nullable": true}, "jobExecutionStatus": {"$ref": "#/components/schemas/DataSyncApi.Job.V1.JobExecutionStatus"}, "jobExecutionStartDateTime": {"type": "string", "nullable": true}, "jobExecutionEndDateTime": {"type": "string", "nullable": true}, "metrics": {"type": "array", "items": {"$ref": "#/components/schemas/DataSyncApi.Job.V1.Metric"}, "nullable": true, "readOnly": true}, "childJobs": {"type": "array", "items": {"$ref": "#/components/schemas/DataSyncApi.Job.V1.ChildJob"}, "nullable": true, "readOnly": true}, "createdBy": {"type": "string", "nullable": true}, "createdDateTime": {"type": "string", "nullable": true}, "lastModifiedBy": {"type": "string", "nullable": true}, "lastModifiedDateTime": {"type": "string", "nullable": true}}, "additionalProperties": false}, "DataSyncApi.Job.V1.JobStatus": {"enum": ["Unknown", "Active", "Deactivated", "QueuedForDelete", "QueuedForScheduleRestart"], "type": "string"}, "DataSyncApi.Job.V1.JobUpdatedResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "jobId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "DataSyncApi.Job.V1.Metric": {"type": "object", "properties": {"entity": {"type": "string", "nullable": true}, "processed": {"type": "integer", "format": "int32"}, "success": {"type": "integer", "format": "int32"}, "errors": {"type": "integer", "format": "int32"}}, "additionalProperties": false}, "DataSyncApi.Job.V1.Schedule": {"type": "object", "properties": {"enabled": {"type": "boolean"}, "beginDate": {"type": "string", "nullable": true}, "endDate": {"type": "string", "nullable": true}, "cron": {"type": "string", "nullable": true}, "timeZone": {"type": "string", "nullable": true}}, "additionalProperties": false}, "DataSyncApi.Job.V1.UpdateJobRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "jobId": {"type": "string", "nullable": true}, "name": {"type": "string", "nullable": true}, "sourceConnectionId": {"type": "string", "nullable": true}, "destinationConnectionId": {"type": "string", "nullable": true}, "profileId": {"type": "string", "nullable": true}, "jobPoints": {"type": "integer", "format": "int32"}, "applicationId": {"type": "string", "nullable": true}, "dataRefreshType": {"$ref": "#/components/schemas/DataSyncApi.Job.V1.DataRefreshType"}, "dataRefreshSpecificDate": {"type": "string", "nullable": true}, "maxApiFailure": {"type": "integer", "format": "int32"}, "maxApiRetry": {"type": "integer", "format": "int32"}, "jobCompleteCallbackUrl": {"type": "string", "nullable": true}, "jobMetadata": {"type": "array", "items": {"$ref": "#/components/schemas/DataSyncApi.Job.V1.JobMetadata"}, "nullable": true, "readOnly": true}, "schedule": {"$ref": "#/components/schemas/DataSyncApi.Job.V1.Schedule"}, "notificationEmails": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "DataSyncApi.JobExecution.V1.ChildJob": {"type": "object", "properties": {"jobId": {"type": "string", "nullable": true}, "jobExecutionId": {"type": "string", "nullable": true}, "childJobId": {"type": "string", "nullable": true}, "childJobName": {"type": "string", "nullable": true}, "jobExecutionStatus": {"$ref": "#/components/schemas/DataSyncApi.JobExecution.V1.JobExecutionStatus"}, "jobExecutionStartDateTime": {"type": "string", "nullable": true}, "jobExecutionEndDateTime": {"type": "string", "nullable": true}, "metrics": {"type": "array", "items": {"$ref": "#/components/schemas/DataSyncApi.JobExecution.V1.Metric"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "DataSyncApi.JobExecution.V1.JobExecutionListResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "jobId": {"type": "string", "nullable": true}, "applicationId": {"type": "string", "nullable": true}, "jobExecutionId": {"type": "string", "nullable": true}, "jobExecutionStatus": {"$ref": "#/components/schemas/DataSyncApi.JobExecution.V1.JobExecutionStatus"}, "jobExecutionStartDateTime": {"type": "string", "nullable": true}, "jobExecutionEndDateTime": {"type": "string", "nullable": true}, "childJobs": {"type": "array", "items": {"$ref": "#/components/schemas/DataSyncApi.JobExecution.V1.ChildJob"}, "nullable": true, "readOnly": true}, "metrics": {"type": "array", "items": {"$ref": "#/components/schemas/DataSyncApi.JobExecution.V1.Metric"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "DataSyncApi.JobExecution.V1.JobExecutionListResponsePaginatedItemsViewModel": {"type": "object", "properties": {"pageIndex": {"type": "integer", "format": "int32"}, "pageSize": {"type": "integer", "format": "int32"}, "count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/DataSyncApi.JobExecution.V1.JobExecutionListResponse"}, "nullable": true}}, "additionalProperties": false}, "DataSyncApi.JobExecution.V1.JobExecutionStatus": {"enum": ["Unknown", "Queued", "Running", "Completed", "CompletedWithErrors", "Cancelled", "Error"], "type": "string"}, "DataSyncApi.JobExecution.V1.Metric": {"type": "object", "properties": {"entity": {"type": "string", "nullable": true}, "processed": {"type": "integer", "format": "int32"}, "success": {"type": "integer", "format": "int32"}, "errors": {"type": "integer", "format": "int32"}}, "additionalProperties": false}, "DataSyncApi.JobExecutionLog.V1.JobExecutionLogEntry": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "jobId": {"type": "string", "nullable": true}, "jobExecutionId": {"type": "string", "nullable": true}, "message": {"type": "string", "nullable": true}, "messageType": {"$ref": "#/components/schemas/DataSyncApi.JobExecutionLog.V1.MessageType"}, "loggedDateTime": {"type": "string", "nullable": true}, "errorCode": {"type": "string", "nullable": true}}, "additionalProperties": false}, "DataSyncApi.JobExecutionLog.V1.JobExecutionLogEntryPaginatedItemsViewModel": {"type": "object", "properties": {"pageIndex": {"type": "integer", "format": "int32"}, "pageSize": {"type": "integer", "format": "int32"}, "count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/DataSyncApi.JobExecutionLog.V1.JobExecutionLogEntry"}, "nullable": true}}, "additionalProperties": false}, "DataSyncApi.JobExecutionLog.V1.MessageType": {"enum": ["Information", "Warning", "SyncError", "FatalError"], "type": "string"}, "DataSyncApi.JobType.V1.CreateJobTypeRequest": {"type": "object", "properties": {"jobTypeId": {"type": "string", "nullable": true}, "name": {"type": "string", "nullable": true}, "description": {"type": "string", "nullable": true}, "jobPoints": {"type": "integer", "format": "int32"}, "hasChildJobs": {"type": "boolean"}, "childJobField": {"type": "string", "nullable": true}, "sourceConnectionTypeId": {"type": "string", "nullable": true}, "destinationConnectionTypeId": {"type": "string", "nullable": true}, "sourceConnectionRequired": {"type": "boolean"}, "destinationConnectionRequired": {"type": "boolean"}, "jobMetadataFields": {"type": "array", "items": {"$ref": "#/components/schemas/DataSyncApi.JobType.V1.JobMetadataField"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "DataSyncApi.JobType.V1.CreateProfileRequest": {"type": "object", "properties": {"jobTypeId": {"type": "string", "nullable": true}, "profileId": {"type": "string", "nullable": true}, "name": {"type": "string", "nullable": true}, "description": {"type": "string", "nullable": true}, "actorType": {"type": "string", "nullable": true}}, "additionalProperties": false}, "DataSyncApi.JobType.V1.DeleteJobTypeRequest": {"type": "object", "properties": {"jobTypeId": {"type": "string", "nullable": true}, "reason": {"type": "string", "nullable": true}}, "additionalProperties": false}, "DataSyncApi.JobType.V1.DeleteProfileRequest": {"type": "object", "properties": {"jobTypeId": {"type": "string", "nullable": true}, "profileId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "DataSyncApi.JobType.V1.JobMetadataField": {"type": "object", "properties": {"tab": {"type": "string", "nullable": true}, "code": {"type": "string", "nullable": true}, "label": {"type": "string", "nullable": true}, "validation": {"type": "string", "nullable": true}, "order": {"type": "string", "nullable": true}, "display": {"type": "boolean"}, "defaultValue": {"type": "string", "nullable": true}, "type": {"type": "string", "nullable": true}, "values": {"type": "string", "nullable": true}, "api": {"type": "string", "nullable": true}, "isSecret": {"type": "boolean"}}, "additionalProperties": false}, "DataSyncApi.JobType.V1.JobTypeCreatedResponse": {"type": "object", "properties": {"jobTypeId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "DataSyncApi.JobType.V1.JobTypeListResponse": {"type": "object", "properties": {"jobTypeId": {"type": "string", "nullable": true}, "name": {"type": "string", "nullable": true}, "sourceConnectionTypeId": {"type": "string", "nullable": true}, "destinationConnectionTypeId": {"type": "string", "nullable": true}, "sourceConnectionRequired": {"type": "boolean"}, "destinationConnectionRequired": {"type": "boolean"}, "profiles": {"type": "array", "items": {"$ref": "#/components/schemas/DataSyncApi.JobType.V1.Profile"}, "nullable": true, "readOnly": true}, "createdBy": {"type": "string", "nullable": true}, "createdDateTime": {"type": "string", "nullable": true}, "lastModifiedBy": {"type": "string", "nullable": true}, "lastModifiedDateTime": {"type": "string", "nullable": true}}, "additionalProperties": false}, "DataSyncApi.JobType.V1.JobTypeListResponsePaginatedItemsViewModel": {"type": "object", "properties": {"pageIndex": {"type": "integer", "format": "int32"}, "pageSize": {"type": "integer", "format": "int32"}, "count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/DataSyncApi.JobType.V1.JobTypeListResponse"}, "nullable": true}}, "additionalProperties": false}, "DataSyncApi.JobType.V1.JobTypeProfileResponse": {"type": "object", "properties": {"jobTypeId": {"type": "string", "nullable": true}, "name": {"type": "string", "nullable": true}, "description": {"type": "string", "nullable": true}, "jobPoints": {"type": "integer", "format": "int32"}, "hasChildJobs": {"type": "boolean"}, "childJobField": {"type": "string", "nullable": true}, "sourceConnectionTypeId": {"type": "string", "nullable": true}, "destinationConnectionTypeId": {"type": "string", "nullable": true}, "sourceConnectionRequired": {"type": "boolean"}, "destinationConnectionRequired": {"type": "boolean"}, "jobMetadataFields": {"type": "array", "items": {"$ref": "#/components/schemas/DataSyncApi.JobType.V1.JobMetadataField"}, "nullable": true, "readOnly": true}, "profiles": {"type": "array", "items": {"$ref": "#/components/schemas/DataSyncApi.JobType.V1.Profile"}, "nullable": true, "readOnly": true}, "createdBy": {"type": "string", "nullable": true}, "createdDateTime": {"type": "string", "nullable": true}, "lastModifiedBy": {"type": "string", "nullable": true}, "lastModifiedDateTime": {"type": "string", "nullable": true}}, "additionalProperties": false}, "DataSyncApi.JobType.V1.JobTypeUpdatedResponse": {"type": "object", "properties": {"jobTypeId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "DataSyncApi.JobType.V1.Profile": {"type": "object", "properties": {"jobTypeId": {"type": "string", "nullable": true}, "profileId": {"type": "string", "nullable": true}, "name": {"type": "string", "nullable": true}, "description": {"type": "string", "nullable": true}, "actorType": {"type": "string", "nullable": true}}, "additionalProperties": false}, "DataSyncApi.JobType.V1.ProfileCreatedResponse": {"type": "object", "properties": {"jobTypeId": {"type": "string", "nullable": true}, "profileId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "DataSyncApi.JobType.V1.ProfileUpdatedResponse": {"type": "object", "properties": {"jobTypeId": {"type": "string", "nullable": true}, "profileId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "DataSyncApi.JobType.V1.UpdateJobTypeRequest": {"type": "object", "properties": {"jobTypeId": {"type": "string", "nullable": true}, "name": {"type": "string", "nullable": true}, "description": {"type": "string", "nullable": true}, "jobPoints": {"type": "integer", "format": "int32"}, "hasChildJobs": {"type": "boolean"}, "childJobField": {"type": "string", "nullable": true}, "sourceConnectionTypeId": {"type": "string", "nullable": true}, "destinationConnectionTypeId": {"type": "string", "nullable": true}, "sourceConnectionRequired": {"type": "boolean"}, "destinationConnectionRequired": {"type": "boolean"}, "jobMetadataFields": {"type": "array", "items": {"$ref": "#/components/schemas/DataSyncApi.JobType.V1.JobMetadataField"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "DataSyncApi.JobType.V1.UpdateProfileRequest": {"type": "object", "properties": {"jobTypeId": {"type": "string", "nullable": true}, "profileId": {"type": "string", "nullable": true}, "name": {"type": "string", "nullable": true}, "description": {"type": "string", "nullable": true}, "actorType": {"type": "string", "nullable": true}}, "additionalProperties": false}, "DataSyncApi.Provider.V1.ConnectionMetadataField": {"type": "object", "properties": {"tab": {"type": "string", "nullable": true}, "code": {"type": "string", "nullable": true}, "label": {"type": "string", "nullable": true}, "validation": {"type": "string", "nullable": true}, "order": {"type": "string", "nullable": true}, "display": {"type": "boolean"}, "defaultValue": {"type": "string", "nullable": true}, "type": {"type": "string", "nullable": true}, "values": {"type": "string", "nullable": true}, "api": {"type": "string", "nullable": true}, "isSecret": {"type": "boolean"}}, "additionalProperties": false}, "DataSyncApi.Provider.V1.ConnectionType": {"type": "object", "properties": {"providerId": {"type": "string", "nullable": true}, "connectionTypeId": {"type": "string", "nullable": true}, "name": {"type": "string", "nullable": true}, "description": {"type": "string", "nullable": true}, "documentationUri": {"type": "string", "nullable": true}, "connectionMetadataFields": {"type": "array", "items": {"$ref": "#/components/schemas/DataSyncApi.Provider.V1.ConnectionMetadataField"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "DataSyncApi.Provider.V1.ConnectionTypeCreatedResponse": {"type": "object", "properties": {"providerId": {"type": "string", "nullable": true}, "connectionTypeId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "DataSyncApi.Provider.V1.ConnectionTypeUpdatedResponse": {"type": "object", "properties": {"providerId": {"type": "string", "nullable": true}, "connectionTypeId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "DataSyncApi.Provider.V1.CreateConnectionTypeRequest": {"type": "object", "properties": {"providerId": {"type": "string", "nullable": true}, "connectionTypeId": {"type": "string", "nullable": true}, "name": {"type": "string", "nullable": true}, "description": {"type": "string", "nullable": true}, "documentationUri": {"type": "string", "nullable": true}, "connectionMetadataFields": {"type": "array", "items": {"$ref": "#/components/schemas/DataSyncApi.Provider.V1.ConnectionMetadataField"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "DataSyncApi.Provider.V1.CreateProviderRequest": {"type": "object", "properties": {"providerId": {"type": "string", "nullable": true}, "name": {"type": "string", "nullable": true}, "description": {"type": "string", "nullable": true}, "iconUri": {"type": "string", "nullable": true}}, "additionalProperties": false}, "DataSyncApi.Provider.V1.DeleteConnectionTypeRequest": {"type": "object", "properties": {"providerId": {"type": "string", "nullable": true}, "connectionTypeId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "DataSyncApi.Provider.V1.DeleteProviderRequest": {"type": "object", "properties": {"providerId": {"type": "string", "nullable": true}, "reason": {"type": "string", "nullable": true}}, "additionalProperties": false}, "DataSyncApi.Provider.V1.ProviderCreatedResponse": {"type": "object", "properties": {"providerId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "DataSyncApi.Provider.V1.ProviderListResponse": {"type": "object", "properties": {"providerId": {"type": "string", "nullable": true}, "name": {"type": "string", "nullable": true}, "description": {"type": "string", "nullable": true}, "iconUri": {"type": "string", "nullable": true}, "connectionTypes": {"type": "array", "items": {"$ref": "#/components/schemas/DataSyncApi.Provider.V1.ConnectionType"}, "nullable": true, "readOnly": true}, "createdBy": {"type": "string", "nullable": true}, "createdDateTime": {"type": "string", "nullable": true}, "lastModifiedBy": {"type": "string", "nullable": true}, "lastModifiedDateTime": {"type": "string", "nullable": true}}, "additionalProperties": false}, "DataSyncApi.Provider.V1.ProviderListResponsePaginatedItemsViewModel": {"type": "object", "properties": {"pageIndex": {"type": "integer", "format": "int32"}, "pageSize": {"type": "integer", "format": "int32"}, "count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/DataSyncApi.Provider.V1.ProviderListResponse"}, "nullable": true}}, "additionalProperties": false}, "DataSyncApi.Provider.V1.ProviderProfileResponse": {"type": "object", "properties": {"providerId": {"type": "string", "nullable": true}, "name": {"type": "string", "nullable": true}, "description": {"type": "string", "nullable": true}, "iconUri": {"type": "string", "nullable": true}, "connectionTypes": {"type": "array", "items": {"$ref": "#/components/schemas/DataSyncApi.Provider.V1.ConnectionType"}, "nullable": true, "readOnly": true}, "createdBy": {"type": "string", "nullable": true}, "createdDateTime": {"type": "string", "nullable": true}, "lastModifiedBy": {"type": "string", "nullable": true}, "lastModifiedDateTime": {"type": "string", "nullable": true}}, "additionalProperties": false}, "DataSyncApi.Provider.V1.ProviderUpdatedResponse": {"type": "object", "properties": {"providerId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "DataSyncApi.Provider.V1.UpdateConnectionTypeRequest": {"type": "object", "properties": {"providerId": {"type": "string", "nullable": true}, "connectionTypeId": {"type": "string", "nullable": true}, "name": {"type": "string", "nullable": true}, "description": {"type": "string", "nullable": true}, "documentationUri": {"type": "string", "nullable": true}, "connectionMetadataFields": {"type": "array", "items": {"$ref": "#/components/schemas/DataSyncApi.Provider.V1.ConnectionMetadataField"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "DataSyncApi.Provider.V1.UpdateProviderRequest": {"type": "object", "properties": {"providerId": {"type": "string", "nullable": true}, "name": {"type": "string", "nullable": true}, "description": {"type": "string", "nullable": true}, "iconUri": {"type": "string", "nullable": true}}, "additionalProperties": false}, "EdGraph.Common.Errors.Core.ProblemDetails": {"type": "object", "properties": {"type": {"type": "string", "nullable": true}, "status": {"type": "integer", "format": "int32"}, "title": {"type": "string", "nullable": true}, "details": {"type": "string", "nullable": true}, "instance": {"type": "string", "nullable": true}, "extensions": {"type": "object", "additionalProperties": {"nullable": true}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.AddEducationOrganizationRequest": {"type": "object", "properties": {"userId": {"type": "string", "nullable": true}, "tenantId": {"type": "string", "nullable": true}, "educationOrganizationId": {"type": "integer", "format": "int32"}, "staffClassifications": {"type": "array", "items": {"type": "string"}, "nullable": true}}, "additionalProperties": false}, "EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.AssignLicenseRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "subscriptionId": {"type": "string", "nullable": true}, "applicationId": {"type": "string", "nullable": true}, "userId": {"type": "string", "nullable": true}, "roles": {"type": "array", "items": {"type": "string"}, "nullable": true}}, "additionalProperties": false}, "EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.CreateApiResourceRequest": {"type": "object", "properties": {"name": {"type": "string", "description": "The unique name of the resource.", "nullable": true}, "displayName": {"type": "string", "description": "Display name of the resource.", "nullable": true}, "description": {"type": "string", "description": "Description of the resource.", "nullable": true}, "enabled": {"type": "boolean", "description": "Indicates if this resource is enabled. Defaults to true."}}, "additionalProperties": false}, "EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.CreateApplicationRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "format": "uuid"}, "applicationId": {"type": "string", "format": "uuid"}, "applicationType": {"type": "string", "nullable": true}, "applicationName": {"type": "string", "nullable": true}, "applicationUri": {"type": "string", "nullable": true}, "version": {"type": "string", "nullable": true}, "tooltipText": {"type": "string", "nullable": true}, "applicationDescription": {"type": "string", "nullable": true}, "tags": {"type": "string", "nullable": true}, "groups": {"type": "string", "nullable": true}, "lightIconUrl": {"type": "string", "nullable": true}, "darkIconUrl": {"type": "string", "nullable": true}, "darkBackgroundTileUrl": {"type": "string", "nullable": true}, "lightBackgroundTileUrl": {"type": "string", "nullable": true}, "darkOverlayTileUrl": {"type": "string", "nullable": true}, "lightOverlayTileUrl": {"type": "string", "nullable": true}, "showInAppLauncher": {"type": "boolean"}, "showInQuickLauncher": {"type": "boolean"}, "openInNewWindow": {"type": "boolean"}, "roles": {"type": "array", "items": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.Role"}, "nullable": true}, "urls": {"type": "array", "items": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.Url"}, "nullable": true}, "documentationUrl": {"type": "string", "nullable": true}, "subscriptionType": {"type": "string", "nullable": true}}, "additionalProperties": false}, "EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.CreateAuthorizationResourceRequest": {"type": "object", "properties": {"resourceName": {"type": "string", "nullable": true}, "permissions": {"type": "array", "items": {"type": "string"}, "nullable": true}}, "additionalProperties": false}, "EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.CreateAuthorizationResourcesBulkRequest": {"type": "object", "properties": {"createAuthorizationResourceRequests": {"type": "array", "items": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.CreateAuthorizationResourceRequest"}, "nullable": true}}, "additionalProperties": false}, "EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.CreateIdentityResourceRequest": {"type": "object", "properties": {"name": {"type": "string", "description": "The unique name of the resource.", "nullable": true}, "displayName": {"type": "string", "description": "Display name of the resource.", "nullable": true}, "description": {"type": "string", "description": "Description of the resource.", "nullable": true}, "showInDiscoveryDocument": {"type": "boolean", "description": "Specifies whether this scope is shown in the discovery document. Defaults to true."}, "enabled": {"type": "boolean", "description": "Indicates if this resource is enabled. Defaults to true."}}, "additionalProperties": false}, "EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.CreateOnboardingStepRequestDto": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "number": {"type": "integer", "format": "int32"}, "description": {"type": "string", "nullable": true}, "status": {"type": "string", "nullable": true}, "details": {"nullable": true}}, "additionalProperties": false}, "EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.CreateRoleRequest": {"type": "object", "properties": {"name": {"type": "string", "nullable": true}, "permissions": {"type": "array", "items": {"type": "string"}, "nullable": true}}, "additionalProperties": false}, "EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.CreateRolesBulkRequest": {"type": "object", "properties": {"createRoleRequests": {"type": "array", "items": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.CreateRoleRequest"}, "nullable": true}}, "additionalProperties": false}, "EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.CreateStaffClassificationBulkRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "format": "uuid"}, "createStaffClassificationRequests": {"type": "array", "items": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.CreateStaffClassificationRequest"}, "nullable": true}}, "additionalProperties": false}, "EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.CreateStaffClassificationRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "format": "uuid"}, "namespace": {"type": "string", "nullable": true}, "codeValue": {"type": "string", "nullable": true}, "shortDescription": {"type": "string", "nullable": true}, "description": {"type": "string", "nullable": true}, "licenses": {"type": "array", "items": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.StaffClassificationLicenseRequest"}, "nullable": true}}, "additionalProperties": false}, "EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.Role": {"type": "object", "properties": {"roleName": {"type": "string", "nullable": true}, "isDefault": {"type": "boolean"}, "isAvailableForTenants": {"type": "boolean"}, "displayName": {"type": "string", "nullable": true}, "description": {"type": "string", "nullable": true}, "sortOrder": {"type": "integer", "format": "int32"}}, "additionalProperties": false}, "EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.SendInvitationRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "email": {"type": "string", "nullable": true}, "firstName": {"type": "string", "nullable": true}, "lastName": {"type": "string", "nullable": true}, "role": {"type": "string", "nullable": true}, "assignLicenseRequests": {"type": "array", "items": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.AssignLicenseRequest"}, "nullable": true}, "invitingUserDisplayName": {"type": "string", "nullable": true}, "dontSendEmail": {"type": "boolean", "nullable": true}}, "additionalProperties": false}, "EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.StaffClassificationLicenseRequest": {"type": "object", "properties": {"applicationId": {"type": "string", "format": "uuid"}, "licenseStatus": {"type": "string", "nullable": true}, "roles": {"type": "array", "items": {"type": "string"}, "nullable": true}}, "additionalProperties": false}, "EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.Tenants.TenantAdditionalSetting": {"type": "object", "properties": {"showLocalLoginOptionToTenantAdmins": {"type": "boolean", "nullable": true}, "gracePeriodMfaExpiryDate": {"type": "string", "format": "date-time"}}, "additionalProperties": false}, "EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.Tenants.TenantIdentityProviderId": {"enum": ["Local", "Aad", "Google", "Adfs", "Txedexchange", "Mspersonalv2"], "type": "string", "description": "Contains the list of the supported login identity providers"}, "EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.Tenants.TenantIdentityProviderStatus": {"enum": ["Unknown", "Active", "Inactive"], "type": "string"}, "EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.Tenants.TenantIdentityProviders": {"type": "object", "properties": {"identityProviderId": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.Tenants.TenantIdentityProviderId"}, "identityProviderStatus": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.Tenants.TenantIdentityProviderStatus"}, "enableMfa": {"type": "boolean"}, "enforceMfa": {"type": "string", "nullable": true}}, "additionalProperties": false}, "EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.Tenants.TenantSetting": {"type": "object", "properties": {"code": {"type": "string", "nullable": true}, "value": {"type": "string", "nullable": true}, "dataType": {"type": "string", "nullable": true}}, "additionalProperties": false}, "EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.Tenants.TenantStatus": {"enum": ["Unknown", "Active", "Inactive"], "type": "string"}, "EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.Tenants.TenantType": {"enum": ["Unknown", "DataStandardGoverningBody", "EducationalServiceAgency", "ImplementationPartner", "IndependentSoftwareVendor", "Internal", "LocalEducationAgency", "ManagedServiceProvider", "StateEducationAgency"], "type": "string"}, "EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.Tenants.UpdateTenantRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "tenantTypes": {"type": "array", "items": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.Tenants.TenantType"}, "nullable": true}, "organizationIdentifier": {"type": "string", "nullable": true}, "organizationName": {"type": "string", "nullable": true}, "state": {"type": "string", "nullable": true}, "isDemo": {"type": "boolean"}, "additionalSettings": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.Tenants.TenantAdditionalSetting"}, "identityProviders": {"type": "array", "items": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.Tenants.TenantIdentityProviders"}, "nullable": true}, "tenantStatus": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.Tenants.TenantStatus"}, "settings": {"type": "array", "items": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.Tenants.TenantSetting"}, "nullable": true}}, "additionalProperties": false}, "EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.UpdateApiResourceRequest": {"type": "object", "properties": {"id": {"type": "string", "description": "The primary key of the resource.", "format": "uuid"}, "name": {"type": "string", "description": "The unique name of the resource.", "nullable": true}, "displayName": {"type": "string", "description": "Display name of the resource.", "nullable": true}, "description": {"type": "string", "description": "Description of the resource.", "nullable": true}, "enabled": {"type": "boolean", "description": "Indicates if this resource is enabled. Defaults to true."}}, "additionalProperties": false}, "EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.UpdateApplicationLauncherSettingsRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "format": "uuid"}, "applicationId": {"type": "string", "format": "uuid"}, "applicationDescription": {"type": "string", "nullable": true}, "lightIconUrl": {"type": "string", "nullable": true}, "darkIconUrl": {"type": "string", "nullable": true}, "lightBackgroundTileUrl": {"type": "string", "nullable": true}, "darkBackgroundTileUrl": {"type": "string", "nullable": true}, "lightOverlayTileUrl": {"type": "string", "nullable": true}, "darkOverlayTileUrl": {"type": "string", "nullable": true}, "documentationUrl": {"type": "string", "nullable": true}, "showInAppLauncher": {"type": "boolean"}, "showInQuickLauncher": {"type": "boolean"}, "subscriptionType": {"type": "string", "nullable": true}, "urls": {"type": "array", "items": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.Url"}, "nullable": true}}, "additionalProperties": false}, "EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.UpdateApplicationRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "format": "uuid"}, "applicationId": {"type": "string", "format": "uuid"}, "applicationType": {"type": "string", "nullable": true}, "applicationName": {"type": "string", "nullable": true}, "applicationUri": {"type": "string", "nullable": true}, "version": {"type": "string", "nullable": true}, "tooltipText": {"type": "string", "nullable": true}, "applicationDescription": {"type": "string", "nullable": true}, "tags": {"type": "string", "nullable": true}, "groups": {"type": "string", "nullable": true}, "openInNewWindow": {"type": "boolean"}, "roles": {"type": "array", "items": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.Role"}, "nullable": true}, "urls": {"type": "array", "items": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.Url"}, "nullable": true}, "subscriptionType": {"type": "string", "nullable": true}}, "additionalProperties": false}, "EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.UpdateEducationOrganizationRequest": {"type": "object", "properties": {"userId": {"type": "string", "nullable": true}, "tenantId": {"type": "string", "nullable": true}, "educationOrganizationId": {"type": "integer", "format": "int32"}, "staffClassifications": {"type": "array", "items": {"type": "string"}, "nullable": true}}, "additionalProperties": false}, "EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.UpdateIdentityResourceRequest": {"type": "object", "properties": {"id": {"type": "string", "description": "The primary key of the resource.", "format": "uuid"}, "name": {"type": "string", "description": "The unique name of the resource.", "nullable": true}, "displayName": {"type": "string", "description": "Display name of the resource.", "nullable": true}, "description": {"type": "string", "description": "Description of the resource.", "nullable": true}, "showInDiscoveryDocument": {"type": "boolean", "description": "Specifies whether this scope is shown in the discovery document. Defaults to true."}, "enabled": {"type": "boolean", "description": "Indicates if this resource is enabled. Defaults to true."}}, "additionalProperties": false}, "EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.UpdateOnboardingStepRequestDto": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "number": {"type": "integer", "format": "int32"}, "status": {"type": "string", "nullable": true}, "details": {"nullable": true}}, "additionalProperties": false}, "EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.UpdateUserPreferenceRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "format": "uuid", "nullable": true}, "clientId": {"type": "string", "nullable": true}, "code": {"type": "string", "nullable": true}, "value": {"type": "string", "nullable": true}}, "additionalProperties": false}, "EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.Url": {"type": "object", "properties": {"code": {"type": "string", "nullable": true}, "label": {"type": "string", "nullable": true}, "value": {"type": "string", "nullable": true}, "openInNewTab": {"type": "boolean"}, "systemDefined": {"type": "boolean"}, "readonly": {"type": "boolean"}, "urlType": {"$ref": "#/components/schemas/ApplicationApi.Application.V1.UrlType"}}, "additionalProperties": false}, "EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.Users.ActivateBulkTenantUser": {"type": "object", "properties": {"userId": {"type": "string", "nullable": true}, "tenantIds": {"type": "array", "items": {"type": "string"}, "nullable": true}}, "additionalProperties": false}, "EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.Users.DeactivateBulkTenantUserRequest": {"type": "object", "properties": {"userId": {"type": "string", "nullable": true}, "tenantIds": {"type": "array", "items": {"type": "string"}, "nullable": true}}, "additionalProperties": false}, "EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Responses.ApiResourceResponse": {"type": "object", "properties": {"id": {"type": "string", "description": "The primary key of the resource.", "format": "uuid"}, "name": {"type": "string", "description": "The unique name of the resource.", "nullable": true}, "displayName": {"type": "string", "description": "Display name of the resource.", "nullable": true}, "description": {"type": "string", "description": "Description of the resource.", "nullable": true}, "enabled": {"type": "boolean", "description": "Indicates if this resource is enabled. Defaults to true."}}, "additionalProperties": false}, "EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Responses.ApiResourceResponsePaginatedItemsViewModel": {"type": "object", "properties": {"pageIndex": {"type": "integer", "format": "int32"}, "pageSize": {"type": "integer", "format": "int32"}, "count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Responses.ApiResourceResponse"}, "nullable": true}}, "additionalProperties": false}, "EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Responses.ApplicationListResponseWithSubscription": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "applicationTenantId": {"type": "string", "nullable": true}, "applicationId": {"type": "string", "nullable": true}, "applicationName": {"type": "string", "nullable": true}, "version": {"type": "string", "nullable": true}, "tags": {"type": "string", "nullable": true}, "groups": {"type": "string", "nullable": true}, "applicationStatus": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Responses.ApplicationStatus"}, "isInternal": {"type": "boolean"}, "roles": {"type": "array", "items": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Responses.Role"}, "nullable": true}, "urls": {"type": "array", "items": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Responses.ApplicationUrl"}, "nullable": true}, "isTenantSubscribed": {"type": "boolean"}, "isDefault": {"type": "boolean"}, "createdBy": {"type": "string", "nullable": true}, "createdDateTime": {"type": "string", "nullable": true}, "lastModifiedBy": {"type": "string", "nullable": true}, "lastModifiedDateTime": {"type": "string", "nullable": true}}, "additionalProperties": false}, "EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Responses.ApplicationListResponseWithSubscriptionPaginatedItemsViewModel": {"type": "object", "properties": {"pageIndex": {"type": "integer", "format": "int32"}, "pageSize": {"type": "integer", "format": "int32"}, "count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Responses.ApplicationListResponseWithSubscription"}, "nullable": true}}, "additionalProperties": false}, "EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Responses.ApplicationRole": {"type": "object", "properties": {"role": {"type": "string", "description": "The role associated with the application", "nullable": true}, "isAssigned": {"type": "boolean", "description": "Indicates if the user is assigned license for this application"}}, "additionalProperties": false}, "EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Responses.ApplicationStatus": {"enum": ["Unknown", "Draft", "Published"], "type": "string"}, "EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Responses.ApplicationUrl": {"type": "object", "properties": {"code": {"type": "string", "nullable": true}, "label": {"type": "string", "nullable": true}, "value": {"type": "string", "nullable": true}, "openInNewTab": {"type": "boolean"}, "readonly": {"type": "boolean"}, "type": {"$ref": "#/components/schemas/ApplicationApi.Application.V1.UrlType"}}, "additionalProperties": false}, "EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Responses.DomainListResponseDto": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "domainName": {"type": "string", "nullable": true}, "domainStatus": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.DomainStatus"}, "autoAssignUsers": {"type": "boolean"}, "createdBy": {"type": "string", "nullable": true}, "createdDateTime": {"type": "string", "nullable": true}, "lastModifiedBy": {"type": "string", "nullable": true}, "lastModifiedDateTime": {"type": "string", "nullable": true}}, "additionalProperties": false}, "EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Responses.DomainListResponseDtoPaginatedItemsViewModel": {"type": "object", "properties": {"pageIndex": {"type": "integer", "format": "int32"}, "pageSize": {"type": "integer", "format": "int32"}, "count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Responses.DomainListResponseDto"}, "nullable": true}}, "additionalProperties": false}, "EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Responses.EducationOrganizationUserMetricsResponse": {"type": "object", "properties": {"organizationName": {"type": "string", "nullable": true}, "totalNumberOfActiveUsers": {"type": "integer", "format": "int32"}}, "additionalProperties": false}, "EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Responses.IdentityResourceResponse": {"type": "object", "properties": {"id": {"type": "string", "description": "The primary key of the resource.", "format": "uuid"}, "name": {"type": "string", "description": "The unique name of the resource.", "nullable": true}, "displayName": {"type": "string", "description": "Display name of the resource.", "nullable": true}, "description": {"type": "string", "description": "Description of the resource.", "nullable": true}, "showInDiscoveryDocument": {"type": "boolean", "description": "Specifies whether this scope is shown in the discovery document. Defaults to true."}, "enabled": {"type": "boolean", "description": "Indicates if this resource is enabled. Defaults to true."}}, "additionalProperties": false}, "EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Responses.IdentityResourceResponsePaginatedItemsViewModel": {"type": "object", "properties": {"pageIndex": {"type": "integer", "format": "int32"}, "pageSize": {"type": "integer", "format": "int32"}, "count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Responses.IdentityResourceResponse"}, "nullable": true}}, "additionalProperties": false}, "EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Responses.Role": {"type": "object", "properties": {"roleName": {"type": "string", "nullable": true}, "isDefault": {"type": "boolean"}, "displayName": {"type": "string", "nullable": true}, "description": {"type": "string", "nullable": true}, "sortOrder": {"type": "integer", "format": "int32"}}, "additionalProperties": false}, "EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Responses.TenantApplicationActiveSubscriptionMetricsResponse": {"type": "object", "properties": {"applicationId": {"type": "string", "nullable": true}, "applicationName": {"type": "string", "nullable": true}, "totalNumberOfUsers": {"type": "integer", "format": "int32"}, "numberOfUsersLoggedIn": {"type": "integer", "format": "int32"}}, "additionalProperties": false}, "EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Responses.TenantApplicationRoleMetricsResponse": {"type": "object", "properties": {"roleName": {"type": "string", "nullable": true}, "totalNumberOfUsers": {"type": "integer", "format": "int32"}, "totalNumberOfActiveUsers": {"type": "integer", "format": "int32"}}, "additionalProperties": false}, "EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Responses.TenantStatus": {"enum": ["Unknown", "Active", "Inactive"], "type": "string"}, "EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Responses.UserCacheResponse": {"type": "object", "properties": {"userName": {"type": "string", "description": "The user name for this user.", "nullable": true}, "email": {"type": "string", "description": "The email address for this user.", "nullable": true}, "firstName": {"type": "string", "description": "The first name for this user.", "nullable": true}, "lastName": {"type": "string", "description": "The last name for this user.", "nullable": true}, "preferences": {"type": "array", "items": {"$ref": "#/components/schemas/IdentityApi.User.V1.Preference"}, "description": "List of preferences associated with this user", "nullable": true}, "tenants": {"type": "array", "items": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Responses.UserCacheTenantResponse"}, "description": "List of tenants associated with this user", "nullable": true}, "browserDebugEnabled": {"type": "boolean", "description": "Flag to indicate if the debug mode for user is enabled"}, "extensions": {"type": "array", "items": {"$ref": "#/components/schemas/IdentityApi.User.V1.UserExtension"}, "nullable": true}, "selectedTenant": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Responses.UserCacheTenantResponse"}, "tenantsTotalCount": {"type": "integer", "description": "The total count of active tenants associated with this user", "format": "int32"}}, "additionalProperties": false}, "EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Responses.UserCacheTenantEducationOrganizationResponse": {"type": "object", "properties": {"educationOrganizationId": {"type": "integer", "format": "int32"}, "shortNameOfInstitution": {"type": "string", "nullable": true}, "nameOfInstitution": {"type": "string", "nullable": true}, "staffClassifications": {"type": "array", "items": {"type": "string"}, "nullable": true}, "source": {"type": "string", "nullable": true}}, "additionalProperties": false}, "EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Responses.UserCacheTenantResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "format": "uuid"}, "tenantTypes": {"type": "array", "items": {"type": "string"}, "nullable": true}, "organizationIdentifier": {"type": "string", "nullable": true}, "organizationName": {"type": "string", "nullable": true}, "state": {"type": "string", "nullable": true}, "tenantStatus": {"type": "string", "nullable": true}, "isDemo": {"type": "boolean"}, "educationOrganizations": {"type": "array", "items": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Responses.UserCacheTenantEducationOrganizationResponse"}, "nullable": true}, "licenses": {"type": "array", "items": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Responses.UserTenantLicense"}, "nullable": true}}, "additionalProperties": false}, "EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Responses.UserLicense": {"type": "object", "properties": {"subscriptionTenantId": {"type": "string", "description": "The Tenant Id the subscription belongs to", "nullable": true}, "isTenantSubscribed": {"type": "boolean", "description": "The Tenant has a subscription license for this application"}, "tenantSubscriptionId": {"type": "string", "description": "The Tenant subscription Id", "nullable": true}, "tenantSubscriptionStartDateTime": {"type": "string", "description": "The Tenant subscription start date", "nullable": true}, "tenantSubscriptionEndDateTime": {"type": "string", "description": "The Tenant subscription end date", "nullable": true}, "tenantSubscriptionActualEndDateTime": {"type": "string", "description": "The Tenant subscription end date", "nullable": true}, "numberOfLicenses": {"type": "integer", "description": "The Tenant's number of licenses", "format": "int32"}, "assignedLicenses": {"type": "integer", "description": "The Tenant's assigned of licenses", "format": "int32"}, "isUserLicensed": {"type": "boolean", "description": "The user is assigned license for this application"}, "applicationTenantId": {"type": "string", "description": "The Tenant this application belongs to", "nullable": true}, "applicationId": {"type": "string", "description": "The application Id of the application for license", "nullable": true}, "applicationName": {"type": "string", "description": "The application Name of the application for license", "nullable": true}, "applicationRole": {"type": "array", "items": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Responses.ApplicationRole"}, "description": "Application role for this user.", "nullable": true}}, "additionalProperties": false}, "EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Responses.UserLicensePaginatedItemsViewModel": {"type": "object", "properties": {"pageIndex": {"type": "integer", "format": "int32"}, "pageSize": {"type": "integer", "format": "int32"}, "count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Responses.UserLicense"}, "nullable": true}}, "additionalProperties": false}, "EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Responses.UserProfilePreference": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "clientId": {"type": "string", "nullable": true}, "code": {"type": "string", "nullable": true}, "value": {"type": "string", "nullable": true}}, "additionalProperties": false}, "EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Responses.UserProfileResponseWithApplicationLicense": {"type": "object", "properties": {"userId": {"type": "string", "nullable": true}, "userName": {"type": "string", "nullable": true}, "email": {"type": "string", "nullable": true}, "firstName": {"type": "string", "nullable": true}, "lastName": {"type": "string", "nullable": true}, "phoneNumber": {"type": "string", "nullable": true}, "lockoutEnabled": {"type": "string", "nullable": true}, "tenants": {"type": "array", "items": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Responses.UserTenant"}, "nullable": true}, "preferences": {"type": "array", "items": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Responses.UserProfilePreference"}, "nullable": true}, "browserDebugEnabled": {"type": "boolean"}, "licenses": {"type": "array", "items": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Responses.UserLicense"}, "nullable": true}, "createdBy": {"type": "string", "nullable": true}, "createdDateTime": {"type": "string", "nullable": true}, "lastModifiedBy": {"type": "string", "nullable": true}, "lastModifiedDateTime": {"type": "string", "nullable": true}, "logins": {"type": "array", "items": {"$ref": "#/components/schemas/IdentityApi.User.V1.UserLogin"}, "nullable": true}, "extensions": {"type": "array", "items": {"$ref": "#/components/schemas/IdentityApi.User.V1.UserExtension"}, "nullable": true}, "isPlatformAdmin": {"type": "boolean"}, "source": {"type": "string", "nullable": true}, "lastLoginDateTime": {"type": "string", "nullable": true}, "mfaCompleted": {"type": "boolean"}}, "additionalProperties": false}, "EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Responses.UserTenant": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "status": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Responses.TenantStatus"}, "roles": {"type": "array", "items": {"type": "string"}, "nullable": true}, "educationOrganizations": {"type": "array", "items": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Responses.UserTenantEducationOrganization"}, "nullable": true}, "licenses": {"type": "array", "items": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Responses.UserTenantLicense"}, "nullable": true}}, "additionalProperties": false}, "EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Responses.UserTenantEducationOrganization": {"type": "object", "properties": {"educationOrganizationId": {"type": "integer", "format": "int32"}, "shortNameOfInstitution": {"type": "string", "nullable": true}, "nameOfInstitution": {"type": "string", "nullable": true}, "staffClassifications": {"type": "array", "items": {"type": "string"}, "nullable": true}, "source": {"type": "string", "nullable": true}}, "additionalProperties": false}, "EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Responses.UserTenantLicense": {"type": "object", "properties": {"applicationId": {"type": "string", "nullable": true}, "applicationName": {"type": "string", "nullable": true}, "roles": {"type": "array", "items": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Responses.UserTenantLicenseRole"}, "nullable": true}}, "additionalProperties": false}, "EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Responses.UserTenantLicenseRole": {"type": "object", "properties": {"role": {"type": "string", "nullable": true}, "isImplicitlyAssigned": {"type": "boolean"}, "status": {"type": "string", "description": "Maps to EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Responses.UserTenantLicenseRoleStatus.<br></br>\r\n\r\nFor more info on deprecation see: Task 9962: Modify implicit license response to prioritize explicit licenses over implicit (part 2) (https://dev.azure.com/edwire/EW.Educate/_workitems/edit/9962)<br></br>\r\n\r\nUse EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Responses.LicenseSource instead.<br></br>", "nullable": true, "deprecated": true}, "educationOrganizationId": {"type": "integer", "format": "int32", "nullable": true}, "staffClassification": {"type": "string", "nullable": true}, "source": {"type": "string", "description": "Maps to EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Responses.LicenseSource.<br></br>\r\n\r\nFor more info see: Task 9962: Modify implicit license response to prioritize explicit licenses over implicit (part 2) (https://dev.azure.com/edwire/EW.Educate/_workitems/edit/9962)", "nullable": true}}, "additionalProperties": false}, "EdGraph.HttpAggregators.Management.Api.Services.EdFiRosterSync.CreateEdFiRosterSyncJobRequestDto": {"type": "object", "properties": {"mode": {"type": "string", "nullable": true}}, "additionalProperties": false}, "EdGraph.HttpAggregators.Management.Api.Services.EdFiRosterSync.JobCreatedResult": {"type": "object", "properties": {"tenantId": {"type": "string", "format": "uuid", "readOnly": true}, "dataSyncConnectionId": {"type": "string", "format": "uuid", "readOnly": true}, "dataSyncJobId": {"type": "string", "format": "uuid", "readOnly": true}, "edFiInstanceId": {"type": "string", "nullable": true, "readOnly": true}}, "additionalProperties": false}, "EdGraph.HttpAggregators.Management.Api.Services.EdFiRosterSync.SwitchEdFiRosterSyncJobModeRequestDto": {"type": "object", "properties": {"mode": {"type": "string", "nullable": true}}, "additionalProperties": false}, "EdGraph.HttpAggregators.Management.Api.Services.Management.EdFiInstanceCreatedResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "instanceId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "EdGraph.HttpAggregators.Management.Api.Services.Management.EdFiInstanceListModel": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "instanceId": {"type": "string", "nullable": true}, "instanceName": {"type": "string", "nullable": true}, "instanceType": {"type": "string", "nullable": true}, "connectionType": {"type": "string", "nullable": true}, "baseUrl": {"type": "string", "nullable": true}, "authenticationUrl": {"type": "string", "nullable": true}, "resourcesUrl": {"type": "string", "nullable": true}, "schoolYears": {"type": "array", "items": {"type": "integer", "format": "int32"}, "nullable": true}, "isDefault": {"type": "boolean"}, "verificationStatus": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.Onboarding"}, "provider": {"type": "string", "nullable": true}}, "additionalProperties": false}, "EdGraph.HttpAggregators.Management.Api.Services.Management.EdFiInstanceListModelPaginatedItemsViewModel": {"type": "object", "properties": {"pageIndex": {"type": "integer", "format": "int32"}, "pageSize": {"type": "integer", "format": "int32"}, "count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Services.Management.EdFiInstanceListModel"}, "nullable": true}}, "additionalProperties": false}, "EdGraph.HttpAggregators.Management.Api.Services.Management.InstanceCreatedResponse": {"type": "object", "properties": {"instanceId": {"type": "string", "nullable": true}, "tenantId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "EdGraph.HttpAggregators.Management.Api.Services.Management.InstanceResponse": {"type": "object", "properties": {"instanceId": {"type": "string", "nullable": true}, "instanceName": {"type": "string", "nullable": true}, "instanceType": {"type": "string", "nullable": true}, "connectionType": {"type": "string", "nullable": true}, "provider": {"type": "string", "nullable": true}, "schoolYears": {"type": "array", "items": {"type": "integer", "format": "int32"}, "nullable": true}, "tenantId": {"type": "string", "nullable": true}, "isDefault": {"type": "boolean"}}, "additionalProperties": false}, "EdGraph.HttpAggregators.Management.Api.Services.Management.InstanceResponsePaginatedItemsViewModel": {"type": "object", "properties": {"pageIndex": {"type": "integer", "format": "int32"}, "pageSize": {"type": "integer", "format": "int32"}, "count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Services.Management.InstanceResponse"}, "nullable": true}}, "additionalProperties": false}, "EdGraph.HttpAggregators.Management.Api.Services.Management.MovedPermanentlyResponse": {"type": "object", "properties": {"url": {"type": "string", "nullable": true}, "message": {"type": "string", "nullable": true}}, "additionalProperties": false}, "EdGraph.HttpAggregators.Management.Api.Services.Management.TestConnectionResponse": {"type": "object", "properties": {"status": {"type": "string", "nullable": true}, "details": {"type": "string", "nullable": true}}, "additionalProperties": false}, "EdGraph.HttpAggregators.Management.Api.Services.Management.UseCases.EdFiApi": {"type": "object", "properties": {"version": {"type": "string", "nullable": true}, "informationalVersion": {"type": "string", "nullable": true}, "suite": {"type": "string", "nullable": true}, "build": {"type": "string", "nullable": true}, "apiMode": {"type": "string", "nullable": true}, "dataModels": {"type": "array", "items": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Services.Management.UseCases.EdFiDataModel"}, "nullable": true}, "urls": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Services.Management.UseCases.Urls"}}, "additionalProperties": false}, "EdGraph.HttpAggregators.Management.Api.Services.Management.UseCases.EdFiApiLoadEdFiApiMetadataResult": {"type": "object", "properties": {"isSuccess": {"type": "boolean", "readOnly": true}, "value": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Services.Management.UseCases.EdFiApi"}, "error": {"type": "string", "nullable": true, "readOnly": true}}, "additionalProperties": false}, "EdGraph.HttpAggregators.Management.Api.Services.Management.UseCases.EdFiApiMetadataRequest": {"type": "object", "properties": {"baseUrl": {"type": "string", "nullable": true}}, "additionalProperties": false}, "EdGraph.HttpAggregators.Management.Api.Services.Management.UseCases.EdFiDataModel": {"type": "object", "properties": {"name": {"type": "string", "nullable": true}, "version": {"type": "string", "nullable": true}, "informationalVersion": {"type": "string", "nullable": true}}, "additionalProperties": false}, "EdGraph.HttpAggregators.Management.Api.Services.Management.UseCases.UpdateEdFiInstanceUrlsRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "instanceId": {"type": "string", "nullable": true}, "baseUrl": {"type": "string", "nullable": true}, "resourcesUrl": {"type": "string", "nullable": true}, "authenticationUrl": {"type": "string", "nullable": true}}, "additionalProperties": false}, "EdGraph.HttpAggregators.Management.Api.Services.Management.UseCases.Urls": {"type": "object", "properties": {"dependencies": {"type": "string", "nullable": true}, "openApiMetadata": {"type": "string", "nullable": true}, "oauth": {"type": "string", "nullable": true}, "dataManagementApi": {"type": "string", "nullable": true}, "xsdMetadata": {"type": "string", "nullable": true}, "changeQueries": {"type": "string", "nullable": true}, "composites": {"type": "string", "nullable": true}, "identity": {"type": "string", "nullable": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.CreateOnboardingStepRequest": {"type": "object", "properties": {"instanceId": {"type": "string", "nullable": true}, "tenantId": {"type": "string", "nullable": true}, "number": {"type": "integer", "format": "int32"}, "description": {"type": "string", "nullable": true}, "status": {"type": "string", "nullable": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.EdFiConnection": {"type": "object", "properties": {"id": {"type": "string", "nullable": true}, "connectionName": {"type": "string", "nullable": true}, "databaseEngine": {"type": "string", "nullable": true}, "edFiVersion": {"type": "string", "nullable": true}, "edFiExtension": {"type": "string", "nullable": true}, "hostingProvider": {"type": "string", "nullable": true}, "allowedTenantIds": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}, "tiers": {"type": "array", "items": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.EdFiConnectionTier"}, "nullable": true, "readOnly": true}, "createdBy": {"type": "string", "nullable": true}, "createdDateTime": {"type": "string", "nullable": true}, "lastModifiedBy": {"type": "string", "nullable": true}, "lastModifiedDateTime": {"type": "string", "nullable": true}, "connectionType": {"type": "string", "nullable": true}, "instanceType": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.InstanceType"}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.EdFiConnectionTier": {"type": "object", "properties": {"tierId": {"type": "string", "nullable": true}, "tierName": {"type": "string", "nullable": true}, "odsApiConnection": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.TierOdsApiConnection"}, "sqlConnection": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.TierSqlConnection"}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.Instance": {"type": "object", "properties": {"id": {"type": "string", "description": "Details", "nullable": true}, "instanceName": {"type": "string", "nullable": true}, "useCustomId": {"type": "boolean"}, "customId": {"type": "string", "nullable": true}, "description": {"type": "string", "nullable": true}, "connectionName": {"type": "string", "nullable": true}, "selectedConnectionId": {"type": "string", "description": "Connection", "nullable": true}, "selectedConnection": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.EdFiConnection"}, "databases": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.InstanceDatabases"}, "password": {"type": "string", "description": "API Client", "nullable": true}, "apiClientKey": {"type": "string", "nullable": true}, "apiClientSecret": {"type": "string", "nullable": true}, "isApiClientSecretSecured": {"type": "string", "nullable": true}, "tenantId": {"type": "string", "description": "Metadata", "nullable": true}, "createdBy": {"type": "string", "nullable": true}, "createdDateTime": {"type": "string", "nullable": true}, "isDeleted": {"type": "boolean"}, "lastModifiedBy": {"type": "string", "nullable": true}, "lastModifiedDateTime": {"type": "string", "nullable": true}, "apiAuthUrl": {"type": "string", "description": "URLs", "nullable": true}, "apiResourcesUrls": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}, "apiCompositesUrls": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}, "selectedConnectionType": {"type": "string", "description": "Connection", "nullable": true}, "isDefault": {"type": "boolean", "description": "IsDefault", "nullable": true}, "provider": {"type": "string", "description": "Provider", "nullable": true}, "onboarding": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.Onboarding"}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.InstanceDatabase": {"type": "object", "properties": {"selectedTierId": {"type": "string", "nullable": true}, "selectedTierName": {"type": "string", "nullable": true}, "status": {"type": "string", "nullable": true}, "jobs": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.InstanceDatabaseJobs"}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.InstanceDatabaseJobs": {"type": "object", "properties": {"createJobId": {"type": "string", "nullable": true}, "deleteJobId": {"type": "string", "nullable": true}, "resetDeleteJobId": {"type": "string", "nullable": true}, "resetCreateJobId": {"type": "string", "nullable": true}, "generateReportsJobId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.InstanceDatabases": {"type": "object", "properties": {"admin": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.InstanceDatabase"}, "security": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.InstanceDatabase"}, "ods": {"type": "array", "items": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.InstanceOdsDatabase"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.InstanceOdsDatabase": {"type": "object", "properties": {"selectedTierId": {"type": "string", "nullable": true}, "selectedTierName": {"type": "string", "nullable": true}, "status": {"type": "string", "nullable": true}, "jobs": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.InstanceDatabaseJobs"}, "year": {"type": "integer", "format": "int32"}, "odsBackupCode": {"type": "string", "nullable": true}, "odsBackupDescription": {"type": "string", "nullable": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.InstanceType": {"enum": ["Unknown", "Edfi", "OpenEducationAnalytics", "Stadium"], "type": "string"}, "EdfiAdminApi.EdfiAdmin.V1.InstanceUpdatedResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "instanceId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.MigrateUpRequest": {"type": "object", "properties": {"migrationCode": {"type": "string", "nullable": true}, "continueOnErrors": {"type": "boolean"}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.MigrationResult": {"type": "object", "properties": {"messages": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}, "succeeded": {"type": "boolean"}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.OdsApiConnectionEndpoint": {"type": "object", "properties": {"accessTypeId": {"type": "string", "nullable": true}, "compositesUrl": {"type": "string", "nullable": true}, "resourcesUrl": {"type": "string", "nullable": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.Onboarding": {"type": "object", "properties": {"status": {"type": "string", "nullable": true}, "progressPercentage": {"type": "number", "format": "float"}, "totalSteps": {"type": "integer", "format": "int32"}, "lastCompletedStep": {"type": "integer", "format": "int32", "nullable": true}, "startedAt": {"type": "string", "nullable": true}, "completedAt": {"type": "string", "nullable": true}, "steps": {"type": "array", "items": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.OnboardingStep"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.OnboardingStep": {"type": "object", "properties": {"number": {"type": "integer", "format": "int32"}, "description": {"type": "string", "nullable": true}, "status": {"type": "string", "nullable": true}, "startedAt": {"type": "string", "nullable": true}, "completedAt": {"type": "string", "nullable": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.SetInstanceIsDefaultRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "instanceId": {"type": "string", "nullable": true}, "isDefault": {"type": "boolean"}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.TierOdsApiConnection": {"type": "object", "properties": {"clientId": {"type": "string", "nullable": true}, "clientSecret": {"type": "string", "nullable": true}, "tokenUrl": {"type": "string", "nullable": true}, "endpoints": {"type": "array", "items": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.OdsApiConnectionEndpoint"}, "nullable": true, "readOnly": true}, "metadataUrl": {"type": "string", "nullable": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.TierSqlConnection": {"type": "object", "properties": {"sqlServer": {"type": "string", "nullable": true}, "sqlServerUserName": {"type": "string", "nullable": true}, "sqlServerPassword": {"type": "string", "nullable": true}, "azureSubscriptionId": {"type": "string", "nullable": true}, "azureResourceGroupName": {"type": "string", "nullable": true}, "azureServerName": {"type": "string", "nullable": true}, "azureServerElasticPoolName": {"type": "string", "nullable": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.UpdateOnboardingStepRequest": {"type": "object", "properties": {"instanceId": {"type": "string", "nullable": true}, "tenantId": {"type": "string", "nullable": true}, "number": {"type": "integer", "format": "int32"}, "status": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IMSAdminApi.V1.Connections.ConnectionCreatedResponse": {"type": "object", "properties": {"connectionId": {"type": "string", "nullable": true}, "tenantId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IMSAdminApi.V1.Connections.ConnectionDetails": {"type": "object", "properties": {"type": {"type": "string", "nullable": true}, "metadata": {"type": "array", "items": {"$ref": "#/components/schemas/IMSAdminApi.V1.Connections.ConnectionDetailsMetadata"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "IMSAdminApi.V1.Connections.ConnectionDetailsMetadata": {"type": "object", "properties": {"key": {"type": "string", "nullable": true}, "value": {"type": "string", "nullable": true}, "secret": {"type": "boolean"}}, "additionalProperties": false}, "IMSAdminApi.V1.Connections.ConnectionListResponse": {"type": "object", "properties": {"connectionId": {"type": "string", "nullable": true}, "createdBy": {"type": "string", "nullable": true}, "createdDateTime": {"type": "string", "nullable": true}, "lastModifiedBy": {"type": "string", "nullable": true}, "lastModifiedDateTime": {"type": "string", "nullable": true}, "allowedTenants": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}, "name": {"type": "string", "nullable": true}, "details": {"type": "array", "items": {"$ref": "#/components/schemas/IMSAdminApi.V1.Connections.ConnectionDetails"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "IMSAdminApi.V1.Connections.CreateConnectionRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "name": {"type": "string", "nullable": true}, "details": {"type": "array", "items": {"$ref": "#/components/schemas/IMSAdminApi.V1.Connections.ConnectionDetails"}, "nullable": true, "readOnly": true}, "tiers": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}, "backupCodes": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "IMSAdminApi.V1.Connections.PagedConnectionsResponse": {"type": "object", "properties": {"pageIndex": {"type": "integer", "format": "int32"}, "pageSize": {"type": "integer", "format": "int32"}, "count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/IMSAdminApi.V1.Connections.ConnectionListResponse"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "IdentityApi.ApiScope.V1.ApiScopeResponse": {"type": "object", "properties": {"id": {"type": "string", "nullable": true}, "name": {"type": "string", "nullable": true}, "displayName": {"type": "string", "nullable": true}, "description": {"type": "string", "nullable": true}, "enabled": {"type": "boolean"}}, "additionalProperties": false}, "IdentityApi.ApiScope.V1.ApiScopeResponsePaginatedItemsViewModel": {"type": "object", "properties": {"pageIndex": {"type": "integer", "format": "int32"}, "pageSize": {"type": "integer", "format": "int32"}, "count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/IdentityApi.ApiScope.V1.ApiScopeResponse"}, "nullable": true}}, "additionalProperties": false}, "IdentityApi.ApiScope.V1.CreateApiScopeRequest": {"type": "object", "properties": {"name": {"type": "string", "nullable": true}, "displayName": {"type": "string", "nullable": true}, "description": {"type": "string", "nullable": true}, "enabled": {"type": "boolean", "nullable": true}}, "additionalProperties": false}, "IdentityApi.ApiScope.V1.UpdateApiScopeRequest": {"type": "object", "properties": {"id": {"type": "string", "nullable": true}, "name": {"type": "string", "nullable": true}, "displayName": {"type": "string", "nullable": true}, "description": {"type": "string", "nullable": true}, "enabled": {"type": "boolean", "nullable": true}}, "additionalProperties": false}, "IdentityApi.AuthorizationResource.V1.AuthorizationResourceCreatedResponse": {"type": "object", "properties": {"id": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.AuthorizationResource.V1.AuthorizationResourceDeletedResponse": {"type": "object", "properties": {"id": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.AuthorizationResource.V1.AuthorizationResourceResponse": {"type": "object", "properties": {"id": {"type": "string", "nullable": true}, "resourceName": {"type": "string", "nullable": true}, "permissions": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "IdentityApi.AuthorizationResource.V1.AuthorizationResourceUpdatedResponse": {"type": "object", "properties": {"id": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.AuthorizationResource.V1.AuthorizationResourcesBulkCreatedResponse": {"type": "object", "properties": {"ids": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "IdentityApi.AuthorizationResource.V1.CreateAuthorizationResourceRequest": {"type": "object", "properties": {"resourceName": {"type": "string", "nullable": true}, "permissions": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "IdentityApi.AuthorizationResource.V1.GetAuthorizationResourcesResponse": {"type": "object", "properties": {"pageIndex": {"type": "integer", "format": "int32"}, "pageSize": {"type": "integer", "format": "int32"}, "count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/IdentityApi.AuthorizationResource.V1.AuthorizationResourceResponse"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "IdentityApi.AuthorizationResource.V1.UpdateAuthorizationResourceRequest": {"type": "object", "properties": {"id": {"type": "string", "nullable": true}, "resourceName": {"type": "string", "nullable": true}, "permissions": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "IdentityApi.Client.V1.AccessTokenType": {"enum": ["Jwt", "Reference"], "type": "string"}, "IdentityApi.Client.V1.AddClientSecretRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "applicationId": {"type": "string", "nullable": true}, "clientId": {"type": "string", "nullable": true}, "expiration": {"type": "string", "nullable": true}, "description": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.Client.V1.Claim": {"type": "object", "properties": {"type": {"type": "string", "nullable": true}, "value": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.Client.V1.ClientCreatedResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "applicationId": {"type": "string", "nullable": true}, "clientId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.Client.V1.ClientListResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "applicationId": {"type": "string", "nullable": true}, "clientId": {"type": "string", "nullable": true}, "clientName": {"type": "string", "nullable": true}, "clientUri": {"type": "string", "nullable": true}, "enabled": {"type": "boolean"}, "createdBy": {"type": "string", "nullable": true}, "createdDateTime": {"type": "string", "nullable": true}, "lastModifiedBy": {"type": "string", "nullable": true}, "lastModifiedDateTime": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.Client.V1.ClientListResponsePaginatedItemsViewModel": {"type": "object", "properties": {"pageIndex": {"type": "integer", "format": "int32"}, "pageSize": {"type": "integer", "format": "int32"}, "count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/IdentityApi.Client.V1.ClientListResponse"}, "nullable": true}}, "additionalProperties": false}, "IdentityApi.Client.V1.ClientProfileResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "applicationId": {"type": "string", "nullable": true}, "clientId": {"type": "string", "nullable": true}, "clientName": {"type": "string", "nullable": true}, "description": {"type": "string", "nullable": true}, "clientUri": {"type": "string", "nullable": true}, "logoUri": {"type": "string", "nullable": true}, "enabled": {"type": "boolean"}, "accessTokenType": {"$ref": "#/components/schemas/IdentityApi.Client.V1.AccessTokenType"}, "tokenUsage": {"$ref": "#/components/schemas/IdentityApi.Client.V1.TokenUsage"}, "refreshTokenExpiration": {"$ref": "#/components/schemas/IdentityApi.Client.V1.TokenExpiration"}, "enableLocalLogin": {"type": "boolean"}, "allowOfflineAccess": {"type": "boolean"}, "allowAccessTokensViaBrowser": {"type": "boolean"}, "updateAccessTokenClaimsOnRefresh": {"type": "boolean"}, "alwaysIncludeUserClaimsInIdToken": {"type": "boolean"}, "identityTokenLifetime": {"type": "integer", "format": "int32"}, "accessTokenLifetime": {"type": "integer", "format": "int32"}, "authorizationCodeLifetime": {"type": "integer", "format": "int32"}, "absoluteRefreshTokenLifetime": {"type": "integer", "format": "int32"}, "slidingRefreshTokenLifetime": {"type": "integer", "format": "int32"}, "requireClientSecret": {"type": "boolean"}, "requireConsent": {"type": "boolean"}, "allowedScopes": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}, "allowedCorsOrigins": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}, "allowedGrantTypes": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}, "identityProviderRestrictions": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}, "redirectUris": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}, "postLogoutRedirectUris": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}, "clientSecrets": {"type": "array", "items": {"$ref": "#/components/schemas/IdentityApi.Client.V1.Secret"}, "nullable": true, "readOnly": true}, "claims": {"type": "array", "items": {"$ref": "#/components/schemas/IdentityApi.Client.V1.Claim"}, "nullable": true, "readOnly": true}, "requirePkce": {"type": "boolean"}, "protocolType": {"type": "string", "nullable": true}, "createdBy": {"type": "string", "nullable": true}, "createdDateTime": {"type": "string", "nullable": true}, "lastModifiedBy": {"type": "string", "nullable": true}, "lastModifiedDateTime": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.Client.V1.ClientSecretAddedResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "applicationId": {"type": "string", "nullable": true}, "clientId": {"type": "string", "nullable": true}, "secretValue": {"type": "string", "nullable": true}, "description": {"type": "string", "nullable": true}, "expiration": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.Client.V1.ClientSecretRegeneratedResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "applicationId": {"type": "string", "nullable": true}, "clientId": {"type": "string", "nullable": true}, "secretValue": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.Client.V1.CreateClientRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "applicationId": {"type": "string", "nullable": true}, "clientId": {"type": "string", "nullable": true}, "clientName": {"type": "string", "nullable": true}, "description": {"type": "string", "nullable": true}, "clientUri": {"type": "string", "nullable": true}, "logoUri": {"type": "string", "nullable": true}, "enabled": {"type": "boolean"}, "accessTokenType": {"$ref": "#/components/schemas/IdentityApi.Client.V1.AccessTokenType"}, "tokenUsage": {"$ref": "#/components/schemas/IdentityApi.Client.V1.TokenUsage"}, "refreshTokenExpiration": {"$ref": "#/components/schemas/IdentityApi.Client.V1.TokenExpiration"}, "enableLocalLogin": {"type": "boolean"}, "allowOfflineAccess": {"type": "boolean"}, "allowAccessTokensViaBrowser": {"type": "boolean"}, "updateAccessTokenClaimsOnRefresh": {"type": "boolean"}, "alwaysIncludeUserClaimsInIdToken": {"type": "boolean"}, "identityTokenLifetime": {"type": "integer", "format": "int32"}, "accessTokenLifetime": {"type": "integer", "format": "int32"}, "authorizationCodeLifetime": {"type": "integer", "format": "int32"}, "absoluteRefreshTokenLifetime": {"type": "integer", "format": "int32"}, "slidingRefreshTokenLifetime": {"type": "integer", "format": "int32"}, "requireClientSecret": {"type": "boolean"}, "requireConsent": {"type": "boolean"}, "allowedScopes": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}, "allowedCorsOrigins": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}, "allowedGrantTypes": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}, "identityProviderRestrictions": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}, "redirectUris": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}, "postLogoutRedirectUris": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}, "secret": {"type": "string", "nullable": true}, "claims": {"type": "array", "items": {"$ref": "#/components/schemas/IdentityApi.Client.V1.Claim"}, "nullable": true, "readOnly": true}, "requirePkce": {"type": "boolean"}, "protocolType": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.Client.V1.RegenerateClientSecretRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "applicationId": {"type": "string", "nullable": true}, "clientId": {"type": "string", "nullable": true}, "secret": {"type": "string", "nullable": true}, "autoGeneratedSecret": {"type": "boolean"}}, "additionalProperties": false}, "IdentityApi.Client.V1.Secret": {"type": "object", "properties": {"type": {"type": "string", "nullable": true}, "value": {"type": "string", "nullable": true}, "description": {"type": "string", "nullable": true}, "expiration": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.Client.V1.TokenExpiration": {"enum": ["Sliding", "Absolute"], "type": "string"}, "IdentityApi.Client.V1.TokenUsage": {"enum": ["ReUse", "OneTimeOnly"], "type": "string"}, "IdentityApi.Client.V1.UpdateClientRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "applicationId": {"type": "string", "nullable": true}, "clientId": {"type": "string", "nullable": true}, "clientName": {"type": "string", "nullable": true}, "description": {"type": "string", "nullable": true}, "clientUri": {"type": "string", "nullable": true}, "logoUri": {"type": "string", "nullable": true}, "enabled": {"type": "boolean"}, "accessTokenType": {"$ref": "#/components/schemas/IdentityApi.Client.V1.AccessTokenType"}, "tokenUsage": {"$ref": "#/components/schemas/IdentityApi.Client.V1.TokenUsage"}, "refreshTokenExpiration": {"$ref": "#/components/schemas/IdentityApi.Client.V1.TokenExpiration"}, "enableLocalLogin": {"type": "boolean"}, "allowOfflineAccess": {"type": "boolean"}, "allowAccessTokensViaBrowser": {"type": "boolean"}, "updateAccessTokenClaimsOnRefresh": {"type": "boolean"}, "alwaysIncludeUserClaimsInIdToken": {"type": "boolean"}, "identityTokenLifetime": {"type": "integer", "format": "int32"}, "accessTokenLifetime": {"type": "integer", "format": "int32"}, "authorizationCodeLifetime": {"type": "integer", "format": "int32"}, "absoluteRefreshTokenLifetime": {"type": "integer", "format": "int32"}, "slidingRefreshTokenLifetime": {"type": "integer", "format": "int32"}, "requireClientSecret": {"type": "boolean"}, "requireConsent": {"type": "boolean"}, "allowedScopes": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}, "allowedCorsOrigins": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}, "allowedGrantTypes": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}, "identityProviderRestrictions": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}, "redirectUris": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}, "postLogoutRedirectUris": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}, "claims": {"type": "array", "items": {"$ref": "#/components/schemas/IdentityApi.Client.V1.Claim"}, "nullable": true, "readOnly": true}, "requirePkce": {"type": "boolean"}, "protocolType": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.ClientSettingsType.V1.ClientSettingsTypeCreatedResponse": {"type": "object", "properties": {"id": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.ClientSettingsType.V1.ClientSettingsTypeResponse": {"type": "object", "properties": {"id": {"type": "string", "nullable": true}, "clientId": {"type": "string", "nullable": true}, "code": {"type": "string", "nullable": true}, "dataType": {"type": "string", "nullable": true}, "order": {"type": "integer", "format": "int32"}, "hidden": {"type": "boolean"}, "htmlElement": {"type": "string", "description": "Html attributes", "nullable": true}, "label": {"type": "string", "nullable": true}, "inputType": {"type": "string", "nullable": true}, "defaultValue": {"type": "string", "nullable": true}, "minValue": {"type": "integer", "format": "int32", "nullable": true}, "maxValue": {"type": "integer", "format": "int32", "nullable": true}, "maxLength": {"type": "integer", "format": "int32", "nullable": true}, "options": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}, "createdBy": {"type": "string", "nullable": true}, "createdDateTime": {"type": "string", "nullable": true}, "lastModifiedBy": {"type": "string", "nullable": true}, "lastModifiedDateTime": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.ClientSettingsType.V1.ClientSettingsTypeUpdatedResponse": {"type": "object", "properties": {"id": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.ClientSettingsType.V1.CreateClientSettingsTypeRequest": {"type": "object", "properties": {"clientId": {"type": "string", "nullable": true}, "code": {"type": "string", "nullable": true}, "dataType": {"type": "string", "nullable": true}, "order": {"type": "integer", "format": "int32"}, "hidden": {"type": "boolean"}, "htmlElement": {"type": "string", "description": "Html attributes", "nullable": true}, "label": {"type": "string", "nullable": true}, "inputType": {"type": "string", "nullable": true}, "defaultValue": {"type": "string", "nullable": true}, "minValue": {"type": "integer", "format": "int32", "nullable": true}, "maxValue": {"type": "integer", "format": "int32", "nullable": true}, "maxLength": {"type": "integer", "format": "int32", "nullable": true}, "options": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "IdentityApi.ClientSettingsType.V1.GetClientSettingsTypesResponse": {"type": "object", "properties": {"pageIndex": {"type": "integer", "format": "int32"}, "pageSize": {"type": "integer", "format": "int32"}, "count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/IdentityApi.ClientSettingsType.V1.ClientSettingsTypeResponse"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "IdentityApi.ClientSettingsType.V1.UpdateClientSettingsTypeRequest": {"type": "object", "properties": {"id": {"type": "string", "nullable": true}, "clientId": {"type": "string", "nullable": true}, "code": {"type": "string", "nullable": true}, "dataType": {"type": "string", "nullable": true}, "order": {"type": "integer", "format": "int32"}, "hidden": {"type": "boolean"}, "htmlElement": {"type": "string", "description": "Html attributes", "nullable": true}, "label": {"type": "string", "nullable": true}, "inputType": {"type": "string", "nullable": true}, "defaultValue": {"type": "string", "nullable": true}, "minValue": {"type": "integer", "format": "int32", "nullable": true}, "maxValue": {"type": "integer", "format": "int32", "nullable": true}, "maxLength": {"type": "integer", "format": "int32", "nullable": true}, "options": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "IdentityApi.Invitation.V1.AssignLicenseRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "subscriptionId": {"type": "string", "nullable": true}, "applicationId": {"type": "string", "nullable": true}, "userId": {"type": "string", "nullable": true}, "roles": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "IdentityApi.Invitation.V1.InvitationListResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "invitationId": {"type": "string", "nullable": true}, "firstName": {"type": "string", "nullable": true}, "lastName": {"type": "string", "nullable": true}, "email": {"type": "string", "nullable": true}, "role": {"type": "string", "nullable": true}, "invitationToken": {"type": "string", "nullable": true}, "invitationStatus": {"$ref": "#/components/schemas/IdentityApi.Invitation.V1.InvitationStatus"}, "invitationSentDateTime": {"type": "string", "nullable": true}, "assignLicenseRequests": {"type": "array", "items": {"$ref": "#/components/schemas/IdentityApi.Invitation.V1.AssignLicenseRequest"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "IdentityApi.Invitation.V1.InvitationListResponsePaginatedItemsViewModel": {"type": "object", "properties": {"pageIndex": {"type": "integer", "format": "int32"}, "pageSize": {"type": "integer", "format": "int32"}, "count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/IdentityApi.Invitation.V1.InvitationListResponse"}, "nullable": true}}, "additionalProperties": false}, "IdentityApi.Invitation.V1.InvitationResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "invitationId": {"type": "string", "nullable": true}, "firstName": {"type": "string", "nullable": true}, "lastName": {"type": "string", "nullable": true}, "email": {"type": "string", "nullable": true}, "role": {"type": "string", "nullable": true}, "invitationToken": {"type": "string", "nullable": true}, "invitationStatus": {"$ref": "#/components/schemas/IdentityApi.Invitation.V1.InvitationStatus"}, "invitationSentDateTime": {"type": "string", "nullable": true}, "assignLicenseRequests": {"type": "array", "items": {"$ref": "#/components/schemas/IdentityApi.Invitation.V1.AssignLicenseRequest"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "IdentityApi.Invitation.V1.InvitationSentResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "invitationId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.Invitation.V1.InvitationStatus": {"enum": ["Unknown", "Invited", "Accepted"], "type": "string"}, "IdentityApi.Role.V1.CreateRoleRequest": {"type": "object", "properties": {"name": {"type": "string", "nullable": true}, "permissions": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "IdentityApi.Role.V1.GetRolesResponse": {"type": "object", "properties": {"pageIndex": {"type": "integer", "format": "int32"}, "pageSize": {"type": "integer", "format": "int32"}, "count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/IdentityApi.Role.V1.RoleResponse"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "IdentityApi.Role.V1.RoleCreatedResponse": {"type": "object", "properties": {"name": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.Role.V1.RoleDeletedResponse": {"type": "object", "properties": {"name": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.Role.V1.RoleResponse": {"type": "object", "properties": {"name": {"type": "string", "nullable": true}, "permissions": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "IdentityApi.Role.V1.RoleUpdatedResponse": {"type": "object", "properties": {"name": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.Role.V1.RolesCreatedBulkResponse": {"type": "object", "properties": {"names": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "IdentityApi.Role.V1.UpdateRoleRequest": {"type": "object", "properties": {"name": {"type": "string", "nullable": true}, "permissions": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "IdentityApi.ServiceProviderResource.V1.CreateServiceProviderResourceRequest": {"type": "object", "properties": {"entityId": {"type": "string", "nullable": true}, "signingCertificateBase64Strings": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}, "encryptionCertificateBase64String": {"type": "string", "nullable": true}, "singleLogoutServices": {"type": "array", "items": {"$ref": "#/components/schemas/IdentityApi.ServiceProviderResource.V1.Service"}, "nullable": true, "readOnly": true}, "assertionConsumerServices": {"type": "array", "items": {"$ref": "#/components/schemas/IdentityApi.ServiceProviderResource.V1.Service"}, "nullable": true, "readOnly": true}, "artifactResolutionServices": {"type": "array", "items": {"$ref": "#/components/schemas/IdentityApi.ServiceProviderResource.V1.Service"}, "nullable": true, "readOnly": true}, "claimsMapping": {"type": "array", "items": {"$ref": "#/components/schemas/IdentityApi.ServiceProviderResource.V1.SamlClaimMap"}, "nullable": true, "readOnly": true}, "signAssertions": {"type": "boolean"}, "encryptAssertions": {"type": "boolean"}, "requireSamlMessageDestination": {"type": "boolean"}, "allowIdpInitiatedSso": {"type": "boolean"}, "requireAuthenticationRequestsSigned": {"type": "boolean"}, "artifactDeliveryBindingType": {"type": "string", "nullable": true}, "requireSignedArtifactResponses": {"type": "boolean"}, "requireSignedArtifactResolveRequests": {"type": "boolean"}, "nameIdentifierFormat": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.ServiceProviderResource.V1.GetServiceProviderResourcesResponse": {"type": "object", "properties": {"pageIndex": {"type": "integer", "format": "int32"}, "pageSize": {"type": "integer", "format": "int32"}, "count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/IdentityApi.ServiceProviderResource.V1.ServiceProviderResourceResponse"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "IdentityApi.ServiceProviderResource.V1.SamlClaimMap": {"type": "object", "properties": {"newClaimType": {"type": "string", "description": "uint32 _id = 1;", "nullable": true}, "originalClaimType": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.ServiceProviderResource.V1.Service": {"type": "object", "properties": {"binding": {"type": "string", "description": "uint32 _id = 1;", "nullable": true}, "index": {"type": "integer", "format": "int32"}, "isDefault": {"type": "boolean"}, "location": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.ServiceProviderResource.V1.ServiceProviderResourceCreatedResponse": {"type": "object", "properties": {"entityId": {"type": "string", "description": "google.protobuf.StringValue id = 1;", "nullable": true}}, "additionalProperties": false}, "IdentityApi.ServiceProviderResource.V1.ServiceProviderResourceDeletedResponse": {"type": "object", "properties": {"entityId": {"type": "string", "description": "google.protobuf.StringValue id = 1;", "nullable": true}}, "additionalProperties": false}, "IdentityApi.ServiceProviderResource.V1.ServiceProviderResourceResponse": {"type": "object", "properties": {"entityId": {"type": "string", "description": "google.protobuf.StringValue id = 1;", "nullable": true}, "signingCertificateBase64Strings": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}, "encryptionCertificateBase64String": {"type": "string", "nullable": true}, "singleLogoutServices": {"type": "array", "items": {"$ref": "#/components/schemas/IdentityApi.ServiceProviderResource.V1.Service"}, "nullable": true, "readOnly": true}, "assertionConsumerServices": {"type": "array", "items": {"$ref": "#/components/schemas/IdentityApi.ServiceProviderResource.V1.Service"}, "nullable": true, "readOnly": true}, "artifactResolutionServices": {"type": "array", "items": {"$ref": "#/components/schemas/IdentityApi.ServiceProviderResource.V1.Service"}, "nullable": true, "readOnly": true}, "claimsMapping": {"type": "array", "items": {"$ref": "#/components/schemas/IdentityApi.ServiceProviderResource.V1.SamlClaimMap"}, "nullable": true, "readOnly": true}, "signAssertions": {"type": "boolean"}, "encryptAssertions": {"type": "boolean"}, "requireSamlMessageDestination": {"type": "boolean"}, "allowIdpInitiatedSso": {"type": "boolean"}, "requireAuthenticationRequestsSigned": {"type": "boolean"}, "artifactDeliveryBindingType": {"type": "string", "nullable": true}, "requireSignedArtifactResponses": {"type": "boolean"}, "requireSignedArtifactResolveRequests": {"type": "boolean"}, "nameIdentifierFormat": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.ServiceProviderResource.V1.ServiceProviderResourceUpdatedResponse": {"type": "object", "properties": {"entityId": {"type": "string", "description": "google.protobuf.StringValue id = 1;", "nullable": true}}, "additionalProperties": false}, "IdentityApi.ServiceProviderResource.V1.UpdateServiceProviderResourceRequest": {"type": "object", "properties": {"entityId": {"type": "string", "description": "google.protobuf.StringValue id = 1;", "nullable": true}, "signingCertificateBase64Strings": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}, "encryptionCertificateBase64String": {"type": "string", "nullable": true}, "singleLogoutServices": {"type": "array", "items": {"$ref": "#/components/schemas/IdentityApi.ServiceProviderResource.V1.Service"}, "nullable": true, "readOnly": true}, "assertionConsumerServices": {"type": "array", "items": {"$ref": "#/components/schemas/IdentityApi.ServiceProviderResource.V1.Service"}, "nullable": true, "readOnly": true}, "artifactResolutionServices": {"type": "array", "items": {"$ref": "#/components/schemas/IdentityApi.ServiceProviderResource.V1.Service"}, "nullable": true, "readOnly": true}, "claimsMapping": {"type": "array", "items": {"$ref": "#/components/schemas/IdentityApi.ServiceProviderResource.V1.SamlClaimMap"}, "nullable": true, "readOnly": true}, "signAssertions": {"type": "boolean"}, "encryptAssertions": {"type": "boolean"}, "requireSamlMessageDestination": {"type": "boolean"}, "allowIdpInitiatedSso": {"type": "boolean"}, "requireAuthenticationRequestsSigned": {"type": "boolean"}, "artifactDeliveryBindingType": {"type": "string", "nullable": true}, "requireSignedArtifactResponses": {"type": "boolean"}, "requireSignedArtifactResolveRequests": {"type": "boolean"}, "nameIdentifierFormat": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.StaffClassification.V1.CreateStaffClassificationRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "namespace": {"type": "string", "nullable": true}, "codeValue": {"type": "string", "nullable": true}, "shortDescription": {"type": "string", "nullable": true}, "description": {"type": "string", "nullable": true}, "licenses": {"type": "array", "items": {"$ref": "#/components/schemas/IdentityApi.StaffClassification.V1.StaffClassificationLicenseRequest"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "IdentityApi.StaffClassification.V1.GetStaffClassificationsNamespacesResponse": {"type": "object", "properties": {"pageIndex": {"type": "integer", "format": "int32"}, "pageSize": {"type": "integer", "format": "int32"}, "count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "IdentityApi.StaffClassification.V1.GetStaffClassificationsResponse": {"type": "object", "properties": {"pageIndex": {"type": "integer", "format": "int32"}, "pageSize": {"type": "integer", "format": "int32"}, "count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/IdentityApi.StaffClassification.V1.StaffClassificationResponse"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "IdentityApi.StaffClassification.V1.StaffClassificationCreatedResponse": {"type": "object", "properties": {"id": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.StaffClassification.V1.StaffClassificationDeletedResponse": {"type": "object", "properties": {"id": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.StaffClassification.V1.StaffClassificationLicense": {"type": "object", "properties": {"applicationId": {"type": "string", "nullable": true}, "licenseStatus": {"type": "string", "nullable": true}, "roles": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "IdentityApi.StaffClassification.V1.StaffClassificationLicenseRequest": {"type": "object", "properties": {"applicationId": {"type": "string", "nullable": true}, "licenseStatus": {"type": "string", "nullable": true}, "roles": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "IdentityApi.StaffClassification.V1.StaffClassificationResponse": {"type": "object", "properties": {"id": {"type": "string", "nullable": true}, "createdBy": {"type": "string", "nullable": true}, "createdDateTime": {"type": "string", "nullable": true}, "lastModifiedBy": {"type": "string", "nullable": true}, "lastModifiedDateTime": {"type": "string", "nullable": true}, "isDeleted": {"type": "boolean"}, "tenantId": {"type": "string", "nullable": true}, "namespace": {"type": "string", "nullable": true}, "codeValue": {"type": "string", "nullable": true}, "shortDescription": {"type": "string", "nullable": true}, "description": {"type": "string", "nullable": true}, "licenses": {"type": "array", "items": {"$ref": "#/components/schemas/IdentityApi.StaffClassification.V1.StaffClassificationLicense"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "IdentityApi.StaffClassification.V1.StaffClassificationUpdatedResponse": {"type": "object", "properties": {"id": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.StaffClassification.V1.StaffClassificationsBulkCreatedResponse": {"type": "object", "properties": {"ids": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "IdentityApi.StaffClassification.V1.UpdateStaffClassificationRequest": {"type": "object", "properties": {"id": {"type": "string", "nullable": true}, "namespace": {"type": "string", "nullable": true}, "codeValue": {"type": "string", "nullable": true}, "shortDescription": {"type": "string", "nullable": true}, "description": {"type": "string", "nullable": true}, "licenses": {"type": "array", "items": {"$ref": "#/components/schemas/IdentityApi.StaffClassification.V1.StaffClassificationLicenseRequest"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "IdentityApi.User.V1.ActivateUserRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "userId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.User.V1.AssignLicenseBulkRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "userId": {"type": "string", "nullable": true}, "assignLicenseRequests": {"type": "array", "items": {"$ref": "#/components/schemas/IdentityApi.User.V1.AssignLicenseRequest"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "IdentityApi.User.V1.AssignLicenseRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "subscriptionId": {"type": "string", "nullable": true}, "applicationId": {"type": "string", "nullable": true}, "userId": {"type": "string", "nullable": true}, "roles": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "IdentityApi.User.V1.ComputedLicense": {"type": "object", "properties": {"applicationId": {"type": "string", "nullable": true}, "applicationName": {"type": "string", "nullable": true}, "applicationRole": {"type": "array", "items": {"$ref": "#/components/schemas/IdentityApi.User.V1.ComputedLicenseApplicationRole"}, "nullable": true, "readOnly": true}, "applicationTenantId": {"type": "string", "nullable": true}, "assignedLicenses": {"type": "integer", "format": "int32", "nullable": true}, "isTenantSubscribed": {"type": "boolean", "nullable": true}, "isUserLicensed": {"type": "boolean", "nullable": true}, "numberOfLicenses": {"type": "integer", "format": "int32", "nullable": true}, "subscriptionTenantId": {"type": "string", "nullable": true}, "tenantSubscriptionActualEndDateTime": {"type": "string", "nullable": true}, "tenantSubscriptionEndDateTime": {"type": "string", "nullable": true}, "tenantSubscriptionId": {"type": "string", "nullable": true}, "tenantSubscriptionStartDateTime": {"type": "string", "nullable": true}, "deletedAt": {"type": "string", "nullable": true}, "status": {"$ref": "#/components/schemas/IdentityApi.User.V1.LicenseStatus"}}, "additionalProperties": false}, "IdentityApi.User.V1.ComputedLicenseApplicationRole": {"type": "object", "properties": {"role": {"type": "string", "nullable": true}, "isAssigned": {"type": "boolean", "nullable": true}, "displayName": {"type": "string", "nullable": true}, "description": {"type": "string", "nullable": true}, "sortOrder": {"type": "integer", "format": "int32", "nullable": true}}, "additionalProperties": false}, "IdentityApi.User.V1.CreateLocalUserRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "userName": {"type": "string", "nullable": true}, "email": {"type": "string", "nullable": true}, "firstName": {"type": "string", "nullable": true}, "lastName": {"type": "string", "nullable": true}, "role": {"type": "string", "nullable": true}, "phoneNumber": {"type": "string", "nullable": true}, "lockoutEnabled": {"type": "boolean"}, "password": {"type": "string", "nullable": true}, "autoGeneratedPassword": {"type": "boolean"}, "twoFactorEnabled": {"type": "boolean"}, "assignLicenseRequests": {"type": "array", "items": {"$ref": "#/components/schemas/IdentityApi.User.V1.AssignLicenseRequest"}, "nullable": true, "readOnly": true}, "source": {"type": "string", "nullable": true}, "dontSendEmail": {"type": "boolean", "nullable": true}}, "additionalProperties": false}, "IdentityApi.User.V1.DeactivateUserRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "userId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.User.V1.DisableUserBrowserDebugRequest": {"type": "object", "properties": {"userId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.User.V1.EducationOrganization": {"type": "object", "properties": {"educationOrganizationId": {"type": "integer", "format": "int32"}, "shortNameOfInstitution": {"type": "string", "nullable": true}, "nameOfInstitution": {"type": "string", "nullable": true}, "staffClassifications": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}, "source": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.User.V1.EducationOrganizationAddedResponse": {"type": "object", "properties": {"userId": {"type": "string", "nullable": true}, "tenantId": {"type": "string", "nullable": true}, "educationOrganizationId": {"type": "integer", "format": "int32"}}, "additionalProperties": false}, "IdentityApi.User.V1.EducationOrganizationPaginatedItemsResponse": {"type": "object", "properties": {"pageIndex": {"type": "integer", "format": "int32"}, "pageSize": {"type": "integer", "format": "int32"}, "count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/IdentityApi.User.V1.EducationOrganization"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "IdentityApi.User.V1.EducationOrganizationRemovedResponse": {"type": "object", "properties": {"userId": {"type": "string", "nullable": true}, "tenantId": {"type": "string", "nullable": true}, "educationOrganizationId": {"type": "integer", "format": "int32"}}, "additionalProperties": false}, "IdentityApi.User.V1.EducationOrganizationUpdatedResponse": {"type": "object", "properties": {"userId": {"type": "string", "nullable": true}, "tenantId": {"type": "string", "nullable": true}, "educationOrganizationId": {"type": "integer", "format": "int32"}}, "additionalProperties": false}, "IdentityApi.User.V1.EnableUserBrowserDebugRequest": {"type": "object", "properties": {"userId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.User.V1.GlobalApplicationUserMetrics": {"type": "object", "properties": {"applicationId": {"type": "string", "nullable": true}, "applicationName": {"type": "string", "nullable": true}, "numberOfTenants": {"type": "integer", "format": "int32", "nullable": true}, "totalNumberOfUsers": {"type": "integer", "format": "int32", "nullable": true}, "totalNumberOfActiveUsers": {"type": "integer", "format": "int32", "nullable": true}}, "additionalProperties": false}, "IdentityApi.User.V1.GlobalApplicationUserMetricsPaginatedItemsViewModel": {"type": "object", "properties": {"pageIndex": {"type": "integer", "format": "int32"}, "pageSize": {"type": "integer", "format": "int32"}, "count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/IdentityApi.User.V1.GlobalApplicationUserMetrics"}, "nullable": true}}, "additionalProperties": false}, "IdentityApi.User.V1.LicenseAssignedBulkResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "userId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.User.V1.LicenseAssignedResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "subscriptionId": {"type": "string", "nullable": true}, "applicationId": {"type": "string", "nullable": true}, "userId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.User.V1.LicenseRevokedBulkResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "userId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.User.V1.LicenseRevokedResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "subscriptionId": {"type": "string", "nullable": true}, "applicationId": {"type": "string", "nullable": true}, "userId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.User.V1.LicenseStatus": {"enum": ["Unknown", "Active", "Expired"], "type": "string"}, "IdentityApi.User.V1.LocalUserCreatedResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "userId": {"type": "string", "nullable": true}, "password": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.User.V1.Preference": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "clientId": {"type": "string", "nullable": true}, "code": {"type": "string", "nullable": true}, "value": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.User.V1.RevokeLicenseBulkRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "userId": {"type": "string", "nullable": true}, "revokeLicenseRequests": {"type": "array", "items": {"$ref": "#/components/schemas/IdentityApi.User.V1.RevokeLicenseRequest"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "IdentityApi.User.V1.RevokeLicenseRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "subscriptionId": {"type": "string", "nullable": true}, "applicationId": {"type": "string", "nullable": true}, "userId": {"type": "string", "nullable": true}, "strategy": {"$ref": "#/components/schemas/IdentityApi.User.V1.RevokeStrategy"}}, "additionalProperties": false}, "IdentityApi.User.V1.RevokeStrategy": {"enum": ["Unknown", "RevokeImplicit", "RevokeExplicit", "UndoExplicitRevoke"], "type": "string"}, "IdentityApi.User.V1.SetUserExtensionRequest": {"type": "object", "properties": {"userId": {"type": "string", "nullable": true}, "code": {"type": "string", "nullable": true}, "data": {"type": "string", "nullable": true}, "dataType": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.User.V1.Tenant": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "status": {"$ref": "#/components/schemas/IdentityApi.User.V1.TenantStatus"}, "source": {"$ref": "#/components/schemas/IdentityApi.User.V1.TenantSource"}, "roles": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}, "educationOrganizations": {"type": "array", "items": {"$ref": "#/components/schemas/IdentityApi.User.V1.EducationOrganization"}, "nullable": true, "readOnly": true}, "licenses": {"type": "array", "items": {"$ref": "#/components/schemas/IdentityApi.User.V1.ComputedLicense"}, "nullable": true, "readOnly": true}, "organizationName": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.User.V1.TenantEducationOrganizationMetrics": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "tenantName": {"type": "string", "nullable": true}, "totalNumberOfActiveUsers": {"type": "integer", "format": "int32", "nullable": true}, "totalNumberOfUsers": {"type": "integer", "format": "int32", "nullable": true}}, "additionalProperties": false}, "IdentityApi.User.V1.TenantEducationOrganizationMetricsPaginatedItemsViewModel": {"type": "object", "properties": {"pageIndex": {"type": "integer", "format": "int32"}, "pageSize": {"type": "integer", "format": "int32"}, "count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/IdentityApi.User.V1.TenantEducationOrganizationMetrics"}, "nullable": true}}, "additionalProperties": false}, "IdentityApi.User.V1.TenantSource": {"enum": ["Unknown", "Manual", "PartnershipSync", "EdFiSync"], "type": "string"}, "IdentityApi.User.V1.TenantStatus": {"enum": ["Unknown", "Active", "Inactive"], "type": "string"}, "IdentityApi.User.V1.TenantUserMetrics": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "tenantName": {"type": "string", "nullable": true}, "numberOfSubscriptions": {"type": "integer", "format": "int32", "nullable": true}, "numberOfUsersLoggedIn": {"type": "integer", "format": "int32", "nullable": true}, "totalNumberOfUsers": {"type": "integer", "format": "int32", "nullable": true}}, "additionalProperties": false}, "IdentityApi.User.V1.TenantUserMetricsPaginatedItemsViewModel": {"type": "object", "properties": {"pageIndex": {"type": "integer", "format": "int32"}, "pageSize": {"type": "integer", "format": "int32"}, "count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/IdentityApi.User.V1.TenantUserMetrics"}, "nullable": true}}, "additionalProperties": false}, "IdentityApi.User.V1.UpdateUserRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "userId": {"type": "string", "nullable": true}, "role": {"type": "string", "nullable": true}, "isPlatformAdmin": {"type": "boolean", "nullable": true}}, "additionalProperties": false}, "IdentityApi.User.V1.UserActivatedResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "userId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.User.V1.UserBrowserDebugDisabledResponse": {"type": "object", "properties": {"userId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.User.V1.UserBrowserDebugEnabledResponse": {"type": "object", "properties": {"userId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.User.V1.UserDeactivatedResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "userId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.User.V1.UserExtension": {"type": "object", "properties": {"code": {"type": "string", "nullable": true}, "data": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.User.V1.UserExtensionRemovedResponse": {"type": "object", "properties": {"userId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.User.V1.UserExtensionSetResponse": {"type": "object", "properties": {"userId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.User.V1.UserListResponse": {"type": "object", "properties": {"userId": {"type": "string", "nullable": true}, "userName": {"type": "string", "nullable": true}, "email": {"type": "string", "nullable": true}, "firstName": {"type": "string", "nullable": true}, "lastName": {"type": "string", "nullable": true}, "tenantCount": {"type": "integer", "format": "int32"}, "tenants": {"type": "array", "items": {"$ref": "#/components/schemas/IdentityApi.User.V1.Tenant"}, "nullable": true, "readOnly": true}, "createdBy": {"type": "string", "nullable": true}, "createdDateTime": {"type": "string", "nullable": true}, "lastModifiedBy": {"type": "string", "nullable": true}, "lastModifiedDateTime": {"type": "string", "nullable": true}, "logins": {"type": "array", "items": {"$ref": "#/components/schemas/IdentityApi.User.V1.UserLogin"}, "nullable": true, "readOnly": true}, "source": {"type": "string", "nullable": true}, "lastLoginDateTime": {"type": "string", "nullable": true}, "mfaCompleted": {"type": "boolean"}}, "additionalProperties": false}, "IdentityApi.User.V1.UserListResponsePaginatedItemsViewModel": {"type": "object", "properties": {"pageIndex": {"type": "integer", "format": "int32"}, "pageSize": {"type": "integer", "format": "int32"}, "count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/IdentityApi.User.V1.UserListResponse"}, "nullable": true}}, "additionalProperties": false}, "IdentityApi.User.V1.UserLogin": {"type": "object", "properties": {"loginProvider": {"type": "string", "nullable": true}, "providerDisplayName": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.User.V1.UserPreferenceUpdatedResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "clientId": {"type": "string", "nullable": true}, "code": {"type": "string", "nullable": true}, "value": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.User.V1.UserProfileResponse": {"type": "object", "properties": {"userId": {"type": "string", "nullable": true}, "userName": {"type": "string", "nullable": true}, "email": {"type": "string", "nullable": true}, "firstName": {"type": "string", "nullable": true}, "lastName": {"type": "string", "nullable": true}, "phoneNumber": {"type": "string", "nullable": true}, "lockoutEnabled": {"type": "string", "nullable": true}, "tenants": {"type": "array", "items": {"$ref": "#/components/schemas/IdentityApi.User.V1.Tenant"}, "nullable": true, "readOnly": true}, "preferences": {"type": "array", "items": {"$ref": "#/components/schemas/IdentityApi.User.V1.Preference"}, "nullable": true, "readOnly": true}, "createdBy": {"type": "string", "nullable": true}, "createdDateTime": {"type": "string", "nullable": true}, "lastModifiedBy": {"type": "string", "nullable": true}, "lastModifiedDateTime": {"type": "string", "nullable": true}, "browserDebugEnabled": {"type": "boolean"}, "extensions": {"type": "array", "items": {"$ref": "#/components/schemas/IdentityApi.User.V1.UserExtension"}, "nullable": true, "readOnly": true}, "logins": {"type": "array", "items": {"$ref": "#/components/schemas/IdentityApi.User.V1.UserLogin"}, "nullable": true, "readOnly": true}, "isPlatformAdmin": {"type": "boolean", "nullable": true}, "source": {"type": "string", "nullable": true}, "lastLoginDateTime": {"type": "string", "nullable": true}, "mfaCompleted": {"type": "boolean"}}, "additionalProperties": false}, "IdentityApi.User.V1.UserTenantStatusProfile": {"type": "object", "properties": {"email": {"type": "string", "nullable": true}, "username": {"type": "string", "nullable": true}, "firstName": {"type": "string", "nullable": true}, "lastName": {"type": "string", "nullable": true}, "status": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.User.V1.UserUpdatedResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "userId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.UserExtensionType.V1.CreateUserExtensionTypeRequest": {"type": "object", "properties": {"code": {"type": "string", "nullable": true}, "dataType": {"type": "string", "nullable": true}, "order": {"type": "integer", "format": "int32"}, "hidden": {"type": "boolean"}, "htmlElement": {"type": "string", "description": "Html attributes", "nullable": true}, "label": {"type": "string", "nullable": true}, "inputType": {"type": "string", "nullable": true}, "defaultValue": {"type": "string", "nullable": true}, "minValue": {"type": "integer", "format": "int32", "nullable": true}, "maxValue": {"type": "integer", "format": "int32", "nullable": true}, "maxLength": {"type": "integer", "format": "int32", "nullable": true}}, "additionalProperties": false}, "IdentityApi.UserExtensionType.V1.GetUserExtensionTypesResponse": {"type": "object", "properties": {"pageIndex": {"type": "integer", "format": "int32"}, "pageSize": {"type": "integer", "format": "int32"}, "count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/IdentityApi.UserExtensionType.V1.UserExtensionTypeResponse"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "IdentityApi.UserExtensionType.V1.UpdateUserExtensionTypeRequest": {"type": "object", "properties": {"id": {"type": "string", "nullable": true}, "code": {"type": "string", "nullable": true}, "dataType": {"type": "string", "nullable": true}, "order": {"type": "integer", "format": "int32"}, "hidden": {"type": "boolean"}, "htmlElement": {"type": "string", "description": "Html attributes", "nullable": true}, "label": {"type": "string", "nullable": true}, "inputType": {"type": "string", "nullable": true}, "defaultValue": {"type": "string", "nullable": true}, "minValue": {"type": "integer", "format": "int32", "nullable": true}, "maxValue": {"type": "integer", "format": "int32", "nullable": true}, "maxLength": {"type": "integer", "format": "int32", "nullable": true}}, "additionalProperties": false}, "IdentityApi.UserExtensionType.V1.UserExtensionTypeCreatedResponse": {"type": "object", "properties": {"id": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.UserExtensionType.V1.UserExtensionTypeResponse": {"type": "object", "properties": {"id": {"type": "string", "nullable": true}, "code": {"type": "string", "nullable": true}, "dataType": {"type": "string", "nullable": true}, "order": {"type": "integer", "format": "int32"}, "hidden": {"type": "boolean"}, "htmlElement": {"type": "string", "description": "Html attributes", "nullable": true}, "label": {"type": "string", "nullable": true}, "inputType": {"type": "string", "nullable": true}, "defaultValue": {"type": "string", "nullable": true}, "minValue": {"type": "integer", "format": "int32", "nullable": true}, "maxValue": {"type": "integer", "format": "int32", "nullable": true}, "maxLength": {"type": "integer", "format": "int32", "nullable": true}, "createdBy": {"type": "string", "nullable": true}, "createdDateTime": {"type": "string", "nullable": true}, "lastModifiedBy": {"type": "string", "nullable": true}, "lastModifiedDateTime": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.UserExtensionType.V1.UserExtensionTypeUpdatedResponse": {"type": "object", "properties": {"id": {"type": "string", "nullable": true}}, "additionalProperties": false}, "Microsoft.AspNetCore.Mvc.NoContentResult": {"type": "object", "properties": {"statusCode": {"type": "integer", "format": "int32"}}, "additionalProperties": false}, "Microsoft.AspNetCore.Mvc.ProblemDetails": {"type": "object", "properties": {"type": {"type": "string", "nullable": true}, "title": {"type": "string", "nullable": true}, "status": {"type": "integer", "format": "int32", "nullable": true}, "detail": {"type": "string", "nullable": true}, "instance": {"type": "string", "nullable": true}}, "additionalProperties": {}}, "Microsoft.AspNetCore.Mvc.ValidationProblemDetails": {"type": "object", "properties": {"errors": {"type": "object", "additionalProperties": {"type": "array", "items": {"type": "string"}}, "nullable": true}, "type": {"type": "string", "nullable": true}, "title": {"type": "string", "nullable": true}, "status": {"type": "integer", "format": "int32", "nullable": true}, "detail": {"type": "string", "nullable": true}, "instance": {"type": "string", "nullable": true}}, "additionalProperties": {}}, "RegistrationApi.Registration.V1.ApprovalStatus": {"enum": ["Unknown", "Pending", "Approved", "Denied", "Failed", "Completed"], "type": "string"}, "RegistrationApi.Registration.V1.AzureSubscription": {"type": "object", "properties": {"subscriptionId": {"type": "string", "nullable": true}, "subscriptionStoragePath": {"type": "string", "nullable": true}, "subscriptionName": {"type": "string", "nullable": true}, "beneficiaryEmail": {"type": "string", "nullable": true}, "purchaserEmail": {"type": "string", "nullable": true}, "applicationIds": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}, "tenantId": {"type": "string", "nullable": true}, "isFreeTrial": {"type": "boolean"}}, "additionalProperties": false}, "RegistrationApi.Registration.V1.CreateTenantRegistrationRequest": {"type": "object", "properties": {"tenantTypes": {"type": "array", "items": {"$ref": "#/components/schemas/RegistrationApi.Registration.V1.TenantType"}, "nullable": true, "readOnly": true}, "registrationId": {"type": "string", "nullable": true}, "firstName": {"type": "string", "nullable": true}, "lastName": {"type": "string", "nullable": true}, "email": {"type": "string", "nullable": true}, "state": {"type": "string", "nullable": true}, "organizationIdentifier": {"type": "string", "nullable": true}, "organizationName": {"type": "string", "nullable": true}}, "additionalProperties": false}, "RegistrationApi.Registration.V1.DeleteTenantRegistrationRequest": {"type": "object", "properties": {"registrationId": {"type": "string", "nullable": true}, "reason": {"type": "string", "nullable": true}}, "additionalProperties": false}, "RegistrationApi.Registration.V1.DenyTenantRegistrationRequest": {"type": "object", "properties": {"registrationId": {"type": "string", "nullable": true}, "reason": {"type": "string", "nullable": true}}, "additionalProperties": false}, "RegistrationApi.Registration.V1.RegistrationListResponse": {"type": "object", "properties": {"registrationId": {"type": "string", "nullable": true}, "tenantTypes": {"type": "array", "items": {"$ref": "#/components/schemas/RegistrationApi.Registration.V1.TenantType"}, "nullable": true, "readOnly": true}, "firstName": {"type": "string", "nullable": true}, "lastName": {"type": "string", "nullable": true}, "email": {"type": "string", "nullable": true}, "organizationName": {"type": "string", "nullable": true}, "state": {"type": "string", "nullable": true}, "approvalStatus": {"$ref": "#/components/schemas/RegistrationApi.Registration.V1.ApprovalStatus"}, "submittedBy": {"$ref": "#/components/schemas/RegistrationApi.Registration.V1.SubmittedBy"}, "createdBy": {"type": "string", "nullable": true}, "createdDateTime": {"type": "string", "nullable": true}, "lastModifiedBy": {"type": "string", "nullable": true}, "lastModifiedDateTime": {"type": "string", "nullable": true}, "applicationIds": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}, "azureSubscriptionId": {"type": "string", "nullable": true}, "azureSubscriptionStoragePath": {"type": "string", "nullable": true}, "registrationSource": {"type": "string", "nullable": true}}, "additionalProperties": false}, "RegistrationApi.Registration.V1.RegistrationListResponsePaginatedItemsViewModel": {"type": "object", "properties": {"pageIndex": {"type": "integer", "format": "int32"}, "pageSize": {"type": "integer", "format": "int32"}, "count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/RegistrationApi.Registration.V1.RegistrationListResponse"}, "nullable": true}}, "additionalProperties": false}, "RegistrationApi.Registration.V1.RegistrationProfileResponse": {"type": "object", "properties": {"registrationId": {"type": "string", "nullable": true}, "tenantTypes": {"type": "array", "items": {"$ref": "#/components/schemas/RegistrationApi.Registration.V1.TenantType"}, "nullable": true, "readOnly": true}, "firstName": {"type": "string", "nullable": true}, "lastName": {"type": "string", "nullable": true}, "email": {"type": "string", "nullable": true}, "state": {"type": "string", "nullable": true}, "organizationIdentifier": {"type": "string", "nullable": true}, "organizationName": {"type": "string", "nullable": true}, "approvalStatus": {"$ref": "#/components/schemas/RegistrationApi.Registration.V1.ApprovalStatus"}, "submittedBy": {"$ref": "#/components/schemas/RegistrationApi.Registration.V1.SubmittedBy"}, "reasonDenied": {"type": "string", "nullable": true}, "createdBy": {"type": "string", "nullable": true}, "createdDateTime": {"type": "string", "nullable": true}, "lastModifiedBy": {"type": "string", "nullable": true}, "lastModifiedDateTime": {"type": "string", "nullable": true}, "applicationIds": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}, "azureSubscriptionId": {"type": "string", "nullable": true}, "azureSubscriptionStoragePath": {"type": "string", "nullable": true}, "registrationSource": {"type": "string", "nullable": true}}, "additionalProperties": false}, "RegistrationApi.Registration.V1.SubmittedBy": {"enum": ["Unknown", "User", "EdGraph"], "type": "string"}, "RegistrationApi.Registration.V1.TenantRegistrationCreatedResponse": {"type": "object", "properties": {"registrationId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "RegistrationApi.Registration.V1.TenantRegistrationUpdatedResponse": {"type": "object", "properties": {"registrationId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "RegistrationApi.Registration.V1.TenantType": {"enum": ["Unknown", "DataStandardGoverningBody", "EducationalServiceAgency", "ImplementationPartner", "IndependentSoftwareVendor", "Internal", "LocalEducationAgency", "ManagedServiceProvider", "StateEducationAgency"], "type": "string"}, "RegistrationApi.Registration.V1.UpdateTenantRegistrationRequest": {"type": "object", "properties": {"registrationId": {"type": "string", "nullable": true}, "tenantTypes": {"type": "array", "items": {"$ref": "#/components/schemas/RegistrationApi.Registration.V1.TenantType"}, "nullable": true, "readOnly": true}, "firstName": {"type": "string", "nullable": true}, "lastName": {"type": "string", "nullable": true}, "email": {"type": "string", "nullable": true}, "state": {"type": "string", "nullable": true}, "organizationIdentifier": {"type": "string", "nullable": true}, "organizationName": {"type": "string", "nullable": true}}, "additionalProperties": false}, "TenantApi.Partnership.V1.CreatePartnershipRequest": {"type": "object", "properties": {"partnerTenantId": {"type": "string", "nullable": true}, "partnershipType": {"type": "string", "nullable": true}, "relatedTenantsIds": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}, "partnershipSync": {"$ref": "#/components/schemas/TenantApi.Partnership.V1.PartnershipSyncDTO"}}, "additionalProperties": false}, "TenantApi.Partnership.V1.PaginatedItemsResponse": {"type": "object", "properties": {"pageIndex": {"type": "integer", "format": "int32"}, "pageSize": {"type": "integer", "format": "int32"}, "count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/TenantApi.Partnership.V1.PartnershipResponse"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "TenantApi.Partnership.V1.ParternshipTenantResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "tenantTypes": {"type": "array", "items": {"$ref": "#/components/schemas/TenantApi.Partnership.V1.TenantType"}, "nullable": true, "readOnly": true}, "organizationIdentifier": {"type": "string", "nullable": true}, "organizationName": {"type": "string", "nullable": true}}, "additionalProperties": false}, "TenantApi.Partnership.V1.PartnershipByIdResponse": {"type": "object", "properties": {"id": {"type": "string", "nullable": true}, "partnerTenantId": {"type": "string", "nullable": true}, "partnershipType": {"type": "string", "nullable": true}, "relatedTenantsIds": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}, "partnershipSync": {"$ref": "#/components/schemas/TenantApi.Partnership.V1.PartnershipSyncDTO"}, "createdDateTime": {"type": "string", "nullable": true}, "createdBy": {"type": "string", "nullable": true}, "lastModifiedDateTime": {"type": "string", "nullable": true}, "lastModifiedBy": {"type": "string", "nullable": true}}, "additionalProperties": false}, "TenantApi.Partnership.V1.PartnershipCreatedResponse": {"type": "object", "properties": {"id": {"type": "string", "nullable": true}}, "additionalProperties": false}, "TenantApi.Partnership.V1.PartnershipDeletedResponse": {"type": "object", "properties": {"id": {"type": "string", "nullable": true}}, "additionalProperties": false}, "TenantApi.Partnership.V1.PartnershipResponse": {"type": "object", "properties": {"id": {"type": "string", "nullable": true}, "partnerTenant": {"$ref": "#/components/schemas/TenantApi.Partnership.V1.ParternshipTenantResponse"}, "partnershipType": {"type": "string", "nullable": true}, "relatedTenants": {"type": "array", "items": {"$ref": "#/components/schemas/TenantApi.Partnership.V1.ParternshipTenantResponse"}, "nullable": true, "readOnly": true}, "partnershipSync": {"$ref": "#/components/schemas/TenantApi.Partnership.V1.PartnershipSyncDTO"}, "createdDateTime": {"type": "string", "nullable": true}, "createdBy": {"type": "string", "nullable": true}, "lastModifiedDateTime": {"type": "string", "nullable": true}, "lastModifiedBy": {"type": "string", "nullable": true}}, "additionalProperties": false}, "TenantApi.Partnership.V1.PartnershipSyncDTO": {"type": "object", "properties": {"enabled": {"type": "boolean"}, "type": {"$ref": "#/components/schemas/TenantApi.Partnership.V1.PartnershipSyncType"}}, "additionalProperties": false}, "TenantApi.Partnership.V1.PartnershipSyncType": {"enum": ["Unknown", "Inbound", "Outbound"], "type": "string"}, "TenantApi.Partnership.V1.PartnershipUpdatedResponse": {"type": "object", "properties": {"id": {"type": "string", "nullable": true}}, "additionalProperties": false}, "TenantApi.Partnership.V1.TenantType": {"enum": ["Unknown", "DataStandardGoverningBody", "EducationalServiceAgency", "ImplementationPartner", "IndependentSoftwareVendor", "Internal", "LocalEducationAgency", "ManagedServiceProvider", "StateEducationAgency"], "type": "string"}, "TenantApi.Partnership.V1.UpdatePartnershipRequest": {"type": "object", "properties": {"id": {"type": "string", "nullable": true}, "partnerTenantId": {"type": "string", "nullable": true}, "partnershipType": {"type": "string", "nullable": true}, "relatedTenantsIds": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}, "partnershipSync": {"$ref": "#/components/schemas/TenantApi.Partnership.V1.PartnershipSyncDTO"}}, "additionalProperties": false}, "TenantApi.Tenant.V1.ActivateSubscriptionRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "subscriptionId": {"type": "string", "nullable": true}, "applicationId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "TenantApi.Tenant.V1.AddBlacklistedDomainRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "domainName": {"type": "string", "nullable": true}}, "additionalProperties": false}, "TenantApi.Tenant.V1.BlackListedDomainResponse": {"type": "object", "properties": {"domainName": {"type": "string", "nullable": true}, "createdBy": {"type": "string", "nullable": true}, "createdDateTime": {"type": "string", "nullable": true}, "inherited": {"type": "boolean"}}, "additionalProperties": false}, "TenantApi.Tenant.V1.BlacklistedDomainAddedResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "domainName": {"type": "string", "nullable": true}}, "additionalProperties": false}, "TenantApi.Tenant.V1.BlacklistedDomainsListResponse": {"type": "object", "properties": {"data": {"type": "array", "items": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.BlackListedDomainResponse"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "TenantApi.Tenant.V1.CreateDomainRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "domainName": {"type": "string", "nullable": true}, "domainStatus": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.DomainStatus"}, "autoAssignUsers": {"type": "boolean"}}, "additionalProperties": false}, "TenantApi.Tenant.V1.CreateOrganizationRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "identifierType": {"type": "string", "nullable": true}, "identifierValue": {"type": "string", "nullable": true}, "shortNameOfInstitution": {"type": "string", "nullable": true}, "nameOfInstitution": {"type": "string", "nullable": true}, "discriminator": {"type": "string", "nullable": true}, "source": {"type": "string", "nullable": true}, "includeInJwt": {"type": "boolean"}}, "additionalProperties": false}, "TenantApi.Tenant.V1.CreateSubscriptionRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "subscriptionId": {"type": "string", "nullable": true}, "applicationId": {"type": "string", "nullable": true}, "startDateTime": {"type": "string", "nullable": true}, "endDateTime": {"type": "string", "nullable": true}, "gracePeriod": {"type": "integer", "format": "int32"}, "numberOfLicenses": {"type": "integer", "format": "int32"}, "assignedLicenses": {"type": "integer", "format": "int32"}, "licenseType": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.LicenseType"}, "subscriptionStatus": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.SubscriptionStatus"}, "autoAssign": {"type": "boolean"}}, "additionalProperties": false}, "TenantApi.Tenant.V1.CreateTenantRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "tenantTypes": {"type": "array", "items": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.TenantType"}, "nullable": true, "readOnly": true}, "organizationIdentifier": {"type": "string", "nullable": true}, "organizationName": {"type": "string", "nullable": true}, "state": {"type": "string", "nullable": true}, "isDemo": {"type": "boolean"}, "tenantStatus": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.TenantStatus"}, "domains": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}, "identityProviders": {"type": "array", "items": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.TenantIdentityProviders"}, "nullable": true, "readOnly": true}, "settings": {"type": "array", "items": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.TenantSetting"}, "nullable": true, "readOnly": true}, "additionalSettings": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.TenantAdditionalSetting"}}, "additionalProperties": false}, "TenantApi.Tenant.V1.DeactivateSubscriptionRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "subscriptionId": {"type": "string", "nullable": true}, "applicationId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "TenantApi.Tenant.V1.DeleteSubscriptionRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "subscriptionId": {"type": "string", "nullable": true}, "applicationId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "TenantApi.Tenant.V1.DeleteTenantRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "reasonDeleted": {"type": "string", "nullable": true}}, "additionalProperties": false}, "TenantApi.Tenant.V1.DomainCreatedResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "domainName": {"type": "string", "nullable": true}}, "additionalProperties": false}, "TenantApi.Tenant.V1.DomainListResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "domainName": {"type": "string", "nullable": true}, "domainStatus": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.DomainStatus"}, "autoAssignUsers": {"type": "boolean"}, "createdBy": {"type": "string", "nullable": true}, "createdDateTime": {"type": "string", "nullable": true}, "lastModifiedBy": {"type": "string", "nullable": true}, "lastModifiedDateTime": {"type": "string", "nullable": true}}, "additionalProperties": false}, "TenantApi.Tenant.V1.DomainProfileResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "domainName": {"type": "string", "nullable": true}, "domainStatus": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.DomainStatus"}, "autoAssignUsers": {"type": "boolean"}, "createdBy": {"type": "string", "nullable": true}, "createdDateTime": {"type": "string", "nullable": true}, "lastModifiedBy": {"type": "string", "nullable": true}, "lastModifiedDateTime": {"type": "string", "nullable": true}}, "additionalProperties": false}, "TenantApi.Tenant.V1.DomainStatus": {"enum": ["Unknown", "Unverified", "Verified", "Rejected", "Error"], "type": "string"}, "TenantApi.Tenant.V1.DomainUpdatedResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "oldDomainName": {"type": "string", "nullable": true}, "newDomainName": {"type": "string", "nullable": true}, "domainStatus": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.DomainStatus"}}, "additionalProperties": false}, "TenantApi.Tenant.V1.DomainVerifiedResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "domainName": {"type": "string", "nullable": true}, "domainStatus": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.DomainStatus"}}, "additionalProperties": false}, "TenantApi.Tenant.V1.EdFiAdminInstance": {"type": "object", "properties": {"id": {"type": "string", "description": "Details", "nullable": true}, "instanceName": {"type": "string", "nullable": true}, "useCustomId": {"type": "boolean"}, "customId": {"type": "string", "nullable": true}, "description": {"type": "string", "nullable": true}, "connectionName": {"type": "string", "nullable": true}, "selectedConnectionId": {"type": "string", "description": "Connection", "nullable": true}, "databases": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.InstanceDatabases"}, "password": {"type": "string", "description": "API Client", "nullable": true}, "apiClientKey": {"type": "string", "nullable": true}, "apiClientSecret": {"type": "string", "nullable": true}, "isApiClientSecretSecured": {"type": "boolean"}, "tenantId": {"type": "string", "description": "Metadata", "nullable": true}, "createdBy": {"type": "string", "nullable": true}, "createdDateTime": {"type": "string", "nullable": true}, "isDeleted": {"type": "boolean"}, "lastModifiedBy": {"type": "string", "nullable": true}, "lastModifiedDateTime": {"type": "string", "nullable": true}, "apiAuthUrl": {"type": "string", "description": "URLs", "nullable": true}, "apiResourcesUrls": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}, "apiCompositesUrls": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "TenantApi.Tenant.V1.GetEdFiAdminInstancesResponse": {"type": "object", "properties": {"pageIndex": {"type": "integer", "format": "int32"}, "pageSize": {"type": "integer", "format": "int32"}, "count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.EdFiAdminInstance"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "TenantApi.Tenant.V1.GetOrganizationsPaginatedResponse": {"type": "object", "properties": {"pageIndex": {"type": "integer", "format": "int32"}, "pageSize": {"type": "integer", "format": "int32"}, "count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.Organization"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "TenantApi.Tenant.V1.IdentityProviderId": {"enum": ["Local", "Aad", "Google", "Adfs", "Txedexchange", "Mspersonalv2"], "type": "string"}, "TenantApi.Tenant.V1.IdentityProviderStatus": {"enum": ["Unknown", "Active", "Inactive"], "type": "string"}, "TenantApi.Tenant.V1.InstanceDatabase": {"type": "object", "properties": {"selectedTierId": {"type": "string", "nullable": true}, "selectedTierName": {"type": "string", "nullable": true}, "status": {"type": "string", "nullable": true}, "jobs": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.InstanceDatabaseJobs"}}, "additionalProperties": false}, "TenantApi.Tenant.V1.InstanceDatabaseJobs": {"type": "object", "properties": {"createJobId": {"type": "string", "nullable": true}, "deleteJobId": {"type": "string", "nullable": true}, "resetDeleteJobId": {"type": "string", "nullable": true}, "resetCreateJobId": {"type": "string", "nullable": true}, "generateReportsJobId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "TenantApi.Tenant.V1.InstanceDatabases": {"type": "object", "properties": {"admin": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.InstanceDatabase"}, "security": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.InstanceDatabase"}, "ods": {"type": "array", "items": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.InstanceOdsDatabase"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "TenantApi.Tenant.V1.InstanceOdsDatabase": {"type": "object", "properties": {"selectedTierId": {"type": "string", "nullable": true}, "selectedTierName": {"type": "string", "nullable": true}, "status": {"type": "string", "nullable": true}, "jobs": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.InstanceDatabaseJobs"}, "year": {"type": "integer", "format": "int32"}, "odsBackupCode": {"type": "string", "nullable": true}, "odsBackupDescription": {"type": "string", "nullable": true}}, "additionalProperties": false}, "TenantApi.Tenant.V1.LicenseType": {"enum": ["Unknown", "Full", "Trial"], "type": "string"}, "TenantApi.Tenant.V1.Onboarding": {"type": "object", "properties": {"status": {"type": "string", "nullable": true}, "progressPercentage": {"type": "number", "format": "float"}, "totalSteps": {"type": "integer", "format": "int32"}, "lastCompletedStep": {"type": "integer", "format": "int32", "nullable": true}, "startedAt": {"type": "string", "nullable": true}, "completedAt": {"type": "string", "nullable": true}, "steps": {"type": "array", "items": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.OnboardingStep"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "TenantApi.Tenant.V1.OnboardingStep": {"type": "object", "properties": {"number": {"type": "integer", "format": "int32"}, "description": {"type": "string", "nullable": true}, "status": {"type": "string", "nullable": true}, "startedAt": {"type": "string", "nullable": true}, "completedAt": {"type": "string", "nullable": true}, "details": {"type": "string", "nullable": true}}, "additionalProperties": false}, "TenantApi.Tenant.V1.Organization": {"type": "object", "properties": {"identifierType": {"type": "string", "nullable": true}, "identifierValue": {"type": "string", "nullable": true}, "discriminator": {"type": "string", "nullable": true}, "source": {"type": "string", "nullable": true}, "shortNameOfInstitution": {"type": "string", "nullable": true}, "nameOfInstitution": {"type": "string", "nullable": true}, "includeInJwt": {"type": "boolean"}}, "additionalProperties": false}, "TenantApi.Tenant.V1.OrganizationCreatedResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "identifierValue": {"type": "string", "nullable": true}}, "additionalProperties": false}, "TenantApi.Tenant.V1.OrganizationDeletedResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "identifierValue": {"type": "string", "nullable": true}}, "additionalProperties": false}, "TenantApi.Tenant.V1.OrganizationUpdatedResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "identifierValue": {"type": "string", "nullable": true}}, "additionalProperties": false}, "TenantApi.Tenant.V1.OrganizationsSyncedResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "TenantApi.Tenant.V1.RejectSubscriptionRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "subscriptionId": {"type": "string", "nullable": true}, "applicationId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "TenantApi.Tenant.V1.SubscriptionActivatedResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "subscriptionId": {"type": "string", "nullable": true}, "applicationId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "TenantApi.Tenant.V1.SubscriptionCreatedResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "subscriptionId": {"type": "string", "nullable": true}, "applicationId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "TenantApi.Tenant.V1.SubscriptionDeactivatedResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "subscriptionId": {"type": "string", "nullable": true}, "applicationId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "TenantApi.Tenant.V1.SubscriptionListResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "subscriptionId": {"type": "string", "nullable": true}, "applicationId": {"type": "string", "nullable": true}, "startDateTime": {"type": "string", "nullable": true}, "endDateTime": {"type": "string", "nullable": true}, "actualEndDateTime": {"type": "string", "nullable": true}, "gracePeriod": {"type": "integer", "format": "int32"}, "numberOfLicenses": {"type": "integer", "format": "int32"}, "assignedLicenses": {"type": "integer", "format": "int32"}, "maxAssignedLicenses": {"type": "integer", "format": "int32"}, "lastMaxAssignedLicensesDateTime": {"type": "string", "nullable": true}, "licenseType": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.LicenseType"}, "subscriptionStatus": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.SubscriptionStatus"}, "autoAssign": {"type": "boolean"}, "createdBy": {"type": "string", "nullable": true}, "createdDateTime": {"type": "string", "nullable": true}, "lastModifiedBy": {"type": "string", "nullable": true}, "lastModifiedDateTime": {"type": "string", "nullable": true}, "deletedAt": {"type": "string", "nullable": true}}, "additionalProperties": false}, "TenantApi.Tenant.V1.SubscriptionListResponsePaginatedItemsViewModel": {"type": "object", "properties": {"pageIndex": {"type": "integer", "format": "int32"}, "pageSize": {"type": "integer", "format": "int32"}, "count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.SubscriptionListResponse"}, "nullable": true}}, "additionalProperties": false}, "TenantApi.Tenant.V1.SubscriptionProfileResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "subscriptionId": {"type": "string", "nullable": true}, "applicationId": {"type": "string", "nullable": true}, "startDateTime": {"type": "string", "nullable": true}, "endDateTime": {"type": "string", "nullable": true}, "actualEndDateTime": {"type": "string", "nullable": true}, "gracePeriod": {"type": "integer", "format": "int32"}, "numberOfLicenses": {"type": "integer", "format": "int32"}, "assignedLicenses": {"type": "integer", "format": "int32"}, "maxAssignedLicenses": {"type": "integer", "format": "int32"}, "lastMaxAssignedLicensesDateTime": {"type": "string", "nullable": true}, "licenseType": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.LicenseType"}, "subscriptionStatus": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.SubscriptionStatus"}, "autoAssign": {"type": "boolean"}, "createdBy": {"type": "string", "nullable": true}, "createdDateTime": {"type": "string", "nullable": true}, "lastModifiedBy": {"type": "string", "nullable": true}, "lastModifiedDateTime": {"type": "string", "nullable": true}, "deletedAt": {"type": "string", "nullable": true}}, "additionalProperties": false}, "TenantApi.Tenant.V1.SubscriptionRejectedResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "subscriptionId": {"type": "string", "nullable": true}, "applicationId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "TenantApi.Tenant.V1.SubscriptionStatus": {"enum": ["Unknown", "Active", "Inactive", "Pending", "Rejected"], "type": "string"}, "TenantApi.Tenant.V1.SubscriptionUpdatedResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "subscriptionId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "TenantApi.Tenant.V1.SyncOrganizationsRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "instanceId": {"type": "string", "nullable": true}, "year": {"type": "integer", "format": "int32"}}, "additionalProperties": false}, "TenantApi.Tenant.V1.TenantAdditionalSetting": {"type": "object", "properties": {"showLocalLoginOptionToTenantAdmins": {"type": "boolean"}, "gracePeriodMfaExpiryDate": {"type": "string", "nullable": true}}, "additionalProperties": false}, "TenantApi.Tenant.V1.TenantCreatedResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "TenantApi.Tenant.V1.TenantIdentityProviders": {"type": "object", "properties": {"identityProviderId": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.IdentityProviderId"}, "identityProviderStatus": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.IdentityProviderStatus"}, "enforceMfa": {"type": "string", "nullable": true}, "enableMfa": {"type": "boolean"}}, "additionalProperties": false}, "TenantApi.Tenant.V1.TenantListResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "tenantTypes": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}, "organizationIdentifier": {"type": "string", "nullable": true}, "organizationName": {"type": "string", "nullable": true}, "state": {"type": "string", "nullable": true}, "tenantStatus": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.TenantStatus"}, "isDemo": {"type": "boolean"}, "subscriptionsMigrated": {"type": "boolean"}, "subscriptions": {"type": "array", "items": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.SubscriptionListResponse"}, "nullable": true, "readOnly": true}, "domains": {"type": "array", "items": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.DomainListResponse"}, "nullable": true, "readOnly": true}, "createdBy": {"type": "string", "nullable": true}, "createdDateTime": {"type": "string", "nullable": true}, "lastModifiedBy": {"type": "string", "nullable": true}, "lastModifiedDateTime": {"type": "string", "nullable": true}, "identityProviders": {"type": "array", "items": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.TenantIdentityProviders"}, "nullable": true, "readOnly": true}, "onboarding": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.Onboarding"}, "organizationIdentifierHash": {"type": "string", "nullable": true}, "settings": {"type": "array", "items": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.TenantSetting"}, "nullable": true, "readOnly": true}, "additionalSettings": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.TenantAdditionalSetting"}}, "additionalProperties": false}, "TenantApi.Tenant.V1.TenantListResponsePaginatedItemsViewModel": {"type": "object", "properties": {"pageIndex": {"type": "integer", "format": "int32"}, "pageSize": {"type": "integer", "format": "int32"}, "count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.TenantListResponse"}, "nullable": true}}, "additionalProperties": false}, "TenantApi.Tenant.V1.TenantProfileResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "tenantTypes": {"type": "array", "items": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.TenantType"}, "nullable": true, "readOnly": true}, "organizationIdentifier": {"type": "string", "nullable": true}, "organizationName": {"type": "string", "nullable": true}, "state": {"type": "string", "nullable": true}, "tenantStatus": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.TenantStatus"}, "isDemo": {"type": "boolean"}, "subscriptionsMigrated": {"type": "boolean"}, "subscriptions": {"type": "array", "items": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.SubscriptionProfileResponse"}, "nullable": true, "readOnly": true}, "domains": {"type": "array", "items": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.DomainProfileResponse"}, "nullable": true, "readOnly": true}, "createdBy": {"type": "string", "nullable": true}, "createdDateTime": {"type": "string", "nullable": true}, "lastModifiedBy": {"type": "string", "nullable": true}, "lastModifiedDateTime": {"type": "string", "nullable": true}, "identityProviders": {"type": "array", "items": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.TenantIdentityProviders"}, "nullable": true, "readOnly": true}, "onboarding": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.Onboarding"}, "organizations": {"type": "array", "items": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.Organization"}, "nullable": true, "readOnly": true}, "organizationIdentifierHash": {"type": "string", "nullable": true}, "settings": {"type": "array", "items": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.TenantSetting"}, "nullable": true, "readOnly": true}, "additionalSettings": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.TenantAdditionalSetting"}}, "additionalProperties": false}, "TenantApi.Tenant.V1.TenantSetting": {"type": "object", "properties": {"code": {"type": "string", "nullable": true}, "value": {"type": "string", "nullable": true}, "dataType": {"type": "string", "nullable": true}}, "additionalProperties": false}, "TenantApi.Tenant.V1.TenantSettingTypesListResponse": {"type": "object", "properties": {"id": {"type": "string", "nullable": true}, "tenantId": {"type": "string", "nullable": true}, "code": {"type": "string", "nullable": true}, "dataType": {"type": "string", "nullable": true}, "order": {"type": "integer", "format": "int32", "nullable": true}, "hidden": {"type": "boolean"}, "htmlElement": {"type": "string", "nullable": true}, "label": {"type": "string", "nullable": true}, "inputType": {"type": "string", "nullable": true}, "defaultValue": {"type": "string", "nullable": true}, "minValue": {"type": "integer", "format": "int32", "nullable": true}, "maxValue": {"type": "integer", "format": "int32", "nullable": true}, "maxLength": {"type": "integer", "format": "int32", "nullable": true}, "attributes": {"type": "array", "items": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.TenantSettingsTypeAttribute"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "TenantApi.Tenant.V1.TenantSettingTypesListResponsePaginatedItemsViewModel": {"type": "object", "properties": {"pageIndex": {"type": "integer", "format": "int32"}, "pageSize": {"type": "integer", "format": "int32"}, "count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.TenantSettingTypesListResponse"}, "nullable": true}}, "additionalProperties": false}, "TenantApi.Tenant.V1.TenantSettingsTypeAttribute": {"type": "object", "properties": {"key": {"type": "string", "nullable": true}, "value": {"type": "string", "nullable": true}}, "additionalProperties": false}, "TenantApi.Tenant.V1.TenantStatus": {"enum": ["Unknown", "Active", "Inactive"], "type": "string"}, "TenantApi.Tenant.V1.TenantType": {"enum": ["Unknown", "DataStandardGoverningBody", "EducationalServiceAgency", "ImplementationPartner", "IndependentSoftwareVendor", "Internal", "LocalEducationAgency", "ManagedServiceProvider", "StateEducationAgency"], "type": "string"}, "TenantApi.Tenant.V1.TenantUpdatedResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "TenantApi.Tenant.V1.UpdateDomainRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "oldDomainName": {"type": "string", "nullable": true}, "newDomainName": {"type": "string", "nullable": true}, "domainStatus": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.DomainStatus"}, "autoAssignUsers": {"type": "boolean"}}, "additionalProperties": false}, "TenantApi.Tenant.V1.UpdateOrganizationRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "identifierValue": {"type": "string", "nullable": true}, "discriminator": {"type": "string", "nullable": true}, "source": {"type": "string", "nullable": true}, "shortNameOfInstitution": {"type": "string", "nullable": true}, "nameOfInstitution": {"type": "string", "nullable": true}, "includeInJwt": {"type": "boolean"}}, "additionalProperties": false}, "TenantApi.Tenant.V1.UpdateSubscriptionRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "subscriptionId": {"type": "string", "nullable": true}, "startDateTime": {"type": "string", "nullable": true}, "endDateTime": {"type": "string", "nullable": true}, "gracePeriod": {"type": "integer", "format": "int32"}, "numberOfLicenses": {"type": "integer", "format": "int32"}, "assignedLicenses": {"type": "integer", "format": "int32"}, "licenseType": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.LicenseType"}, "autoAssign": {"type": "boolean", "description": "SubscriptionStatus SubscriptionStatus = 10;"}}, "additionalProperties": false}, "TenantApi.Tenant.V1.VerifyDomainRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "domainName": {"type": "string", "nullable": true}}, "additionalProperties": false}, "TenantApi.Webhook.V1.CreateWebhookRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "name": {"type": "string", "nullable": true}, "url": {"type": "string", "nullable": true}, "secretHeader": {"type": "string", "nullable": true}, "secretValue": {"type": "string", "nullable": true}, "contentType": {"type": "string", "nullable": true}, "eventSubscriptions": {"type": "array", "items": {"$ref": "#/components/schemas/TenantApi.Webhook.V1.WebhookSubscriberResponse"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "TenantApi.Webhook.V1.PaginatedItemsResponse": {"type": "object", "properties": {"pageIndex": {"type": "integer", "format": "int32"}, "pageSize": {"type": "integer", "format": "int32"}, "count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/TenantApi.Webhook.V1.WebhookResponse"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "TenantApi.Webhook.V1.UpdateWebhookRequest": {"type": "object", "properties": {"id": {"type": "string", "nullable": true}, "tenantId": {"type": "string", "nullable": true}, "name": {"type": "string", "nullable": true}, "url": {"type": "string", "nullable": true}, "secretHeader": {"type": "string", "nullable": true}, "secretValue": {"type": "string", "nullable": true}, "contentType": {"type": "string", "nullable": true}, "status": {"type": "string", "nullable": true}, "eventSubscriptions": {"type": "array", "items": {"$ref": "#/components/schemas/TenantApi.Webhook.V1.WebhookSubscriberResponse"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "TenantApi.Webhook.V1.WebhookEventsResponse": {"type": "object", "properties": {"eventSubscriptions": {"type": "array", "items": {"$ref": "#/components/schemas/TenantApi.Webhook.V1.WebhookSubscriberResponse"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "TenantApi.Webhook.V1.WebhookIdResponse": {"type": "object", "properties": {"id": {"type": "string", "nullable": true}}, "additionalProperties": false}, "TenantApi.Webhook.V1.WebhookResponse": {"type": "object", "properties": {"id": {"type": "string", "nullable": true}, "tenantId": {"type": "string", "nullable": true}, "createdAt": {"type": "string", "nullable": true}, "createdBy": {"type": "string", "nullable": true}, "updatedAt": {"type": "string", "nullable": true}, "updatedBy": {"type": "string", "nullable": true}, "isDeleted": {"type": "boolean"}, "name": {"type": "string", "nullable": true}, "url": {"type": "string", "nullable": true}, "secretHeader": {"type": "string", "nullable": true}, "secretValue": {"type": "string", "nullable": true}, "contentType": {"type": "string", "nullable": true}, "status": {"type": "string", "nullable": true}, "eventSubscriptions": {"type": "array", "items": {"$ref": "#/components/schemas/TenantApi.Webhook.V1.WebhookSubscriberResponse"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "TenantApi.Webhook.V1.WebhookSubscriberResponse": {"type": "object", "properties": {"eventName": {"type": "string", "nullable": true}, "eventVersion": {"type": "string", "nullable": true}, "eventSchema": {"type": "string", "nullable": true}, "groupName": {"type": "string", "nullable": true}, "scope": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}}, "additionalProperties": false, "description": "Webhook Subscribers"}, "ValidationsApi.Migrations.V1.MigrateUpRequest": {"type": "object", "properties": {"migrationCode": {"type": "string", "nullable": true}, "continueOnErrors": {"type": "boolean"}}, "additionalProperties": false}}, "securitySchemes": {"oauth2": {"type": "oauth2", "description": "Use bearer token generated from an OpenId server", "flows": {"clientCredentials": {"tokenUrl": "https://login.dev.txedexchange.net/connect/token", "scopes": {"https://api.txedexchange.net/auth/management": "EdGraph Platform - Management Api"}}}}}}, "security": [{"oauth2": ["https://api.txedexchange.net/auth/management"]}]}