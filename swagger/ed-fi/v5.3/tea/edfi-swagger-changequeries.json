{
  "swagger": "2.0",
  "info": {
    "description": "The Ed-Fi ODS / API enables applications to read and write education data stored in an Ed-Fi ODS through a secure REST interface. \n***\n > *Note: Consumers of ODS / API information should sanitize all data for display and storage. The ODS / API provides reasonable safeguards against cross-site scripting attacks and other malicious content, but the platform does not and cannot guarantee that the data it contains is free of all potentially harmful content.* \n***\n",
    "title": "Ed-Fi API (SaaS - Core + TPDM Light + TEA Extension)",
    "version": "v5.3"
  },
  "host": "edfi-api-linux-saas-v5-2-core.edgraph.svc.cluster.local",
  "basePath": "/edfi/v5.3/saas/tea",
  "schemes": [
    "http"
  ],
  "securityDefinitions": {
    "oauth2_client_credentials": {
      "type": "oauth2",
      "description": "Ed-Fi ODS/API OAuth 2.0 Client Credentials Grant Type authorization",
      "flow": "application",
      "tokenUrl": "http://localhost:54746/oauth/token",
      "scopes": {}
    }
  },
  "paths": {
    "/changequeries/v1/{instanceId}/{schoolYear}/availableChangeVersions": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "availableChangeVersions"
        ],
        "operationId": "getAvailableChangeVersions",
        "summary": "Gets the change versions for the earliest (oldest) and most recent (newest) changes available.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "The resource was successfully retrieved.",
            "schema": {
              "required": [
                "OldestChangeVersion",
                "NewestChangeVersion"
              ],
              "properties": {
                "OldestChangeVersion": {
                  "type": "integer",
                  "format": "int64"
                },
                "NewestChangeVersion": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized.  The request requires authentication.  The OAuth bearer token was either not provided or is invalid.  The operation may succeed once authenication has been successfully completed."
          },
          "403": {
            "description": "Forbidden.  The request cannot be completed in the current authorization context.  Contact your administrator if you believe this operation should be allowed."
          },
          "410": {
            "description": "Gone.  An attempt to connect to the database for the snapshot specified by the Snapshot-Identifier header was unsuccessful (indicating the snapshot may have been removed)."
          },
          "500": {
            "description": "An unhandled error occurred on the server. See the response body for details."
          }
        },
        "security": [
          {
            "oauth2_client_credentials": []
          }
        ]
      }
    },
    "/changequeries/v1/{instanceId}/{schoolYear}/snapshots": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "snapshots"
        ],
        "operationId": "getSnapshots",
        "summary": "Gets the available static snapshots for enabling client-side processing that is isolated from changing data.",
        "parameters": [
          {
            "description": "Indicates how many items should be skipped before returning results.",
            "in": "query",
            "name": "offset",
            "required": false,
            "default": 0,
            "format": "int32",
            "type": "integer"
          },
          {
            "description": "Indicates the maximum number of items that should be returned in the results.",
            "in": "query",
            "name": "limit",
            "required": false,
            "default": 25,
            "format": "int32",
            "maximum": 500,
            "minimum": 0,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "The resource was successfully retrieved.",
            "schema": {
              "items": {
                "properties": {
                  "id": {
                    "description": "A resource identifier that uniquely identifies the resource.",
                    "type": "string"
                  },
                  "snapshotIdentifier": {
                    "description": "The unique identifier of the snapshot to be passed in the 'Snapshot-Identifier' custom header by the API client on subsequent GET requests.",
                    "x-Ed-Fi-isIdentity": true,
                    "maxLength": 32,
                    "type": "string"
                  },
                  "snapshotDateTime": {
                    "description": "The date and time the snapshot was created.",
                    "format": "date-time",
                    "type": "string"
                  }
                },
                "required": [
                  "snapshotIdentifier",
                  "snapshotDateTime"
                ],
                "type": "object"
              },
              "type": "array"
            }
          },
          "401": {
            "description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed."
          },
          "500": {
            "description": "An unhandled error occurred on the server. See the response body for details."
          }
        },
        "security": [
          {
            "oauth2_client_credentials": []
          }
        ]
      }
    },
    "/changequeries/v1/{instanceId}/{schoolYear}/snapshots/{id}": {
      "get": {
        "description": "This GET operation retrieves a resource by the specified resource identifier.",
        "operationId": "getSnapshotsById",
        "parameters": [
          {
            "description": "A resource identifier that uniquely identifies the resource.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The requested resource was successfully retrieved.",
            "schema": {
              "properties": {
                "id": {
                  "description": "A resource identifier that uniquely identifies the resource.",
                  "type": "string"
                },
                "snapshotIdentifier": {
                  "description": "The unique identifier of the snapshot to be passed in the 'Snapshot-Identifier' custom header by the API client on subsequent GET requests.",
                  "x-Ed-Fi-isIdentity": true,
                  "maxLength": 32,
                  "type": "string"
                },
                "snapshotDateTime": {
                  "description": "The date and time the snapshot was created.",
                  "format": "date-time",
                  "type": "string"
                }
              },
              "required": [
                "snapshotIdentifier",
                "snapshotDateTime"
              ],
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed."
          },
          "404": {
            "description": "Not Found. The resource could not be found."
          },
          "500": {
            "description": "An unhandled error occurred on the server. See the response body for details."
          }
        },
        "summary": "Retrieves a specific resource using the resource's identifier (using the \"Get By Id\" pattern).",
        "tags": [
          "snapshots"
        ],
        "security": [
          {
            "oauth2_client_credentials": []
          }
        ]
      }
    }
  }
}