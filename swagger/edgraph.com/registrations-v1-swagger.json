{"openapi": "3.0.1", "info": {"title": "Registrations Api", "description": "Registrations Api - v1.0", "version": "v1.0"}, "servers": [{"url": "https://api.edgraph.com/tenant"}], "paths": {"/registrations/azure/mona": {"post": {"tags": ["Registrations - Azure Marketplace"], "summary": "Submits a tenant's registration request received through Azure [M]arketplace [On]boarding [A]ccelerator (MONA)", "operationId": "SubmitTenantRegistrationAzureMonaAsync", "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/RegistrationApi.Registration.V2.SubmitTenantRegistrationRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/RegistrationApi.Registration.V2.SubmitTenantRegistrationRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/RegistrationApi.Registration.V2.SubmitTenantRegistrationRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/RegistrationApi.Registration.V2.SubmitTenantRegistrationRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"type": "string"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/registrations/{registrationId}": {"get": {"tags": ["Registrations"], "summary": "Gets the approval status of a registration", "operationId": "GetRegistrationApprovalStatusAsync", "parameters": [{"name": "registrationId", "in": "path", "required": true, "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/RegistrationApi.Registration.V2.ApprovalStatus"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/registrations": {"post": {"tags": ["Registrations"], "summary": "Submits a tenant's registration request", "operationId": "SubmitTenantRegistrationAsync", "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/RegistrationApi.Registration.V2.SubmitTenantRegistrationRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/RegistrationApi.Registration.V2.SubmitTenantRegistrationRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/RegistrationApi.Registration.V2.SubmitTenantRegistrationRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/RegistrationApi.Registration.V2.SubmitTenantRegistrationRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"type": "string"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}}, "components": {"schemas": {"EdGraph.Common.Errors.Core.ProblemDetails": {"type": "object", "properties": {"type": {"type": "string", "nullable": true}, "status": {"type": "integer", "format": "int32"}, "title": {"type": "string", "nullable": true}, "details": {"type": "string", "nullable": true}, "instance": {"type": "string", "nullable": true}, "extensions": {"type": "object", "additionalProperties": {"nullable": true}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "Microsoft.AspNetCore.Mvc.ValidationProblemDetails": {"type": "object", "properties": {"errors": {"type": "object", "additionalProperties": {"type": "array", "items": {"type": "string"}}, "nullable": true}, "type": {"type": "string", "nullable": true}, "title": {"type": "string", "nullable": true}, "status": {"type": "integer", "format": "int32", "nullable": true}, "detail": {"type": "string", "nullable": true}, "instance": {"type": "string", "nullable": true}}, "additionalProperties": {}}, "RegistrationApi.Registration.V2.ApprovalStatus": {"enum": ["Unknown", "Pending", "Approved", "Denied", "Failed", "Completed"], "type": "string"}, "RegistrationApi.Registration.V2.SubmitTenantRegistrationRequest": {"type": "object", "properties": {"tenantTypes": {"type": "array", "items": {"$ref": "#/components/schemas/RegistrationApi.Registration.V2.TenantType"}, "nullable": true, "readOnly": true}, "firstName": {"type": "string", "nullable": true}, "lastName": {"type": "string", "nullable": true}, "email": {"type": "string", "nullable": true}, "state": {"type": "string", "nullable": true}, "organizationIdentifier": {"type": "string", "nullable": true}, "organizationName": {"type": "string", "nullable": true}, "password": {"type": "string", "nullable": true}, "applicationIds": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}, "azureSubscriptionId": {"type": "string", "nullable": true}, "azureSubscriptionStoragePath": {"type": "string", "nullable": true}}, "additionalProperties": false}, "RegistrationApi.Registration.V2.TenantType": {"enum": ["Unknown", "DataStandardGoverningBody", "EducationalServiceAgency", "ImplementationPartner", "IndependentSoftwareVendor", "Internal", "LocalEducationAgency", "ManagedServiceProvider", "StateEducationAgency"], "type": "string"}}, "securitySchemes": {"oauth2": {"type": "oauth2", "description": "Use bearer token generated from an OpenId server", "flows": {"clientCredentials": {"tokenUrl": "https://login.edgraph.com/connect/token", "scopes": {"https://api.edgraph.com/auth/tenant": "EdGraph Platform - Tenant Api"}}}}}}, "security": [{"oauth2": ["https://api.edgraph.com/auth/tenant"]}]}