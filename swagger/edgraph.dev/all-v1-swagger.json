{"openapi": "3.0.1", "info": {"title": "All Api", "description": "All Api- v1.0", "version": "v1.0"}, "servers": [{"url": "https://api.edgraph.dev/tenant"}], "paths": {"/tenants/{tenantId}/apiclients/{clientId}/regeneratesecret": {"put": {"tags": ["API Clients"], "summary": "Regenerates an OpenId API Client's secret", "operationId": "RegenerateTenantApiClientSecretAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "clientId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.ApiClient.V1.RegenerateApiClientSecretRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.ApiClient.V1.RegenerateApiClientSecretRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.ApiClient.V1.RegenerateApiClientSecretRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.ApiClient.V1.RegenerateApiClientSecretRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.ApiClient.V1.ApiClientSecretRegeneratedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/apiclients/{clientId}": {"delete": {"tags": ["API Clients"], "summary": "Deletes an OpenId API Client", "operationId": "DeleteTenantApiClientAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "clientId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "204": {"description": "The resource was successfully deleted."}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "get": {"tags": ["API Clients"], "summary": "Retrieves an OpenId API Client", "operationId": "GetTenantApiClientByIdAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "clientId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.ApiClient.V1.ApiClientProfileResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}, "put": {"tags": ["API Clients"], "summary": "Updates an OpenId API Client", "operationId": "UpdateTenantApiClientAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "clientId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.ApiClient.V1.UpdateApiClientRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.ApiClient.V1.UpdateApiClientRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.ApiClient.V1.UpdateApiClientRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.ApiClient.V1.UpdateApiClientRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.ApiClient.V1.ApiClientUpdatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/apiclients": {"get": {"tags": ["API Clients"], "summary": "Retrieves a list of OpenId API Clients associated to this tenant", "operationId": "GetAllTenantApiClientsAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.ApiClient.V1.ApiClientPaginatedItemsResponsePaginatedItemsViewModel"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "post": {"tags": ["API Clients"], "summary": "Creates a new OpenId API Client", "operationId": "CreateTenantApiClientAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.ApiClient.V1.CreateApiClientRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.ApiClient.V1.CreateApiClientRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.ApiClient.V1.CreateApiClientRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.ApiClient.V1.CreateApiClientRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "201": {"description": "The resource was created. The location of the resource is available in the Location header of the response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.ApiClient.V1.ApiClientCreatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/applicationtiles": {"get": {"tags": ["Application Tiles"], "summary": "Retrieves a list of applications licensed to the user that is currently logged in the context of this tenant", "operationId": "GetTenantApplicationTilesAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 100}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string", "default": "applicationName ASC"}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Platform.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.ApplicationTilesResponseWithUserApplicationLicense"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/applications/{applicationId}": {"get": {"tags": ["Applications"], "summary": "Retrieves an application", "operationId": "GetTenantApplicationProfileByIdAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "applicationId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ApplicationApi.Application.V2.ApplicationProfileResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/applications": {"get": {"tags": ["Applications"], "summary": "Retrieves a list of applications associated to this tenant", "operationId": "GetTenantApplicationsAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string"}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ApplicationApi.Application.V2.ApplicationListResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/analytics/capacities/all": {"get": {"tags": ["Capacities"], "operationId": "GetAllAnalyticsPowerBiCapacities", "parameters": [{"name": "tenantId", "in": "path", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"200": {"description": "Success", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Workspace.V1.CapacityResponse"}}}}, "404": {"description": "Not Found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "400": {"description": "Bad Request", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "403": {"description": "Forbidden", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "500": {"description": "Server Error"}}}}, "/tenants/{tenantId}/analytics/capacities/assign/my/workspace": {"post": {"tags": ["Capacities"], "operationId": "AssignMyAnalyticsPowerBiWorkspaceToGroup", "parameters": [{"name": "tenantId", "in": "path", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Workspace.V1.AssignCapacityRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Workspace.V1.AssignCapacityRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Workspace.V1.AssignCapacityRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Workspace.V1.AssignCapacityRequest"}}}}, "responses": {"200": {"description": "Success"}, "404": {"description": "Not Found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "400": {"description": "Bad Request", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "403": {"description": "Forbidden", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "500": {"description": "Server Error"}}}}, "/tenants/{tenantId}/analytics/capacities/assign": {"post": {"tags": ["Capacities"], "operationId": "AssignAnalyticsPowerBiWorkspaceToGroup", "parameters": [{"name": "tenantId", "in": "path", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Workspace.V1.AssignCapacityRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Workspace.V1.AssignCapacityRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Workspace.V1.AssignCapacityRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Workspace.V1.AssignCapacityRequest"}}}}, "responses": {"200": {"description": "Success"}, "404": {"description": "Not Found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "400": {"description": "Bad Request", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "403": {"description": "Forbidden", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "500": {"description": "Server Error"}}}}, "/tenants/{tenantId}/analytics/configurations/{configurationId}/delete": {"delete": {"tags": ["Configurations"], "operationId": "DeleteAnalyticsConfigurationAsync", "parameters": [{"name": "tenantId", "in": "path", "required": true, "schema": {"type": "string"}}, {"name": "configurationId", "in": "path", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Workspace.V1.AnalyticsConfiguration"}}, "application/json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Workspace.V1.AnalyticsConfiguration"}}, "text/json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Workspace.V1.AnalyticsConfiguration"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Workspace.V1.AnalyticsConfiguration"}}}}, "responses": {"200": {"description": "Success"}, "404": {"description": "Not Found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "400": {"description": "Bad Request", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "403": {"description": "Forbidden", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "500": {"description": "Server Error"}}}}, "/tenants/{tenantId}/analytics/configurations/{configurationId}/update/azure": {"patch": {"tags": ["Configurations"], "operationId": "UpdateAnalyticsAzureAdConfigurationAsync", "parameters": [{"name": "tenantId", "in": "path", "required": true, "schema": {"type": "string"}}, {"name": "configurationId", "in": "path", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Workspace.V1.AnalyticsAzureAd"}}, "application/json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Workspace.V1.AnalyticsAzureAd"}}, "text/json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Workspace.V1.AnalyticsAzureAd"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Workspace.V1.AnalyticsAzureAd"}}}}, "responses": {"200": {"description": "Success", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Workspace.V1.ConfigurationResponse"}}}}, "404": {"description": "Not Found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "400": {"description": "Bad Request", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "403": {"description": "Forbidden", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "500": {"description": "Server Error"}}}}, "/tenants/{tenantId}/analytics/configurations/{configurationId}/update/powerbi": {"patch": {"tags": ["Configurations"], "operationId": "UpdateAnalyticsPowerBiConfigurationAsync", "parameters": [{"name": "tenantId", "in": "path", "required": true, "schema": {"type": "string"}}, {"name": "configurationId", "in": "path", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Workspace.V1.AnalyticsPowerBi"}}, "application/json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Workspace.V1.AnalyticsPowerBi"}}, "text/json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Workspace.V1.AnalyticsPowerBi"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Workspace.V1.AnalyticsPowerBi"}}}}, "responses": {"200": {"description": "Success", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Workspace.V1.ConfigurationResponse"}}}}, "404": {"description": "Not Found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "400": {"description": "Bad Request", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "403": {"description": "Forbidden", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "500": {"description": "Server Error"}}}}, "/tenants/{tenantId}/analytics/configurations/{configurationId}/update": {"put": {"tags": ["Configurations"], "operationId": "UpdateAnalyticsConfigurationAsync", "parameters": [{"name": "tenantId", "in": "path", "required": true, "schema": {"type": "string"}}, {"name": "configurationId", "in": "path", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Workspace.V1.AnalyticsConfiguration"}}, "application/json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Workspace.V1.AnalyticsConfiguration"}}, "text/json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Workspace.V1.AnalyticsConfiguration"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Workspace.V1.AnalyticsConfiguration"}}}}, "responses": {"200": {"description": "Success", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Workspace.V1.ConfigurationResponse"}}}}, "404": {"description": "Not Found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "400": {"description": "Bad Request", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "403": {"description": "Forbidden", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "500": {"description": "Server Error"}}}}, "/tenants/{tenantId}/analytics/configurations/{configurationId}": {"get": {"tags": ["Configurations"], "operationId": "GetAnalyticsConfigurationAsync", "parameters": [{"name": "tenantId", "in": "path", "required": true, "schema": {"type": "string"}}, {"name": "workspaceName", "in": "path", "required": true, "schema": {"type": "string"}}, {"name": "configurationId", "in": "path", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"200": {"description": "Success", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Workspace.V1.AnalyticsAzureAd"}}}}, "404": {"description": "Not Found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "400": {"description": "Bad Request", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "403": {"description": "Forbidden", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "500": {"description": "Server Error"}}}}, "/tenants/{tenantId}/analytics/configurations/all": {"get": {"tags": ["Configurations"], "operationId": "GetAllAnalyticsConfigurationsAsync", "parameters": [{"name": "tenantId", "in": "path", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"200": {"description": "Success", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Workspace.V1.TenantConfigurationResponse"}}}}, "404": {"description": "Not Found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "400": {"description": "Bad Request", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "403": {"description": "Forbidden", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "500": {"description": "Server Error"}}}}, "/tenants/{tenantId}/analytics/configurations/create": {"post": {"tags": ["Configurations"], "operationId": "CreateAnalyticsConfigurationAsync", "parameters": [{"name": "tenantId", "in": "path", "required": true, "schema": {"type": "string"}}, {"name": "workspaceName", "in": "path", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Workspace.V1.AnalyticsConfiguration"}}, "application/json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Workspace.V1.AnalyticsConfiguration"}}, "text/json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Workspace.V1.AnalyticsConfiguration"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Workspace.V1.AnalyticsConfiguration"}}}}, "responses": {"200": {"description": "Success", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Workspace.V1.AnalyticsAzureAd"}}}}, "404": {"description": "Not Found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "400": {"description": "Bad Request", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "403": {"description": "Forbidden", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "500": {"description": "Server Error"}}}}, "/tenants/{tenantId}/analytics/configurations/sql/test": {"post": {"tags": ["Configurations"], "operationId": "TestSqlConnectionAnalyticsConfigurationAsync", "parameters": [{"name": "tenantId", "in": "path", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Workspace.V1.SqlConnectionRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Workspace.V1.SqlConnectionRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Workspace.V1.SqlConnectionRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Workspace.V1.SqlConnectionRequest"}}}}, "responses": {"200": {"description": "Success", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Workspace.V1.TestConnectionResponse"}}}}, "404": {"description": "Not Found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "400": {"description": "Bad Request", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "403": {"description": "Forbidden", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "500": {"description": "Server Error"}}}}, "/tenants/{tenantId}/analytics/configurations/tenant/all": {"get": {"tags": ["Configurations"], "operationId": "GetAllTenantAnalyticsConfigurationsAsync", "parameters": [{"name": "tenantId", "in": "path", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"200": {"description": "Success", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Workspace.V1.AnalyticsConfigurationsResponse"}}}}, "404": {"description": "Not Found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "400": {"description": "Bad Request", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "403": {"description": "Forbidden", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "500": {"description": "Server Error"}}}}, "/tenants/{tenantId}/analytics/configurations/tenant": {"get": {"tags": ["Configurations"], "operationId": "GetAnalyticsConfigurationByTenantIdAsync", "parameters": [{"name": "tenantId", "in": "path", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"200": {"description": "Success", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Workspace.V1.AnalyticsConfiguration"}}}}, "404": {"description": "Not Found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "400": {"description": "Bad Request", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "403": {"description": "Forbidden", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "500": {"description": "Server Error"}}}}, "/tenants/{tenantId}/analytics/configurations/test": {"post": {"tags": ["Configurations"], "operationId": "TestAnalyticsConfigurationAsync", "parameters": [{"name": "tenantId", "in": "path", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Workspace.V1.AnalyticsAzureAd"}}, "application/json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Workspace.V1.AnalyticsAzureAd"}}, "text/json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Workspace.V1.AnalyticsAzureAd"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Workspace.V1.AnalyticsAzureAd"}}}}, "responses": {"200": {"description": "Success", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Workspace.V1.TestConnectionResponse"}}}}, "404": {"description": "Not Found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "400": {"description": "Bad Request", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "403": {"description": "Forbidden", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "500": {"description": "Server Error"}}}}, "/tenants/{tenantId}/analytics/configurations/valid": {"get": {"tags": ["Configurations"], "operationId": "HasValidAnalyticsConfigurationAsync", "parameters": [{"name": "tenantId", "in": "path", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"200": {"description": "Success", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Workspace.V1.HasValidConfigurationResponse"}}}}, "404": {"description": "Not Found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "400": {"description": "Bad Request", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "403": {"description": "Forbidden", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "500": {"description": "Server Error"}}}}, "/tenants/{tenantId}/datasync/connections/{connectionId}/edfi/districts": {"get": {"tags": ["Connections / Ed-Fi"], "summary": "Retrieves a list of districts from an Ed-Fi API using the DataSync connection metadata", "operationId": "GetTenantDataSyncConnectionEdFiDistricts", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "connectionId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"200": {"description": "List of districts returned", "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/EdGraph.Platform.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.ConnectionEdFiResponse"}}}}}, "404": {"description": "DataSync connection not found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "400": {"description": "Tenant has missing/invalid values", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "403": {"description": "Missing the required permissions to access to this tenant/resource", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "500": {"description": "Oops! Can't retrieve your districts right now"}}}}, "/tenants/{tenantId}/datasync/connections/{connectionId}/edfi/schoolyears": {"get": {"tags": ["Connections / Ed-Fi"], "summary": "Retrieves a list of school years from an Ed-Fi API using the DataSync connection metadata", "operationId": "GetTenantDataSyncConnectionEdFiSchoolYears", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "connectionId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"200": {"description": "List of school years returned", "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/EdGraph.Platform.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.ConnectionEdFiResponse"}}}}}, "404": {"description": "DataSync connection not found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "400": {"description": "Tenant has missing/invalid values", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "403": {"description": "Missing the required permissions to access to this tenant/resource", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "500": {"description": "Oops! Can't retrieve your school years right now"}}}}, "/tenants/{tenantId}/datasync/connections/{connectionId}/edfi/studentidentificationsystemdescriptors": {"get": {"tags": ["Connections / Ed-Fi"], "summary": "Retrieves a list of student identification system descriptors from an Ed-Fi API using the DataSync connection metadata", "operationId": "GetTenantDataSyncConnectionEdFiStudentIdDescriptors", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "connectionId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"200": {"description": "List of student identification system descriptors returned", "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/EdGraph.Platform.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.ConnectionEdFiResponse"}}}}}, "404": {"description": "DataSync connection not found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "400": {"description": "Tenant has missing/invalid values", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "403": {"description": "Missing the required permissions to access to this tenant/resource", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "500": {"description": "Oops! Can't retrieve your student identification system descriptors right now"}}}}, "/tenants/{tenantId}/datasync/connections/{connectionId}/edfi/termdescriptors": {"get": {"tags": ["Connections / Ed-Fi"], "summary": "Retrieves a list of term descriptors from an Ed-Fi API using the DataSync connection metadata", "operationId": "GetTenantDataSyncConnectionEdFiTermDescriptors", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "connectionId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"200": {"description": "List of term descriptors returned", "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/EdGraph.Platform.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.ConnectionEdFiResponse"}}}}}, "404": {"description": "DataSync connection not found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "400": {"description": "Tenant has missing/invalid values", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "403": {"description": "Missing the required permissions to access to this tenant/resource", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "500": {"description": "Oops! Can't retrieve your term descriptors right now"}}}}, "/tenants/{tenantId}/datasync/connections/{connectionId}/delete": {"post": {"tags": ["Connections"], "summary": "Delete a DataSync connection matching the primary key", "operationId": "DeleteTenantDataSyncConnection", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "connectionId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Connection.V1.DeleteConnectionRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Connection.V1.DeleteConnectionRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Connection.V1.DeleteConnectionRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Connection.V1.DeleteConnectionRequest"}}}}, "responses": {"202": {"description": "DataSync connection deleted"}, "400": {"description": "DataSync connection has missing/invalid values", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "403": {"description": "Missing the required permissions to access to this tenant/resource", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "500": {"description": "Oops! Can't delete your DataSync connection right now"}}}}, "/tenants/{tenantId}/datasync/connections/{connectionId}/update": {"post": {"tags": ["Connections"], "summary": "Updates a DataSync connection matching the primary key", "operationId": "UpdateTenantDataSyncConnection", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "connectionId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Connection.V1.UpdateConnectionRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Connection.V1.UpdateConnectionRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Connection.V1.UpdateConnectionRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Connection.V1.UpdateConnectionRequest"}}}}, "responses": {"202": {"description": "DataSync connection updated"}, "400": {"description": "DataSync connection has missing/invalid values", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "403": {"description": "Missing the required permissions to access to this tenant/resource", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "500": {"description": "Oops! Can't update your DataSync connection right now"}}}}, "/tenants/{tenantId}/datasync/connections/{connectionId}": {"get": {"tags": ["Connections"], "summary": "Retrieves a specific DataSync connection using its primary key", "operationId": "GetTenantDataSyncConnectionProfileById", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "connectionId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"200": {"description": "DataSync connection returned", "content": {"text/plain": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Connection.V1.ConnectionProfileResponse"}}, "application/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Connection.V1.ConnectionProfileResponse"}}, "text/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Connection.V1.ConnectionProfileResponse"}}}}, "404": {"description": "DataSync connection not found", "content": {"text/plain": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}, "application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}, "text/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "400": {"description": "Tenant has missing/invalid values", "content": {"text/plain": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}, "application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}, "text/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "403": {"description": "Missing the required permissions to access to this tenant/resource", "content": {"text/plain": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}, "application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}, "text/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "500": {"description": "Oops! Can't retrieve your DataSync connection right now"}}}}, "/tenants/{tenantId}/datasync/connections/create": {"post": {"tags": ["Connections"], "summary": "Creates a new DataSync connection", "operationId": "CreateTenantDataSyncConnection", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Connection.V1.CreateConnectionRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Connection.V1.CreateConnectionRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Connection.V1.CreateConnectionRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Connection.V1.CreateConnectionRequest"}}}}, "responses": {"202": {"description": "DataSync connection created"}, "400": {"description": "DataSync connection has missing/invalid values", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "403": {"description": "Missing the required permissions to access to this tenant/resource", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "500": {"description": "Oops! Can't create your DataSync connection right now"}}}}, "/tenants/{tenantId}/datasync/connections": {"get": {"tags": ["Connections"], "summary": "Retrieves a list of DataSync Connections", "operationId": "GetAllTenantDataSyncConnections", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"200": {"description": "List of DataSync connections returned", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Connection.V1.ConnectionListResponsePaginatedItemsViewModel"}}}}, "400": {"description": "Tenant has missing/invalid values", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "403": {"description": "Missing the required permissions to access to this tenant/resource", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "500": {"description": "Oops! Can't retrieve the list of DataSync connections right now"}}}}, "/tenants/{tenantId}/edfiadmin/connections/odsbackupcodes": {"get": {"tags": ["Connections"], "summary": "Retrieves a list of Ed-Fi ODS backup codes.", "operationId": "GetEdFiOdsBackupCodesDescriptorsAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.EdFiOdsBackupDescriptorsPaginatedItemsResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/edfiadmin/connections": {"get": {"tags": ["Connections"], "summary": "Retrieves a list of Ed-Fi Connections.", "operationId": "GetEdFiConnectionsAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.EdFiConnectionPaginatedItemsResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/validations/containers/{collectionId}/json": {"get": {"tags": ["Containers"], "summary": "Retrieves a resource by ID", "operationId": "GetValidationsCollectionJson", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "collectionId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"200": {"description": "Found resource returned", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Containers.V1.GetJsonResponse"}}}}, "400": {"description": "Tenant has missing/invalid values", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "403": {"description": "Missing the required permissions to access to this tenant/resource", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "500": {"description": "Oops! Can't retrieve the resource right now"}}}}, "/tenants/{tenantId}/validations/containers/{containerId}": {"delete": {"tags": ["Containers"], "summary": "Deletes an existing resource", "operationId": "DeleteValidationsContainer", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "containerId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"202": {"description": "Successfully deleted the resource"}, "400": {"description": "The request has missing/invalid values", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "403": {"description": "Missing the required permissions to access to this tenant/resource", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "500": {"description": "Oops! Can't delete your resource right now"}}}, "get": {"tags": ["Containers"], "summary": "Retrieves a resource by ID", "operationId": "GetValidationsContainer", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "containerId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"200": {"description": "Found resource returned", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Containers.V1.ContainerDto"}}}}, "400": {"description": "Tenant has missing/invalid values", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "403": {"description": "Missing the required permissions to access to this tenant/resource", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "500": {"description": "Oops! Can't retrieve the resource right now"}}}, "put": {"tags": ["Containers"], "summary": "Updates a resource matching the ID", "operationId": "UpdateValidationsContainer", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "containerId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Containers.V1.UpdateContainerRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Containers.V1.UpdateContainerRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Containers.V1.UpdateContainerRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Containers.V1.UpdateContainerRequest"}}}}, "responses": {"202": {"description": "Successfully updated the resource"}, "400": {"description": "The request has missing/invalid values", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "403": {"description": "Missing the required permissions to access to this tenant/resource", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "500": {"description": "Oops! Can't update your resource right now"}}}}, "/tenants/{tenantId}/validations/containers/collections/{collectionId}": {"put": {"tags": ["Containers"], "summary": "Updates a resource matching the ID", "operationId": "UpdateValidationsCollection", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "collectionId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Containers.V1.UpdateCollectionRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Containers.V1.UpdateCollectionRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Containers.V1.UpdateCollectionRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Containers.V1.UpdateCollectionRequest"}}}}, "responses": {"202": {"description": "Successfully updated the resource"}, "400": {"description": "The request has missing/invalid values", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "403": {"description": "Missing the required permissions to access to this tenant/resource", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "500": {"description": "Oops! Can't update your resource right now"}}}}, "/tenants/{tenantId}/validations/containers/collections/upload": {"post": {"tags": ["Containers"], "summary": "Uploads a Validations Community Collection", "operationId": "UploadValidationsCommunityCollection", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Containers.V1.UploadCollectionRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Containers.V1.UploadCollectionRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Containers.V1.UploadCollectionRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Containers.V1.UploadCollectionRequest"}}}}, "responses": {"202": {"description": "Successfully updated the resource"}, "400": {"description": "The request has missing/invalid values", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "403": {"description": "Missing the required permissions to access to this tenant/resource", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "500": {"description": "Oops! Can't upload the collection right now"}}}}, "/tenants/{tenantId}/validations/containers/collections": {"post": {"tags": ["Containers"], "summary": "Creates a new resource", "operationId": "CreateValidationsCollection", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Containers.V1.CreateCollectionRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Containers.V1.CreateCollectionRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Containers.V1.CreateCollectionRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Containers.V1.CreateCollectionRequest"}}}}, "responses": {"202": {"description": "Successfully created the resource"}, "400": {"description": "The request has missing/invalid values", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "403": {"description": "Missing the required permissions to access to this tenant/resource", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "500": {"description": "Oops! Can't create your resource right now"}}}}, "/tenants/{tenantId}/validations/containers": {"get": {"tags": ["Containers"], "summary": "Retrieves a list of resources", "operationId": "FindValidationsContainers", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string"}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"200": {"description": "List of resources returned", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Containers.V1.PaginatedContainers"}}}}, "400": {"description": "Tenant has missing/invalid values", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "403": {"description": "Missing the required permissions to access to this tenant/resource", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "500": {"description": "Oops! Can't retrieve the list of resources right now"}}}, "post": {"tags": ["Containers"], "summary": "Creates a new resource", "operationId": "CreateValidationsContainer", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Containers.V1.CreateContainerRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Containers.V1.CreateContainerRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Containers.V1.CreateContainerRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Containers.V1.CreateContainerRequest"}}}}, "responses": {"202": {"description": "Successfully created the resource"}, "400": {"description": "The request has missing/invalid values", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "403": {"description": "Missing the required permissions to access to this tenant/resource", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "500": {"description": "Oops! Can't create your resource right now"}}}}, "/tenants/{tenantId}/analytics/edfiadmin/connections": {"get": {"tags": ["Ed-Fi Instances"], "summary": "Retrieves a list of EdFi Admin connections", "operationId": "GetAllEdFiAdminConnectionsFromAnalyticsAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"200": {"description": "List of EdFi Admin connections", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Workspace.V1.ReportPaginatedItemsResponse"}}}}, "400": {"description": "Tenant has missing/invalid values", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "403": {"description": "Missing the required permissions to access to this tenant/resource", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "500": {"description": "Oops! Can't retrieve the list of EdFi Admin connections right now"}}}}, "/tenants/{tenantId}/analytics/edfiadmin/instances": {"get": {"tags": ["Ed-Fi Instances"], "summary": "Retrieves a list of EdFi Admin instances", "operationId": "GetAllEdFiAdminInstancesFromAnalyticsAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"200": {"description": "List of EdFi Admin instances", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Workspace.V1.ReportPaginatedItemsResponse"}}}}, "400": {"description": "Tenant has missing/invalid values", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "403": {"description": "Missing the required permissions to access to this tenant/resource", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "500": {"description": "Oops! Can't retrieve the list of EdFi Admin instances right now"}}}}, "/tenants/{tenantId}/validations/dbEnvironments/{dbEnvironmentId}": {"delete": {"tags": ["Environments"], "summary": "Deletes an existing DbEnvironment", "operationId": "DeleteValidationsDbEnvironment", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "dbEnvironmentId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"202": {"description": "Successfully deleted the resource"}, "400": {"description": "The request has missing/invalid values", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "403": {"description": "Missing the required permissions to access to this tenant/resource", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "500": {"description": "Oops! Can't delete your resource right now"}}}, "get": {"tags": ["Environments"], "summary": "Retrieves a resource by ID", "operationId": "GetValidationsDbEnvironment", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "dbEnvironmentId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"200": {"description": "Found resource returned", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.DbEnvironments.V1.DbEnvironmentDto"}}}}, "400": {"description": "Tenant has missing/invalid values", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "403": {"description": "Missing the required permissions to access to this tenant/resource", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "500": {"description": "Oops! Can't retrieve the resource right now"}}}, "put": {"tags": ["Environments"], "summary": "Updates a resource matching the ID", "operationId": "UpdateValidationsDbEnvironment", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "dbEnvironmentId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.DbEnvironments.V1.UpdateRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.DbEnvironments.V1.UpdateRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.DbEnvironments.V1.UpdateRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.DbEnvironments.V1.UpdateRequest"}}}}, "responses": {"202": {"description": "Successfully updated the resource"}, "400": {"description": "The request has missing/invalid values", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "403": {"description": "Missing the required permissions to access to this tenant/resource", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "500": {"description": "Oops! Can't update your resource right now"}}}}, "/tenants/{tenantId}/validations/dbEnvironments/test-connection": {"post": {"tags": ["Environments"], "summary": "Tests if the provided connection string can establish a valid connection.", "operationId": "TestValidationsDbEnvironmentConnection", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.DbEnvironments.V1.TestConnectionRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.DbEnvironments.V1.TestConnectionRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.DbEnvironments.V1.TestConnectionRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.DbEnvironments.V1.TestConnectionRequest"}}}}, "responses": {"202": {"description": "Successfully tested the connection string"}, "400": {"description": "The request has missing/invalid values", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "403": {"description": "Missing the required permissions to access to this tenant/resource", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "500": {"description": "Oops! Can't test the connection right now"}}}}, "/tenants/{tenantId}/validations/dbEnvironments": {"get": {"tags": ["Environments"], "summary": "Retrieves a list of resources", "operationId": "FindValidationsDbEnvironments", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string"}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"200": {"description": "List of resources returned", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.DbEnvironments.V1.PaginatedDbEnvironments"}}}}, "400": {"description": "Tenant has missing/invalid values", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "403": {"description": "Missing the required permissions to access to this tenant/resource", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "500": {"description": "Oops! Can't retrieve the list of resources right now"}}}, "post": {"tags": ["Environments"], "summary": "Creates a new DbEnvironment", "operationId": "CreateValidationsDbEnvironment", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.DbEnvironments.V1.CreateRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.DbEnvironments.V1.CreateRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.DbEnvironments.V1.CreateRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.DbEnvironments.V1.CreateRequest"}}}}, "responses": {"202": {"description": "Successfully created the resource"}, "400": {"description": "The request has missing/invalid values", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "403": {"description": "Missing the required permissions to access to this tenant/resource", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "500": {"description": "Oops! Can't create your resource right now"}}}}, "/tenants/{tenantId}/analytics/groups/{groupId}/delete": {"delete": {"tags": ["Groups"], "operationId": "DeleteAnalyticsPowerBiGroup", "parameters": [{"name": "tenantId", "in": "path", "required": true, "schema": {"type": "string"}}, {"name": "workspaceName", "in": "path", "required": true, "schema": {"type": "string"}}, {"name": "workspaceId", "in": "path", "required": true, "schema": {"type": "string"}}, {"name": "groupId", "in": "path", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Workspace.V1.AnalyticsGroup"}}, "application/json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Workspace.V1.AnalyticsGroup"}}, "text/json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Workspace.V1.AnalyticsGroup"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Workspace.V1.AnalyticsGroup"}}}}, "responses": {"200": {"description": "Success"}, "404": {"description": "Not Found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "400": {"description": "Bad Request", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "403": {"description": "Forbidden", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "500": {"description": "Server Error"}}}}, "/tenants/{tenantId}/analytics/groups/{groupName}/exists": {"get": {"tags": ["Groups"], "operationId": "CheckIfAnalyticsPowerBiGroupExists", "parameters": [{"name": "tenantId", "in": "path", "required": true, "schema": {"type": "string"}}, {"name": "groupName", "in": "path", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"200": {"description": "Success", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Workspace.V1.GroupExistsResponse"}}}}, "404": {"description": "Not Found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "400": {"description": "Bad Request", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "403": {"description": "Forbidden", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "500": {"description": "Server Error"}}}}, "/tenants/{tenantId}/analytics/groups/create": {"post": {"tags": ["Groups"], "operationId": "CreateAnalyticsPowerBiGroup", "parameters": [{"name": "tenantId", "in": "path", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Workspace.V1.AnalyticsGroup"}}, "application/json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Workspace.V1.AnalyticsGroup"}}, "text/json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Workspace.V1.AnalyticsGroup"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Workspace.V1.AnalyticsGroup"}}}}, "responses": {"200": {"description": "Success", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Workspace.V1.GroupResponse"}}}}, "404": {"description": "Not Found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "400": {"description": "Bad Request", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "403": {"description": "Forbidden", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "500": {"description": "Server Error"}}}}, "/tenants/{tenantId}/analytics/groups/users/add": {"post": {"tags": ["Groups"], "operationId": "AddUserToAnalyticsPowerBiGroup", "parameters": [{"name": "tenantId", "in": "path", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Workspace.V1.AddGroupUserRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Workspace.V1.AddGroupUserRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Workspace.V1.AddGroupUserRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Workspace.V1.AddGroupUserRequest"}}}}, "responses": {"200": {"description": "Success"}, "404": {"description": "Not Found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "400": {"description": "Bad Request", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "403": {"description": "Forbidden", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "500": {"description": "Server Error"}}}}, "/tenants/{tenantId}/analytics/groups/users/all": {"get": {"tags": ["Groups"], "operationId": "GetAnalyticsPowerBiGroupUsers", "parameters": [{"name": "tenantId", "in": "path", "required": true, "schema": {"type": "string"}}, {"name": "workspaceName", "in": "path", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Workspace.V1.GroupUsersRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Workspace.V1.GroupUsersRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Workspace.V1.GroupUsersRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Workspace.V1.GroupUsersRequest"}}}}, "responses": {"200": {"description": "Success", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Workspace.V1.GroupUsersResponse"}}}}, "404": {"description": "Not Found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "400": {"description": "Bad Request", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "403": {"description": "Forbidden", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "500": {"description": "Server Error"}}}}, "/tenants/{tenantId}/analytics/groups": {"get": {"tags": ["Groups"], "operationId": "GetAnalyticsPowerBiGroupByWorkspaceName", "parameters": [{"name": "tenantId", "in": "path", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Workspace.V1.AnalyticsGroup"}}, "application/json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Workspace.V1.AnalyticsGroup"}}, "text/json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Workspace.V1.AnalyticsGroup"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Workspace.V1.AnalyticsGroup"}}}}, "responses": {"200": {"description": "Success", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Workspace.V1.GroupResponse"}}}}, "404": {"description": "Not Found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "400": {"description": "Bad Request", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "403": {"description": "Forbidden", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "500": {"description": "Server Error"}}}}, "/tenants/{tenantId}/edfiadmin/instances/{instanceId}/applications/{applicationId}/apiclients/{apiClientId}/regenerate": {"put": {"tags": ["Instances / Applications"], "summary": "Regenerates the secret of an API Client.", "operationId": "RegenerateApiClientSecretAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "instanceId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "applicationId", "in": "path", "description": "", "required": true, "schema": {"type": "integer", "format": "int32"}}, {"name": "apiClientId", "in": "path", "description": "", "required": true, "schema": {"type": "integer", "format": "int32"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.RegenerateApiClientSecretResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/edfiadmin/instances/{instanceId}/applications/{applicationId}/apiclients/{apiClientId}": {"get": {"tags": ["Instances / Applications"], "summary": "Retrieves an API Client of an Application by ID.", "operationId": "GetApplicationApiClientByIdAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "instanceId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "applicationId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "apiClientId", "in": "path", "description": "", "required": true, "schema": {"type": "integer", "format": "int32"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.EdFiApplicationApiClientProfileResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/edfiadmin/instances/{instanceId}/applications/{applicationId}/apiclients": {"get": {"tags": ["Instances / Applications"], "summary": "Retrieves the API Clients of an Application.", "operationId": "GetApplicationApiClientsAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "instanceId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "applicationId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.EdFiApplicationApiClientProfileResponsePaginatedItemsViewModel"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/edfiadmin/instances/{instanceId}/applications/{applicationId}/sync": {"post": {"tags": ["Instances / Applications"], "summary": "Copies an Application from one instance to another/other instance(s)", "operationId": "SyncApplicationAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "instanceId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "applicationId", "in": "path", "description": "", "required": true, "schema": {"type": "integer", "format": "int32"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.SyncApplicationRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.SyncApplicationRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.SyncApplicationRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.SyncApplicationRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved."}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/edfiadmin/instances/{instanceId}/applications/{applicationId}": {"delete": {"tags": ["Instances / Applications"], "summary": "Deletes an Application.", "operationId": "DeleteApplicationAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "instanceId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "applicationId", "in": "path", "description": "", "required": true, "schema": {"type": "integer", "format": "int32"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "204": {"description": "The resource was successfully deleted."}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}, "get": {"tags": ["Instances / Applications"], "summary": "Retrieves an Application by ID.", "operationId": "GetApplicationByIdAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "instanceId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "applicationId", "in": "path", "description": "", "required": true, "schema": {"type": "integer", "format": "int32"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.EdFiApplicationProfileResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}, "put": {"tags": ["Instances / Applications"], "summary": "Updates an Application.", "operationId": "UpdateApplicationAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "instanceId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "applicationId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.UpdateEdFiApplicationRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.UpdateEdFiApplicationRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.UpdateEdFiApplicationRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.UpdateEdFiApplicationRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved."}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/edfiadmin/instances/{instanceId}/applications": {"get": {"tags": ["Instances / Applications"], "summary": "Retrieves a list of Applications.", "operationId": "GetApplicationsAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "instanceId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.EdFiApplicationListResponsePaginatedItemsViewModel"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}, "post": {"tags": ["Instances / Applications"], "summary": "Creates an Application.", "operationId": "CreateApplicationAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "instanceId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.CreateEdFiApplicationRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.CreateEdFiApplicationRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.CreateEdFiApplicationRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.CreateEdFiApplicationRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "201": {"description": "The resource was created. The location of the resource is available in the Location header of the response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.EdFiApplicationCreatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/edfiadmin/instances/{instanceId}/claimsets/{claimSetId}/resourceclaims": {"get": {"tags": ["Instances / ClaimSets"], "summary": "Retrieves a grid of Resource Claims.", "operationId": "GetResourceClaimsGridAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "instanceId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "claimSetId", "in": "path", "description": "", "required": true, "schema": {"type": "integer", "format": "int32"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.GetResourceClaimsGridResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/edfiadmin/instances/{instanceId}/claimsets/{claimSetId}/sync": {"post": {"tags": ["Instances / ClaimSets"], "summary": "Copies a Claim Set from one instance to another/other instance(s)", "operationId": "SyncClaimSetAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "instanceId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "claimSetId", "in": "path", "description": "", "required": true, "schema": {"type": "integer", "format": "int32"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.SyncClaimSetRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.SyncClaimSetRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.SyncClaimSetRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.SyncClaimSetRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved."}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/edfiadmin/instances/{instanceId}/claimsets/{claimSetId}": {"delete": {"tags": ["Instances / ClaimSets"], "summary": "Deletes a ClaimSet.", "operationId": "DeleteClaimSetAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "instanceId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "claimSetId", "in": "path", "description": "", "required": true, "schema": {"type": "integer", "format": "int32"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "204": {"description": "The resource was successfully deleted."}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}, "get": {"tags": ["Instances / ClaimSets"], "summary": "Retrieves a ClaimSet by ID.", "operationId": "GetClaimSetByIdAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "instanceId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "claimSetId", "in": "path", "description": "", "required": true, "schema": {"type": "integer", "format": "int32"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.ClaimSet"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}, "put": {"tags": ["Instances / ClaimSets"], "summary": "Updates a ClaimSet.", "operationId": "UpdateClaimSetAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "instanceId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "claimSetId", "in": "path", "description": "", "required": true, "schema": {"type": "integer", "format": "int32"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.SaveClaimSetRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.SaveClaimSetRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.SaveClaimSetRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.SaveClaimSetRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.SaveClaimSetResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/edfiadmin/instances/{instanceId}/claimsets": {"get": {"tags": ["Instances / ClaimSets"], "summary": "Retrieves a list of ClaimSets.", "operationId": "GetClaimSetsAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "instanceId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.ClaimSetPaginatedItemsViewModel"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}, "post": {"tags": ["Instances / ClaimSets"], "summary": "Creates a ClaimSet.", "operationId": "CreateClaimSetAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "instanceId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.SaveClaimSetRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.SaveClaimSetRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.SaveClaimSetRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.SaveClaimSetRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.SaveClaimSetResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/edfiadmin/instances/{instanceId}/years/{year}/descriptors/{descriptorId}": {"delete": {"tags": ["Instances / Descriptors"], "summary": "Deletes a Descriptor.", "operationId": "DeleteDescriptorAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "instanceId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "year", "in": "path", "description": "", "required": true, "schema": {"type": "integer", "format": "int32"}}, {"name": "descriptorId", "in": "path", "description": "", "required": true, "schema": {"type": "integer", "format": "int32"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "204": {"description": "The resource was successfully deleted."}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}, "get": {"tags": ["Instances / Descriptors"], "summary": "Retrieves a Descriptor by ID.", "operationId": "GetDescriptorByIdAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "instanceId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "year", "in": "path", "description": "", "required": true, "schema": {"type": "integer", "format": "int32"}}, {"name": "descriptorId", "in": "path", "description": "", "required": true, "schema": {"type": "integer", "format": "int32"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.DescriptorType"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}, "put": {"tags": ["Instances / Descriptors"], "summary": "Updates a Descriptor.", "operationId": "UpdateDescriptorAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "instanceId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "year", "in": "path", "description": "", "required": true, "schema": {"type": "integer", "format": "int32"}}, {"name": "descriptorId", "in": "path", "description": "", "required": true, "schema": {"type": "integer", "format": "int32"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.DescriptorType"}}, "application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.DescriptorType"}}, "text/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.DescriptorType"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.DescriptorType"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.DescriptorUpdatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/edfiadmin/instances/{instanceId}/years/{year}/descriptors": {"get": {"tags": ["Instances / Descriptors"], "summary": "Retrieves a list of Descriptors.", "operationId": "GetDescriptorsAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "instanceId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "year", "in": "path", "description": "", "required": true, "schema": {"type": "integer", "format": "int32"}}, {"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string"}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.DescriptorsPaginatedItemsResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}, "post": {"tags": ["Instances / Descriptors"], "summary": "Creates a Descriptor.", "operationId": "CreateDescriptorAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "instanceId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "year", "in": "path", "description": "", "required": true, "schema": {"type": "integer", "format": "int32"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.DescriptorType"}}, "application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.DescriptorType"}}, "text/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.DescriptorType"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.DescriptorType"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "201": {"description": "The resource was created. The location of the resource is available in the Location header of the response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.DescriptorCreatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/edfiadmin/instances/{instanceId}/years/{year}/namespaces": {"get": {"tags": ["Instances / Descriptors"], "summary": "Retrieves a list of Descriptor Namespaces.", "operationId": "GetDescriptorNamespacesAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "instanceId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "year", "in": "path", "description": "", "required": true, "schema": {"type": "integer", "format": "int32"}}, {"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.DescriptorNamespacesPaginatedItemsResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/edfiadmin/instances/{instanceId}/years/{year}/localeducationagencies/{localEducationAgencyId}/sync": {"post": {"tags": ["Instances / Local Education Agencies"], "summary": "Copies a LocalEducationAgency from one instance to another/other instance(s).", "operationId": "SyncLocalEducationAgencyAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "instanceId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "year", "in": "path", "description": "", "required": true, "schema": {"type": "integer", "format": "int32"}}, {"name": "localEducationAgencyId", "in": "path", "description": "", "required": true, "schema": {"type": "integer", "format": "int32"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.SyncLocalEducationAgencyRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.SyncLocalEducationAgencyRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.SyncLocalEducationAgencyRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.SyncLocalEducationAgencyRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.SyncResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/edfiadmin/instances/{instanceId}/years/{year}/localeducationagencies/{localEducationAgencyId}": {"delete": {"tags": ["Instances / Local Education Agencies"], "summary": "Deletes a LocalEducationAgency.", "operationId": "DeleteLocalEducationAgencyAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "instanceId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "year", "in": "path", "description": "", "required": true, "schema": {"type": "integer", "format": "int32"}}, {"name": "localEducationAgencyId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "204": {"description": "The resource was successfully deleted."}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}, "get": {"tags": ["Instances / Local Education Agencies"], "summary": "Retrieves a LocalEducationAgency by ID.", "operationId": "GetLocalEducationAgencyByIdAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "instanceId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "year", "in": "path", "description": "", "required": true, "schema": {"type": "integer", "format": "int32"}}, {"name": "localEducationAgencyId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.GetLocalEducationAgencyProfileResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}, "put": {"tags": ["Instances / Local Education Agencies"], "summary": "Updates a LocalEducationAgency.", "operationId": "UpdateLocalEducationAgencyAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "instanceId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "year", "in": "path", "description": "", "required": true, "schema": {"type": "integer", "format": "int32"}}, {"name": "localEducationAgencyId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.UpdateLocalEducationAgencyRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.UpdateLocalEducationAgencyRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.UpdateLocalEducationAgencyRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.UpdateLocalEducationAgencyRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved."}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/edfiadmin/instances/{instanceId}/years/{year}/localeducationagencies": {"get": {"tags": ["Instances / Local Education Agencies"], "summary": "Retrieves a list of LocalEducationAgencies.", "operationId": "GetlLocalEducationAgenciesAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "instanceId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "year", "in": "path", "description": "", "required": true, "schema": {"type": "integer", "format": "int32"}}, {"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.LocalEducationAgencyTableViewResponsePaginatedItemsViewModel"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}, "post": {"tags": ["Instances / Local Education Agencies"], "summary": "Creates a LocalEducationAgency.", "operationId": "CreateLocalEducationAgencyAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "instanceId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "year", "in": "path", "description": "", "required": true, "schema": {"type": "integer", "format": "int32"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.CreateLocalEducationAgencyRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.CreateLocalEducationAgencyRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.CreateLocalEducationAgencyRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.CreateLocalEducationAgencyRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "201": {"description": "The resource was created. The location of the resource is available in the Location header of the response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.LocalEducationAgencyCreatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/edfiadmin/instances/{instanceId}/reports/generate": {"post": {"tags": ["Instances / Reports"], "summary": "Queues a job to generate the report views in the ODS Database.", "operationId": "GenerateReportsAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "instanceId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "202": {"description": "The request was accepted and is under process."}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/edfiadmin/instances/{instanceId}/reports/schoolsbytype/{localEducationAgencyId}": {"get": {"tags": ["Instances / Reports"], "summary": "Retrieves a \"Schools By Type\" report.", "operationId": "GetSchoolsByTypeReportAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "instanceId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "localEducationAgencyId", "in": "path", "description": "", "required": true, "schema": {"type": "integer", "format": "int32"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.SchoolsByTypeReportResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/edfiadmin/instances/{instanceId}/reports/status": {"get": {"tags": ["Instances / Reports"], "summary": "Retrieves the status of the report views in Instance.", "operationId": "GetReportsStatusAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "instanceId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.ReportsStatusResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/edfiadmin/instances/{instanceId}/reports/studentenrollment/ethnicity/{localEducationAgencyId}": {"get": {"tags": ["Instances / Reports"], "summary": "Retrieves a \"Student Enrollment By Ethnicity\" report.", "operationId": "GetStudentEnrollmentByEthnicityReport", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "instanceId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "localEducationAgencyId", "in": "path", "description": "", "required": true, "schema": {"type": "integer", "format": "int32"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.StudentEnrollmentByEthnicityReportResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/edfiadmin/instances/{instanceId}/reports/studentenrollment/gender/{localEducationAgencyId}": {"get": {"tags": ["Instances / Reports"], "summary": "Retrieves a \"Student Enrollment By Gender\" report.", "operationId": "GetStudentEnrollmentByGenderReportAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "instanceId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "localEducationAgencyId", "in": "path", "description": "", "required": true, "schema": {"type": "integer", "format": "int32"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.StudentEnrollmentByGenderReportResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/edfiadmin/instances/{instanceId}/reports/studentenrollment/race/{localEducationAgencyId}": {"get": {"tags": ["Instances / Reports"], "summary": "Retrieves a \"Student Enrollment By Race\" report.", "operationId": "GetStudentEnrollmentByRaceReportAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "instanceId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "localEducationAgencyId", "in": "path", "description": "", "required": true, "schema": {"type": "integer", "format": "int32"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.StudentEnrollmentByRaceReportResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/edfiadmin/instances/{instanceId}/reports/studentsbyprogram/{localEducationAgencyId}": {"get": {"tags": ["Instances / Reports"], "summary": "Retrieves a \"Students By Program\" report.", "operationId": "GetStudentsByProgramReportAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "instanceId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "localEducationAgencyId", "in": "path", "description": "", "required": true, "schema": {"type": "integer", "format": "int32"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.StudentsByProgramReportResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/edfiadmin/instances/{instanceId}/reports/studentseconomicsituation/{localEducationAgencyId}": {"get": {"tags": ["Instances / Reports"], "summary": "Retrieves a \"Students Economic Situation\" report.", "operationId": "GetStudentEconomicSituationReportAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "instanceId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "localEducationAgencyId", "in": "path", "description": "", "required": true, "schema": {"type": "integer", "format": "int32"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.StudentEconomicSituationReportResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/edfiadmin/instances/{instanceId}/reports/totalenrollments/{localEducationAgencyId}": {"get": {"tags": ["Instances / Reports"], "summary": "Retrieves a \"Total Enrollments\" report.", "operationId": "GetTotalEnrollmentsReportAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "instanceId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "localEducationAgencyId", "in": "path", "description": "", "required": true, "schema": {"type": "integer", "format": "int32"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.TotalEnrollmentsReportResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/edfiadmin/instances/{instanceId}/vendors/{vendorId}/sync": {"post": {"tags": ["Instances / Vendors"], "summary": "Copies a Vendor from one instance to another/other instance(s).", "operationId": "SyncVendorAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "instanceId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "vendorId", "in": "path", "description": "", "required": true, "schema": {"type": "integer", "format": "int32"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.SyncVendorRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.SyncVendorRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.SyncVendorRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.SyncVendorRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved."}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/edfiadmin/instances/{instanceId}/vendors/{vendorId}": {"delete": {"tags": ["Instances / Vendors"], "summary": "Deletes a Vendor.", "operationId": "DeleteVendorAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "instanceId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "vendorId", "in": "path", "description": "", "required": true, "schema": {"type": "integer", "format": "int32"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "204": {"description": "The resource was successfully deleted."}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}, "get": {"tags": ["Instances / Vendors"], "summary": "Retrieves a Vendor by ID.", "operationId": "GetVendorByIdAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "instanceId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "vendorId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.VendorProfileResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}, "put": {"tags": ["Instances / Vendors"], "summary": "Updates a Vendor.", "operationId": "UpdateVendorAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "instanceId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "vendorId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.UpdateVendorRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.UpdateVendorRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.UpdateVendorRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.UpdateVendorRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.VendorUpdatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/edfiadmin/instances/{instanceId}/vendors": {"get": {"tags": ["Instances / Vendors"], "summary": "Retrieves a list of Vendors.", "operationId": "GetVendorsAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "instanceId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.VendorListResponsePaginatedItemsViewModel"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}, "post": {"tags": ["Instances / Vendors"], "summary": "Creates a new Vendor.", "operationId": "CreateVendorAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "instanceId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.CreateVendorRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.CreateVendorRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.CreateVendorRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.CreateVendorRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "201": {"description": "The resource was created. The location of the resource is available in the Location header of the response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.VendorCreatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/edfiadmin/instances/{instanceId}/clone": {"post": {"tags": ["Instances"], "summary": "Clones an instance.", "operationId": "CloneInstanceAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "instanceId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.CloneInstanceRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.CloneInstanceRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.CloneInstanceRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.CloneInstanceRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "202": {"description": "The request was accepted and is under process."}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/edfiadmin/instances/{instanceId}/resetinstance": {"post": {"tags": ["Instances"], "summary": "Resets an Instance.", "operationId": "ResetInstanceAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "instanceId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "202": {"description": "The request was accepted and is under process."}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/edfiadmin/instances/{instanceId}/years/{year}/endpoints": {"get": {"tags": ["Instances"], "summary": "Retrieves the Ed-Fi API endpoint URLs of an Instance.", "operationId": "GetInstanceEndpointsAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "instanceId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "year", "in": "path", "description": "", "required": true, "schema": {"type": "integer", "format": "int32"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.InstanceEndpointsResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/edfiadmin/instances/{instanceId}/years/{year}/resetcache": {"post": {"tags": ["Instances"], "summary": "Resets the cache of an Instance and the specified ODS database.", "operationId": "ResetInstanceCacheAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "instanceId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "year", "in": "path", "description": "", "required": true, "schema": {"type": "integer", "format": "int32"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.ResetInstanceResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/edfiadmin/instances/{instanceId}/years/{year}/resetods": {"post": {"tags": ["Instances"], "summary": "Resets the ODS database with the specified school year.", "operationId": "ResetSchoolYearAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "instanceId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "year", "in": "path", "description": "", "required": true, "schema": {"type": "integer", "format": "int32"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "202": {"description": "The request was accepted and is under process."}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/edfiadmin/instances/{instanceId}/years/{year}": {"delete": {"tags": ["Instances"], "summary": "Removes an ODS database from an Instance.", "operationId": "DeleteSchoolYearAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "instanceId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "year", "in": "path", "description": "", "required": true, "schema": {"type": "integer", "format": "int32"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "202": {"description": "The request was accepted and is under process."}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/edfiadmin/instances/{instanceId}/years/bulk": {"post": {"tags": ["Instances"], "summary": "Adds multiple ODS databases to an instance.", "operationId": "AddSchoolYearRange", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "instanceId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.AddSchoolYearRangeRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.AddSchoolYearRangeRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.AddSchoolYearRangeRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.AddSchoolYearRangeRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "202": {"description": "The request was accepted and is under process."}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/edfiadmin/instances/{instanceId}/years": {"post": {"tags": ["Instances"], "summary": "Adds an ODS database to an Instance.", "operationId": "AddSchoolYear", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "instanceId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.AddSchoolYearRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.AddSchoolYearRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.AddSchoolYearRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.AddSchoolYearRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "202": {"description": "The request was accepted and is under process."}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/edfiadmin/instances/{instanceId}": {"delete": {"tags": ["Instances"], "summary": "Deletes an Instance.", "operationId": "DeleteInstanceAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "instanceId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "204": {"description": "The resource was successfully deleted."}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}, "get": {"tags": ["Instances"], "summary": "Retrieves an Instance by ID.", "operationId": "GetInstanceByIdAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "instanceId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.Instance"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}, "put": {"tags": ["Instances"], "summary": "Updates an Instance.", "operationId": "UpdateInstanceAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "instanceId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.UpdateInstanceRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.UpdateInstanceRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.UpdateInstanceRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.UpdateInstanceRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved."}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "Not Found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/edfiadmin/instances": {"get": {"tags": ["Instances"], "summary": "Retrieves a list of Instances.", "operationId": "GetInstancesAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "deleted", "in": "query", "description": "", "schema": {"type": "boolean", "default": false}}, {"name": "targetTenantId", "in": "query", "description": "", "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.InstancePaginatedItemsViewModel"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "post": {"tags": ["Instances"], "summary": "Creates a new Instance.", "operationId": "CreateInstanceAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.CreateInstanceRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.CreateInstanceRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.CreateInstanceRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.CreateInstanceRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "202": {"description": "Accepted"}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "201": {"description": "The resource was created. The location of the resource is available in the Location header of the response."}}}}, "/tenants/{tenantId}/invitations/{invitationId}": {"delete": {"tags": ["Invitations"], "summary": "Deletes an invitation", "operationId": "DeleteTenantInvitationAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "invitationId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "204": {"description": "The resource was successfully deleted."}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "get": {"tags": ["Invitations"], "summary": "Retrieves a specific invitation", "operationId": "GetTenantInvitationByIdAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "invitationId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.Invitation.V1.InvitationResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/invitations": {"get": {"tags": ["Invitations"], "summary": "Retrieves a list of invitations associated to this tenant", "operationId": "GetAllTenantInvitationsAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.Invitation.V1.InvitationListResponsePaginatedItemsViewModel"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "post": {"tags": ["Invitations"], "summary": "Creates and sends an invitation to a user", "operationId": "SendTenantInvitationAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.Invitation.V1.SendInvitationRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.Invitation.V1.SendInvitationRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.Invitation.V1.SendInvitationRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.Invitation.V1.SendInvitationRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "201": {"description": "The resource was created. The location of the resource is available in the Location header of the response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.Invitation.V1.InvitationSentResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/datasync/jobs/{jobId}/executions/{jobExecutionId}/logs": {"get": {"tags": ["Job Execution Logs"], "summary": "Retrieves a list of DataSync Job Execution Logs", "operationId": "GetAllTenantDataSyncJobExecutionLogs", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "jobId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "jobExecutionId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "search", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"200": {"description": "List of DataSync job execution logs returned", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.JobExecutionLog.V1.JobExecutionLogEntryPaginatedItemsViewModel"}}}}, "400": {"description": "Tenant has missing/invalid values", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "403": {"description": "Missing the required permissions to access to this tenant/resource", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "500": {"description": "Oops! Can't retrieve the list of DataSync job execution logs right now"}}}}, "/tenants/{tenantId}/datasync/jobs/{jobId}/executions": {"get": {"tags": ["Job Executions"], "summary": "Retrieves a list of DataSync Job Executions", "operationId": "GetAllTenantDataSyncJobExecutions", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "jobId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"200": {"description": "List of DataSync job executions returned", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.JobExecution.V1.JobExecutionListResponsePaginatedItemsViewModel"}}}}, "400": {"description": "Tenant has missing/invalid values", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "403": {"description": "Missing the required permissions to access to this tenant/resource", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "500": {"description": "Oops! Can't retrieve the list of DataSync job executions right now"}}}}, "/tenants/{tenantId}/datasync/jobtypes/{jobTypeId}": {"get": {"tags": ["Job Types"], "summary": "Retrieves a specific DataSync job type using its primary key", "operationId": "GetTenantDataSyncJobTypeProfileById", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "jobTypeId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"200": {"description": "DataSync job type returned", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.JobType.V1.JobTypeProfileResponse"}}}}, "404": {"description": "DataSync job type not found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "400": {"description": "Tenant has missing/invalid values", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "403": {"description": "Missing the required permissions to access to this tenant/resource", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "500": {"description": "Oops! Can't retrieve your DataSync job type right now"}}}}, "/tenants/{tenantId}/datasync/jobtypes": {"get": {"tags": ["Job Types"], "summary": "Retrieves a list of DataSync job types", "operationId": "GetAllTenantDataSyncJobTypes", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"200": {"description": "List of DataSync job types returned", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.JobType.V1.JobTypeListResponsePaginatedItemsViewModel"}}}}, "400": {"description": "Tenant has missing/invalid values", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "403": {"description": "Missing the required permissions to access to this tenant/resource", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "500": {"description": "Oops! Can't retrieve the list of DataSync job types right now"}}}}, "/tenants/{tenantId}/datasync/jobs/{jobId}/activate": {"post": {"tags": ["Jobs"], "summary": "Activate a DataSync job matching the primary key", "operationId": "ActivateTenantDataSyncJob", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "jobId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Job.V1.ActivateJobRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Job.V1.ActivateJobRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Job.V1.ActivateJobRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Job.V1.ActivateJobRequest"}}}}, "responses": {"202": {"description": "DataSync job activated"}, "400": {"description": "DataSync job has missing/invalid values", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "403": {"description": "Missing the required permissions to access to this tenant/resource", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "500": {"description": "Oops! Can't activate your DataSync job right now"}}}}, "/tenants/{tenantId}/datasync/jobs/{jobId}/cancel": {"post": {"tags": ["Jobs"], "summary": "Cancel a DataSync job matching the primary key", "operationId": "CancelTenantDataSyncJob", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "jobId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Job.V1.CancelJobRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Job.V1.CancelJobRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Job.V1.CancelJobRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Job.V1.CancelJobRequest"}}}}, "responses": {"202": {"description": "DataSync job cancellation requested"}, "400": {"description": "DataSync job cancellation request has missing/invalid values", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "403": {"description": "Missing the required permissions to access to this tenant/resource", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "500": {"description": "Oops! Can't cancel your DataSync job right now"}}}}, "/tenants/{tenantId}/datasync/jobs/{jobId}/deactivate": {"post": {"tags": ["Jobs"], "summary": "Deactivate a DataSync job matching the primary key", "operationId": "DeactivateTenantDataSyncJob", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "jobId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Job.V1.DeactivateJobRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Job.V1.DeactivateJobRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Job.V1.DeactivateJobRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Job.V1.DeactivateJobRequest"}}}}, "responses": {"202": {"description": "DataSync job deactivated"}, "400": {"description": "DataSync job has missing/invalid values", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "403": {"description": "Missing the required permissions to access to this tenant/resource", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "500": {"description": "Oops! Can't deactivate your DataSync job right now"}}}}, "/tenants/{tenantId}/datasync/jobs/{jobId}/delete": {"post": {"tags": ["Jobs"], "summary": "Delete a DataSync job matching the primary key", "operationId": "DeleteTenantDataSyncJob", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "jobId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Job.V1.DeleteJobRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Job.V1.DeleteJobRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Job.V1.DeleteJobRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Job.V1.DeleteJobRequest"}}}}, "responses": {"202": {"description": "DataSync job deleted"}, "400": {"description": "DataSync job has missing/invalid values", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "403": {"description": "Missing the required permissions to access to this tenant/resource", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "500": {"description": "Oops! Can't delete your DataSync job right now"}}}}, "/tenants/{tenantId}/datasync/jobs/{jobId}/execute": {"post": {"tags": ["Jobs"], "summary": "Execute a DataSync job matching the primary key", "operationId": "ExecuteTenantDataSyncJob", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "jobId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Job.V1.ExecuteJobRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Job.V1.ExecuteJobRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Job.V1.ExecuteJobRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Job.V1.ExecuteJobRequest"}}}}, "responses": {"202": {"description": "DataSync job execution requested"}, "400": {"description": "DataSync job execution request has missing/invalid values", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "403": {"description": "Missing the required permissions to access to this tenant/resource", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "500": {"description": "Oops! Can't execute your DataSync job right now"}}}}, "/tenants/{tenantId}/datasync/jobs/{jobId}/update": {"post": {"tags": ["Jobs"], "summary": "Updates a DataSync job matching the primary key", "operationId": "UpdateTenantDataSyncJob", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "jobId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Job.V1.UpdateJobRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Job.V1.UpdateJobRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Job.V1.UpdateJobRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Job.V1.UpdateJobRequest"}}}}, "responses": {"202": {"description": "DataSync job updated"}, "400": {"description": "DataSync job has missing/invalid values", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "403": {"description": "Missing the required permissions to access to this tenant/resource", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "500": {"description": "Oops! Can't update your DataSync job right now"}}}}, "/tenants/{tenantId}/datasync/jobs/{jobId}": {"get": {"tags": ["Jobs"], "summary": "Retrieves a specific DataSync job using its primary key", "operationId": "GetTenantDataSyncJobProfileById", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "jobId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"200": {"description": "DataSync job returned", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Job.V1.JobProfileResponse"}}}}, "404": {"description": "DataSync job not found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "400": {"description": "Tenant has missing/invalid values", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "403": {"description": "Missing the required permissions to access to this tenant/resource", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "500": {"description": "Oops! Can't retrieve your DataSync job right now"}}}}, "/tenants/{tenantId}/datasync/jobs/create": {"post": {"tags": ["Jobs"], "summary": "Creates a new DataSync job", "operationId": "CreateTenantDataSyncJob", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Job.V1.CreateJobRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Job.V1.CreateJobRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Job.V1.CreateJobRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Job.V1.CreateJobRequest"}}}}, "responses": {"202": {"description": "DataSync job created"}, "400": {"description": "DataSync job has missing/invalid values", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "403": {"description": "Missing the required permissions to access to this tenant/resource", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "500": {"description": "Oops! Can't create your DataSync job right now"}}}}, "/tenants/{tenantId}/datasync/jobs": {"get": {"tags": ["Jobs"], "summary": "Retrieves a list of DataSync Jobs", "operationId": "GetAllTenantDataSyncJobs", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"200": {"description": "List of DataSync jobs returned", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Job.V1.JobListResponsePaginatedItemsViewModel"}}}}, "400": {"description": "Tenant has missing/invalid values", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "403": {"description": "Missing the required permissions to access to this tenant/resource", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "500": {"description": "Oops! Can't retrieve the list of DataSync jobs right now"}}}}, "/tenants/{tenantId}/validations/jobs/{jobId}/cancel": {"post": {"tags": ["Jobs"], "summary": "Requests a job cancellation", "operationId": "CancelValidationsJob", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "jobId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"202": {"description": "Successfully requested the job cancellation"}, "400": {"description": "The request has missing/invalid values", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "403": {"description": "Missing the required permissions to access to this tenant/resource", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "500": {"description": "Oops! Can't process your request right now"}}}}, "/tenants/{tenantId}/validations/jobs/{jobId}/execute": {"post": {"tags": ["Jobs"], "summary": "Requests a job execution", "operationId": "ExecuteValidationsJob", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "jobId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"202": {"description": "Successfully requested the job execution"}, "400": {"description": "The request has missing/invalid values", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "403": {"description": "Missing the required permissions to access to this tenant/resource", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "500": {"description": "Oops! Can't process your request right now"}}}}, "/tenants/{tenantId}/validations/jobs/{jobId}/restart-schedule": {"post": {"tags": ["Jobs"], "summary": "Requests a job schedule restart", "operationId": "RestartValidationsJobSchedule", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "jobId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"202": {"description": "Successfully requested the job schedule restart"}, "400": {"description": "The request has missing/invalid values", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "403": {"description": "Missing the required permissions to access to this tenant/resource", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "500": {"description": "Oops! Can't process your request right now"}}}}, "/tenants/{tenantId}/validations/jobs/{jobId}": {"delete": {"tags": ["Jobs"], "summary": "Deletes an existing resource", "operationId": "DeleteValidationsJob", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "jobId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"202": {"description": "Successfully deleted the resource"}, "400": {"description": "The request has missing/invalid values", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "403": {"description": "Missing the required permissions to access to this tenant/resource", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "500": {"description": "Oops! Can't delete your resource right now"}}}, "get": {"tags": ["Jobs"], "summary": "Retrieves a resource by ID", "operationId": "GetValidationsJob", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "jobId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"200": {"description": "Found resource returned", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Jobs.V1.JobProfileResponse"}}}}, "400": {"description": "Tenant has missing/invalid values", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "403": {"description": "Missing the required permissions to access to this tenant/resource", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "500": {"description": "Oops! Can't retrieve the resource right now"}}}, "put": {"tags": ["Jobs"], "summary": "Updates a resource matching the ID", "operationId": "UpdateValidationsJob", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "jobId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Jobs.V1.UpdateRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Jobs.V1.UpdateRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Jobs.V1.UpdateRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Jobs.V1.UpdateRequest"}}}}, "responses": {"202": {"description": "Successfully updated the resource"}, "400": {"description": "The request has missing/invalid values", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "403": {"description": "Missing the required permissions to access to this tenant/resource", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "500": {"description": "Oops! Can't update your resource right now"}}}}, "/tenants/{tenantId}/validations/jobs": {"get": {"tags": ["Jobs"], "summary": "Retrieves a list of resources", "operationId": "FindValidationsJobs", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string"}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"200": {"description": "List of resources returned", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Jobs.V1.PaginatedItemsResponse"}}}}, "400": {"description": "Tenant has missing/invalid values", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "403": {"description": "Missing the required permissions to access to this tenant/resource", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "500": {"description": "Oops! Can't retrieve the list of resources right now"}}}, "post": {"tags": ["Jobs"], "summary": "Creates a new resource", "operationId": "CreateValidationsJob", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Jobs.V1.CreateRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Jobs.V1.CreateRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Jobs.V1.CreateRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Jobs.V1.CreateRequest"}}}}, "responses": {"202": {"description": "Successfully created the resource"}, "400": {"description": "The request has missing/invalid values", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "403": {"description": "Missing the required permissions to access to this tenant/resource", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "500": {"description": "Oops! Can't create your resource right now"}}}}, "/me/preferences": {"post": {"tags": ["My Preferences"], "summary": "Creates or update a user's preference.", "operationId": "UpdateUserPreferenceAsync", "parameters": [{"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.UpdateUserPreferenceRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.UpdateUserPreferenceRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.UpdateUserPreferenceRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.UpdateUserPreferenceRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.UserPreferenceUpdatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/me": {"get": {"tags": ["My Profile"], "summary": "Retrieves the profile of the user that is currently logged in, including the user's preferences and its associated tenants", "operationId": "GetUserCacheAsync", "parameters": [{"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Platform.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.UserCacheResponse"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/datasync/providers/{providerId}": {"get": {"tags": ["Providers"], "summary": "Retrieves a specific DataSync provider using its primary key", "operationId": "GetTenantDataSyncProviderProfileById", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "providerId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"200": {"description": "DataSync provider returned", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Provider.V1.ProviderProfileResponse"}}}}, "404": {"description": "DataSync provider not found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "400": {"description": "Tenant has missing/invalid values", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "403": {"description": "Missing the required permissions to access to this tenant/resource", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "500": {"description": "Oops! Can't retrieve your DataSync provider right now"}}}}, "/tenants/{tenantId}/datasync/providers": {"get": {"tags": ["Providers"], "summary": "Retrieves a list of DataSync providers", "operationId": "GetAllTenantDataSyncProviders", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"200": {"description": "List of DataSync providers returned", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Provider.V1.ProviderListResponsePaginatedItemsViewModel"}}}}, "400": {"description": "Tenant has missing/invalid values", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "403": {"description": "Missing the required permissions to access to this tenant/resource", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "500": {"description": "Oops! Can't retrieve the list of DataSync providers right now"}}}}, "/registrations/azure/mona": {"post": {"tags": ["Registrations - Azure Marketplace"], "summary": "Submits a tenant's registration request received through Azure [M]arketplace [On]boarding [A]ccelerator (MONA)", "operationId": "SubmitTenantRegistrationAzureMonaAsync", "parameters": [{"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/RegistrationApi.Registration.V1.SubmitTenantRegistrationRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/RegistrationApi.Registration.V1.SubmitTenantRegistrationRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/RegistrationApi.Registration.V1.SubmitTenantRegistrationRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/RegistrationApi.Registration.V1.SubmitTenantRegistrationRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"type": "string"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/registrations/{registrationId}": {"get": {"tags": ["Registrations"], "summary": "Gets the approval status of a registration", "operationId": "GetRegistrationApprovalStatusAsync", "parameters": [{"name": "registrationId", "in": "path", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/RegistrationApi.Registration.V1.ApprovalStatus"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/registrations": {"post": {"tags": ["Registrations"], "summary": "Submits a tenant's registration request", "operationId": "SubmitTenantRegistrationAsync", "parameters": [{"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/RegistrationApi.Registration.V1.SubmitTenantRegistrationRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/RegistrationApi.Registration.V1.SubmitTenantRegistrationRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/RegistrationApi.Registration.V1.SubmitTenantRegistrationRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/RegistrationApi.Registration.V1.SubmitTenantRegistrationRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"type": "string"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/analytics/reports/{reportId}/active": {"get": {"tags": ["Reports"], "operationId": "CheckIfAnalyticsReportExistsAsync", "parameters": [{"name": "tenantId", "in": "path", "required": true, "schema": {"type": "string"}}, {"name": "reportId", "in": "path", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"200": {"description": "Success", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Workspace.V1.ReportResponse"}}}}, "404": {"description": "Not Found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "400": {"description": "Bad Request", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "403": {"description": "Forbidden", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "500": {"description": "Server Error"}}}}, "/tenants/{tenantId}/analytics/reports/{reportId}/datasets/ids": {"get": {"tags": ["Reports"], "summary": "Retrieves dataset information from a specific report", "operationId": "GetTenantAnalyticsWorkspaceReportDatasetIdsByReportId", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "reportId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"200": {"description": "Analytics report datset embed information returned", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Workspace.V1.ReportDatasetIdsResponse"}}}}, "400": {"description": "Request has missing/invalid values", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "403": {"description": "Missing the required permissions to access to this tenant/resource", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "500": {"description": "Oops! Can't retrieve the dataset embed information that belong to a workspace right now"}}}}, "/tenants/{tenantId}/analytics/reports/{reportId}/delete": {"delete": {"tags": ["Reports"], "summary": "Deletes a report", "operationId": "DeleteReportAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "reportId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"200": {"description": "Success", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Workspace.V1.Report"}}}}, "404": {"description": "Not Found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "400": {"description": "Bad Request", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "403": {"description": "Forbidden", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "500": {"description": "Server Error"}}}}, "/tenants/{tenantId}/analytics/reports/{reportId}/update": {"put": {"tags": ["Reports"], "summary": "Updates a report", "operationId": "UpdateReportAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "reportId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Workspace.V1.Report"}}, "application/json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Workspace.V1.Report"}}, "text/json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Workspace.V1.Report"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Workspace.V1.Report"}}}}, "responses": {"200": {"description": "Success", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Workspace.V1.Report"}}}}, "404": {"description": "Not Found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "400": {"description": "Bad Request", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "403": {"description": "Forbidden", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "500": {"description": "Server Error"}}}}, "/tenants/{tenantId}/analytics/reports/{reportId}": {"get": {"tags": ["Reports"], "summary": "Retrieves a specific Analytics reports that belong to a workspace", "operationId": "GetTenantAnalyticsWorkspaceReportByIdAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "reportId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"200": {"description": "Analytics report returned", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Workspace.V1.ReportResponse"}}}}, "404": {"description": "Analytics report not found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "400": {"description": "Tenant has missing/invalid values", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "403": {"description": "Missing the required permissions to access to this tenant/resource", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "500": {"description": "Oops! Can't retrieve your Analytics report right now"}}}}, "/tenants/{tenantId}/analytics/reports/clone": {"post": {"tags": ["Reports"], "operationId": "CloneReportInGroupAsync", "parameters": [{"name": "tenantId", "in": "path", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Workspace.V1.ReportClonedRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Workspace.V1.ReportClonedRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Workspace.V1.ReportClonedRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Workspace.V1.ReportClonedRequest"}}}}, "responses": {"200": {"description": "Success", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Workspace.V1.ReportClonedResponse"}}}}, "404": {"description": "Not Found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "400": {"description": "Bad Request", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "403": {"description": "Forbidden", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "500": {"description": "Server Error"}}}}, "/tenants/{tenantId}/analytics/reports/create": {"post": {"tags": ["Reports"], "summary": "Generates a new report", "operationId": "CreateReportAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Workspace.V1.Report"}}, "application/json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Workspace.V1.Report"}}, "text/json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Workspace.V1.Report"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Workspace.V1.Report"}}}}, "responses": {"200": {"description": "Success", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Workspace.V1.ReportCreatedResponse"}}}}, "404": {"description": "Not Found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "400": {"description": "Bad Request", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "403": {"description": "Forbidden", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "500": {"description": "Server Error"}}}}, "/tenants/{tenantId}/analytics/reports/recent": {"get": {"tags": ["Reports"], "summary": "Gets recents PowerBi reports that aren't registered", "operationId": "GetReportsForSyncingAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"200": {"description": "Success", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Workspace.V1.ReportPaginatedItemsResponse"}}}}, "400": {"description": "Bad Request", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "403": {"description": "Forbidden", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "500": {"description": "Server Error"}}}}, "/tenants/{tenantId}/analytics/reports/sync": {"post": {"tags": ["Reports"], "summary": "Syncs database and PowerBi", "operationId": "SyncWorkspacesAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Workspace.V1.SyncWorkspacesRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Workspace.V1.SyncWorkspacesRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Workspace.V1.SyncWorkspacesRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Workspace.V1.SyncWorkspacesRequest"}}}}, "responses": {"200": {"description": "Success", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Workspace.V1.SyncWorkspacesResponse"}}}}, "404": {"description": "Not Found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "400": {"description": "Bad Request", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "403": {"description": "Forbidden", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "500": {"description": "Server Error"}}}}, "/tenants/{tenantId}/analytics/reports/upload": {"post": {"tags": ["Reports"], "summary": "Uploads a report to PowerBi", "operationId": "UploadReportAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"content": {"multipart/form-data": {"schema": {"type": "object", "properties": {"File": {"type": "string", "format": "binary"}}}, "encoding": {"File": {"style": "form"}}}}}, "responses": {"200": {"description": "Success", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Workspace.V1.UploadReportResponse"}}}}, "404": {"description": "Not Found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "400": {"description": "Bad Request", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "403": {"description": "Forbidden", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "500": {"description": "Server Error"}}}}, "/tenants/{tenantId}/analytics/reports": {"get": {"tags": ["Reports"], "summary": "Retrieves a list of Analytics reports that belong to a workspace", "operationId": "GetAllTenantAnalyticsWorkspaceReportsAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"200": {"description": "List of Analytics reports that belong to a workspace returned", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AnalyticsApi.Workspace.V1.ReportPaginatedItemsResponse"}}}}, "400": {"description": "Tenant has missing/invalid values", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "403": {"description": "Missing the required permissions to access to this tenant/resource", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "500": {"description": "Oops! Can't retrieve the list of Analytics reports that belong to a workspace right now"}}}}, "/tenants/{tenantId}/validations/rule-execution-logs": {"get": {"tags": ["Rules"], "summary": "Retrieves a list of resources", "operationId": "FindValidationsRuleExecutionLogs", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string"}}, {"name": "dbEnvironmentId", "in": "query", "description": "", "schema": {"type": "string"}}, {"name": "ruleId", "in": "query", "description": "", "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"200": {"description": "List of resources returned", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.RuleExecutionLogs.V1.FindResponse"}}}}, "400": {"description": "Tenant has missing/invalid values", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "403": {"description": "Missing the required permissions to access to this tenant/resource", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "500": {"description": "Oops! Can't retrieve the list of resources right now"}}}}, "/tenants/{tenantId}/validations/rules/{ruleId}": {"delete": {"tags": ["Rules"], "summary": "Deletes an existing resource", "operationId": "DeleteValidationsRule", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "ruleId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"202": {"description": "Successfully deleted the resource"}, "400": {"description": "The request has missing/invalid values", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "403": {"description": "Missing the required permissions to access to this tenant/resource", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "500": {"description": "Oops! Can't delete your resource right now"}}}, "get": {"tags": ["Rules"], "summary": "Retrieves a resource by ID", "operationId": "GetValidationsRule", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "ruleId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"200": {"description": "Found resource returned", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Rules.V1.RuleDto"}}}}, "400": {"description": "Tenant has missing/invalid values", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "403": {"description": "Missing the required permissions to access to this tenant/resource", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "500": {"description": "Oops! Can't retrieve the resource right now"}}}, "put": {"tags": ["Rules"], "summary": "Updates a resource matching the ID", "operationId": "UpdateValidationsRule", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "ruleId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Rules.V1.UpdateRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Rules.V1.UpdateRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Rules.V1.UpdateRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Rules.V1.UpdateRequest"}}}}, "responses": {"202": {"description": "Successfully updated the resource"}, "400": {"description": "The request has missing/invalid values", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "403": {"description": "Missing the required permissions to access to this tenant/resource", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "500": {"description": "Oops! Can't update your resource right now"}}}}, "/tenants/{tenantId}/validations/rules": {"get": {"tags": ["Rules"], "summary": "Retrieves a list of resources", "operationId": "FindValidationsRules", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string"}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"200": {"description": "List of resources returned", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Rules.V1.PaginatedRules"}}}}, "400": {"description": "Tenant has missing/invalid values", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "403": {"description": "Missing the required permissions to access to this tenant/resource", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "500": {"description": "Oops! Can't retrieve the list of resources right now"}}}, "post": {"tags": ["Rules"], "summary": "Creates a new resource", "operationId": "CreateValidationsRule", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Rules.V1.CreateRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Rules.V1.CreateRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Rules.V1.CreateRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Rules.V1.CreateRequest"}}}}, "responses": {"202": {"description": "Successfully created the resource"}, "400": {"description": "The request has missing/invalid values", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "403": {"description": "Missing the required permissions to access to this tenant/resource", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "500": {"description": "Oops! Can't create your resource right now"}}}}, "/tenants/{tenantId}/subscriptions/{subscriptionId}": {"get": {"tags": ["Subscriptions"], "summary": "Retrieves a subscription", "operationId": "GetTenantSubscriptionProfileByIdAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "subscriptionId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.SubscriptionProfileResponseDto"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}, "put": {"tags": ["Subscriptions"], "summary": "Updates a subscription", "operationId": "UpdateTenantSubscriptionAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "subscriptionId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.UpdateSubscriptionRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.UpdateSubscriptionRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.UpdateSubscriptionRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.UpdateSubscriptionRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.SubscriptionUpdatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/subscriptions/applications": {"get": {"tags": ["Subscriptions"], "summary": "Retrieves a list of applications available for subscription.", "operationId": "GetAllTenantSubscriptionApplications", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ApplicationApi.Application.V2.PaginatedItemsResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/subscriptions": {"get": {"tags": ["Subscriptions"], "summary": "Retrieves a list of subscriptions associated to this tenant", "operationId": "GetAllTenantSubscriptionsAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.SubscriptionListResponseDtoPaginatedItemsViewModel"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "post": {"tags": ["Subscriptions"], "summary": "Creates a new subscription", "operationId": "CreateTenantSubscriptionAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.CreateSubscriptionRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.CreateSubscriptionRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.CreateSubscriptionRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.CreateSubscriptionRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "201": {"description": "The resource was created. The location of the resource is available in the Location header of the response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.SubscriptionCreatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/validations/tags/{tagId}": {"delete": {"tags": ["Tags"], "summary": "Deletes an existing resource", "operationId": "DeleteValidationsTag", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "tagId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"202": {"description": "Successfully deleted the resource"}, "400": {"description": "The request has missing/invalid values", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "403": {"description": "Missing the required permissions to access to this tenant/resource", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "500": {"description": "Oops! Can't delete your resource right now"}}}, "get": {"tags": ["Tags"], "summary": "Retrieves a resource by ID", "operationId": "GetValidationsTag", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "tagId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"200": {"description": "Found resource returned", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Tags.V1.TagDto"}}}}, "400": {"description": "Tenant has missing/invalid values", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "403": {"description": "Missing the required permissions to access to this tenant/resource", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "500": {"description": "Oops! Can't retrieve the resource right now"}}}, "put": {"tags": ["Tags"], "summary": "Updates a resource matching the ID", "operationId": "UpdateValidationsTag", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "tagId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Tags.V1.UpdateRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Tags.V1.UpdateRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Tags.V1.UpdateRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Tags.V1.UpdateRequest"}}}}, "responses": {"202": {"description": "Successfully updated the resource"}, "400": {"description": "The request has missing/invalid values", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "403": {"description": "Missing the required permissions to access to this tenant/resource", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "500": {"description": "Oops! Can't update your resource right now"}}}}, "/tenants/{tenantId}/validations/tags": {"get": {"tags": ["Tags"], "summary": "Retrieves a list of resources", "operationId": "FindValidationsTags", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string"}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"200": {"description": "List of resources returned", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Tags.V1.PaginatedTags"}}}}, "400": {"description": "Tenant has missing/invalid values", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "403": {"description": "Missing the required permissions to access to this tenant/resource", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "500": {"description": "Oops! Can't retrieve the list of resources right now"}}}, "post": {"tags": ["Tags"], "summary": "Creates a new resource", "operationId": "CreateValidationsTag", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Tags.V1.CreateRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Tags.V1.CreateRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Tags.V1.CreateRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Tags.V1.CreateRequest"}}}}, "responses": {"202": {"description": "Successfully created the resource"}, "400": {"description": "The request has missing/invalid values", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "403": {"description": "Missing the required permissions to access to this tenant/resource", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "500": {"description": "Oops! Can't create your resource right now"}}}}, "/tenants/{tenantId}": {"get": {"tags": ["Tenants"], "summary": "Retrieves the profile of a specific tenant", "operationId": "GetTenantByIdAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Platform.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.UserCacheResponse"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}, "put": {"tags": ["Tenants"], "summary": "Updates a tenant's profile", "description": "Note: Only the tenant's Identity Providers can be updated at this time", "operationId": "UpdateTenantAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.UpdateTenantRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.UpdateTenantRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.UpdateTenantRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.UpdateTenantRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.TenantUpdatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/users/{userId}/licenses/assignbulk": {"put": {"tags": ["Users - Licenses"], "summary": "Assigns one or more licenses to a user in the context of a specific tenant", "operationId": "AssignLicenseTenantUserBulkAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "userId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.AssignLicenseBulkRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.AssignLicenseBulkRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.AssignLicenseBulkRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.AssignLicenseBulkRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.LicenseAssignedBulkResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/users/{userId}/licenses/assign": {"put": {"tags": ["Users - Licenses"], "summary": "Assigns a license to a user in the context of a specific tenant", "operationId": "AssignLicenseTenantUserAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "userId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.AssignLicenseRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.AssignLicenseRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.AssignLicenseRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.AssignLicenseRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.LicenseAssignedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/users/{userId}/licenses/revokebulk": {"put": {"tags": ["Users - Licenses"], "summary": "Revokes one or more licenses from a user in the context of a specific tenant", "operationId": "RevokeLicenseTenantUserBulkAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "userId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.RevokeLicenseBulkRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.RevokeLicenseBulkRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.RevokeLicenseBulkRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.RevokeLicenseBulkRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.LicenseRevokedBulkResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/users/{userId}/licenses/revoke": {"put": {"tags": ["Users - Licenses"], "summary": "Revokes a license from a user in the context of a specific tenant", "operationId": "RevokeLicenseTenantUserAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "userId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.RevokeLicenseRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.RevokeLicenseRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.RevokeLicenseRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.RevokeLicenseRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.LicenseRevokedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/users/{userId}/licenses": {"get": {"tags": ["Users - Licenses"], "summary": "Retrieves a list of user licenses in the context of a specific tenant", "operationId": "GetAllTenantUserApplicationLicensesAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "userId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Platform.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.UserLicensePaginatedItemsViewModel"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/users/{userId}/activate": {"put": {"tags": ["Users"], "summary": "Activates a user", "operationId": "ActivateTenantUserAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "userId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.ActivateUserRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.ActivateUserRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.ActivateUserRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.ActivateUserRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.UserActivatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/users/{userId}/deactivate": {"put": {"tags": ["Users"], "summary": "Deactivates a user", "operationId": "DeactivateTenantUserAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "userId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.DeactivateUserRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.DeactivateUserRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.DeactivateUserRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.DeactivateUserRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.UserDeactivatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/users/{userId}/resetpassword": {"put": {"tags": ["Users"], "summary": "Resets a user's password", "description": "Note: This is only applicable to user created in the local identity provider.", "operationId": "ResetPasswordTenantUserAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "userId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.ResetPasswordRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.ResetPasswordRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.ResetPasswordRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.ResetPasswordRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.PasswordResettedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/users/{userId}": {"delete": {"tags": ["Users"], "summary": "Deletes a user", "operationId": "DeleteTenantUserAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "userId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "204": {"description": "The resource was successfully deleted."}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "get": {"tags": ["Users"], "summary": "Retrieves a user", "operationId": "GetTenantUserProfileByIdAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "userId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Platform.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.UserProfileResponseWithApplicationLicense"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}, "put": {"tags": ["Users"], "summary": "Creates or updates a user", "operationId": "UpdateTenantUserAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "userId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.UpdateUserRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.UpdateUserRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.UpdateUserRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.UpdateUserRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.UserUpdatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/users": {"get": {"tags": ["Users"], "summary": "Retrieves a list of users associated to this tenant", "operationId": "GetAllTenantUsersAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Platform.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.UserListResponseWithApplicationLicensePaginatedItemsViewModel"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "post": {"tags": ["Users"], "summary": "Creates a user in the local identity provider", "description": "Note: This is only used to create a user in the local identity provider, i.e. this cannot be used to create a user in an external identity providers such as Microsoft or Google.", "operationId": "CreateTenantLocalUserAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.CreateLocalUserRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.CreateLocalUserRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.CreateLocalUserRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.CreateLocalUserRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "201": {"description": "The resource was created. The location of the resource is available in the Location header of the response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.LocalUserCreatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/analytics/edfiadmin/instances/{edfiInstanceId}": {"get": {"tags": ["v1"], "operationId": "GetEdFiAdminInstanceByIdFromAnalyticsAsync", "parameters": [{"name": "tenantId", "in": "path", "required": true, "schema": {"type": "string"}}, {"name": "edfiInstanceId", "in": "path", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"200": {"description": "Success", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.Instance"}}}}, "400": {"description": "Bad Request", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "403": {"description": "Forbidden", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "500": {"description": "Server Error"}}}}, "/tenants/{tenantId}/analytics/gateways": {"get": {"tags": ["v1"], "operationId": "GetAllAnalyticsGatewaysAsync", "parameters": [{"name": "tenantId", "in": "path", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"200": {"description": "Success", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.Instance"}}}}, "400": {"description": "Bad Request", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "403": {"description": "Forbidden", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}, "500": {"description": "Server Error"}}}}}, "components": {"schemas": {"AnalyticsApi.Workspace.V1.AddGroupUserRequest": {"type": "object", "properties": {"groupId": {"type": "string", "nullable": true}, "identifier": {"type": "string", "nullable": true}, "userEmail": {"type": "string", "nullable": true}, "userAccessRight": {"type": "string", "nullable": true}, "principalType": {"type": "string", "nullable": true}, "addGlobalTenantUsers": {"type": "boolean"}, "tenantId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "AnalyticsApi.Workspace.V1.AnalyticsAzureAd": {"type": "object", "properties": {"clientId": {"type": "string", "nullable": true}, "azureTenantId": {"type": "string", "nullable": true}, "clientSecret": {"type": "string", "nullable": true}, "scopes": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}, "tenantId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "AnalyticsApi.Workspace.V1.AnalyticsCapacity": {"type": "object", "properties": {"capacityId": {"type": "string", "nullable": true}, "displayName": {"type": "string", "nullable": true}, "capacitySku": {"type": "string", "nullable": true}, "capacityState": {"type": "string", "nullable": true}, "capacityRegion": {"type": "string", "nullable": true}}, "additionalProperties": false}, "AnalyticsApi.Workspace.V1.AnalyticsConfiguration": {"type": "object", "properties": {"id": {"type": "string", "nullable": true}, "tenantId": {"type": "string", "nullable": true}, "sqlConnectionString": {"type": "string", "nullable": true}, "status": {"type": "string", "nullable": true}, "useEdGraphPowerBi": {"type": "boolean"}, "isGlobalConfiguration": {"type": "boolean"}, "isDefaultTenantConfiguration": {"type": "boolean"}, "azureAd": {"$ref": "#/components/schemas/AnalyticsApi.Workspace.V1.AnalyticsAzureAd"}, "powerBi": {"$ref": "#/components/schemas/AnalyticsApi.Workspace.V1.AnalyticsPowerBi"}, "selectedEdFiConnectionId": {"type": "string", "nullable": true}, "triggerOptions": {"type": "array", "items": {"$ref": "#/components/schemas/AnalyticsApi.Workspace.V1.AnalyticsTriggerOption"}, "nullable": true, "readOnly": true}, "schoolYears": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "AnalyticsApi.Workspace.V1.AnalyticsConfigurationsResponse": {"type": "object", "properties": {"tenantConfigurations": {"type": "array", "items": {"$ref": "#/components/schemas/AnalyticsApi.Workspace.V1.AnalyticsConfiguration"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "AnalyticsApi.Workspace.V1.AnalyticsGroup": {"type": "object", "properties": {"workspaceId": {"type": "string", "nullable": true}, "capacityId": {"type": "string", "nullable": true}, "name": {"type": "string", "nullable": true}, "tenantId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "AnalyticsApi.Workspace.V1.AnalyticsGroupUser": {"type": "object", "properties": {"displayName": {"type": "string", "nullable": true}, "emailAddress": {"type": "string", "nullable": true}, "groupUserAccessRight": {"type": "string", "nullable": true}, "identifier": {"type": "string", "nullable": true}, "principalType": {"type": "string", "nullable": true}}, "additionalProperties": false}, "AnalyticsApi.Workspace.V1.AnalyticsPowerBi": {"type": "object", "properties": {"capacityId": {"type": "string", "nullable": true}, "groupId": {"type": "string", "nullable": true}, "tenantId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "AnalyticsApi.Workspace.V1.AnalyticsTriggerOption": {"type": "object", "properties": {"startTime": {"type": "string", "nullable": true}, "endTime": {"type": "string", "nullable": true}, "recurrence": {"type": "string", "nullable": true}, "timeZone": {"type": "string", "nullable": true}, "interval": {"type": "string", "nullable": true}}, "additionalProperties": false}, "AnalyticsApi.Workspace.V1.AssignCapacityRequest": {"type": "object", "properties": {"groupId": {"type": "string", "nullable": true}, "capacityId": {"type": "string", "nullable": true}, "tenantId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "AnalyticsApi.Workspace.V1.CapacityResponse": {"type": "object", "properties": {"capacities": {"type": "array", "items": {"$ref": "#/components/schemas/AnalyticsApi.Workspace.V1.AnalyticsCapacity"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "AnalyticsApi.Workspace.V1.ConfigurationResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "status": {"type": "string", "nullable": true}, "id": {"type": "string", "nullable": true}}, "additionalProperties": false}, "AnalyticsApi.Workspace.V1.DatasetId": {"type": "object", "properties": {"datasetId_": {"type": "string", "nullable": true}, "isEffectiveIdentityRequired": {"type": "boolean"}}, "additionalProperties": false}, "AnalyticsApi.Workspace.V1.EmbedToken": {"type": "object", "properties": {"token": {"type": "string", "nullable": true}, "tokenId": {"type": "string", "nullable": true}, "expiration": {"type": "string", "nullable": true}}, "additionalProperties": false}, "AnalyticsApi.Workspace.V1.GroupExistsResponse": {"type": "object", "properties": {"groupExists": {"type": "boolean", "nullable": true}}, "additionalProperties": false}, "AnalyticsApi.Workspace.V1.GroupResponse": {"type": "object", "properties": {"groupId": {"type": "string", "nullable": true}, "groupName": {"type": "string", "nullable": true}, "capacityId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "AnalyticsApi.Workspace.V1.GroupUsersRequest": {"type": "object", "properties": {"groupId": {"type": "string", "nullable": true}, "topFirstN": {"type": "integer", "format": "int32", "nullable": true}, "skipFirstN": {"type": "integer", "format": "int32", "nullable": true}, "tenantId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "AnalyticsApi.Workspace.V1.GroupUsersResponse": {"type": "object", "properties": {"groupUsers": {"type": "array", "items": {"$ref": "#/components/schemas/AnalyticsApi.Workspace.V1.AnalyticsGroupUser"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "AnalyticsApi.Workspace.V1.HasValidConfigurationResponse": {"type": "object", "properties": {"isConfigurationValid": {"type": "boolean"}}, "additionalProperties": false}, "AnalyticsApi.Workspace.V1.Report": {"type": "object", "properties": {"id": {"type": "string", "nullable": true}, "tenantId": {"type": "string", "nullable": true}, "reportId": {"type": "string", "nullable": true}, "groupId": {"type": "string", "nullable": true}, "datasetIds": {"type": "array", "items": {"$ref": "#/components/schemas/AnalyticsApi.Workspace.V1.DatasetId"}, "nullable": true, "readOnly": true}, "name": {"type": "string", "nullable": true}, "reportName": {"type": "string", "nullable": true}, "shortDescription": {"type": "string", "nullable": true}, "description": {"type": "string", "nullable": true}, "isInternal": {"type": "boolean"}, "isVisible": {"type": "boolean"}}, "additionalProperties": false, "description": "Entities"}, "AnalyticsApi.Workspace.V1.ReportClonedRequest": {"type": "object", "properties": {"sourceReportId": {"type": "string", "nullable": true}, "sourceReportGroupId": {"type": "string", "nullable": true}, "targetReportGroupId": {"type": "string", "nullable": true}, "reportName": {"type": "string", "nullable": true}, "tenantId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "AnalyticsApi.Workspace.V1.ReportClonedResponse": {"type": "object", "properties": {"targetReportId": {"type": "string", "nullable": true}, "targetReportName": {"type": "string", "nullable": true}, "targetReportDatasetId": {"type": "string", "nullable": true}, "importState": {"type": "string", "nullable": true}}, "additionalProperties": false}, "AnalyticsApi.Workspace.V1.ReportCreatedResponse": {"type": "object", "properties": {"id": {"type": "string", "nullable": true}, "tenantId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "AnalyticsApi.Workspace.V1.ReportDatasetId": {"type": "object", "properties": {"datasetId": {"type": "string", "nullable": true}, "qnaEmbedUrl": {"type": "string", "nullable": true}, "isEffectiveIdentityRequired": {"type": "boolean"}}, "additionalProperties": false}, "AnalyticsApi.Workspace.V1.ReportDatasetIdsResponse": {"type": "object", "properties": {"reportDatasets": {"type": "array", "items": {"$ref": "#/components/schemas/AnalyticsApi.Workspace.V1.ReportDatasetId"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "AnalyticsApi.Workspace.V1.ReportPaginatedItemsResponse": {"type": "object", "properties": {"pageIndex": {"type": "integer", "format": "int32"}, "pageSize": {"type": "integer", "format": "int32"}, "count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/AnalyticsApi.Workspace.V1.Report"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "AnalyticsApi.Workspace.V1.ReportResponse": {"type": "object", "properties": {"type": {"type": "string", "nullable": true}, "embedToken": {"$ref": "#/components/schemas/AnalyticsApi.Workspace.V1.EmbedToken"}, "reportEmbedUrl": {"type": "string", "nullable": true}, "report": {"$ref": "#/components/schemas/AnalyticsApi.Workspace.V1.Report"}}, "additionalProperties": false}, "AnalyticsApi.Workspace.V1.SqlConnectionRequest": {"type": "object", "properties": {"sqlConnectionString": {"type": "string", "nullable": true}}, "additionalProperties": false}, "AnalyticsApi.Workspace.V1.SyncWorkspacesRequest": {"type": "object", "properties": {"workspaceName": {"type": "string", "nullable": true}, "tenantId": {"type": "string", "nullable": true}, "resetInstance": {"type": "boolean"}, "runEtlNow": {"type": "boolean"}}, "additionalProperties": false}, "AnalyticsApi.Workspace.V1.SyncWorkspacesResponse": {"type": "object", "additionalProperties": false}, "AnalyticsApi.Workspace.V1.TenantConfigurationResponse": {"type": "object", "properties": {"configurations": {"type": "array", "items": {"$ref": "#/components/schemas/AnalyticsApi.Workspace.V1.ConfigurationResponse"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "AnalyticsApi.Workspace.V1.TestConnectionResponse": {"type": "object", "properties": {"isConnectionSuccessful": {"type": "boolean"}}, "additionalProperties": false}, "AnalyticsApi.Workspace.V1.UploadReportResponse": {"type": "object", "properties": {"powerBiReportId": {"type": "string", "nullable": true}, "powerBiReportName": {"type": "string", "nullable": true}, "powerBiReportDatasetIds": {"type": "array", "items": {"$ref": "#/components/schemas/AnalyticsApi.Workspace.V1.DatasetId"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "ApplicationApi.Application.V2.ApplicationListResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "applicationId": {"type": "string", "nullable": true}, "applicationName": {"type": "string", "nullable": true}, "version": {"type": "string", "nullable": true}, "tags": {"type": "string", "nullable": true}, "groups": {"type": "string", "nullable": true}, "applicationStatus": {"$ref": "#/components/schemas/ApplicationApi.Application.V2.ApplicationStatus"}, "roles": {"type": "array", "items": {"$ref": "#/components/schemas/ApplicationApi.Application.V2.Role"}, "nullable": true, "readOnly": true}, "createdBy": {"type": "string", "nullable": true}, "createdDateTime": {"type": "string", "nullable": true}, "lastModifiedBy": {"type": "string", "nullable": true}, "lastModifiedDateTime": {"type": "string", "nullable": true}, "subscriptionType": {"type": "string", "nullable": true}}, "additionalProperties": false}, "ApplicationApi.Application.V2.ApplicationProfileResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "applicationId": {"type": "string", "nullable": true}, "applicationType": {"$ref": "#/components/schemas/ApplicationApi.Application.V2.ApplicationType"}, "applicationName": {"type": "string", "nullable": true}, "applicationUri": {"type": "string", "nullable": true}, "version": {"type": "string", "nullable": true}, "tooltipText": {"type": "string", "nullable": true}, "applicationDescription": {"type": "string", "nullable": true}, "tags": {"type": "string", "nullable": true}, "groups": {"type": "string", "nullable": true}, "applicationStatus": {"$ref": "#/components/schemas/ApplicationApi.Application.V2.ApplicationStatus"}, "openInNewWindow": {"type": "boolean"}, "roles": {"type": "array", "items": {"$ref": "#/components/schemas/ApplicationApi.Application.V2.Role"}, "nullable": true, "readOnly": true}, "createdBy": {"type": "string", "nullable": true}, "createdDateTime": {"type": "string", "nullable": true}, "lastModifiedBy": {"type": "string", "nullable": true}, "lastModifiedDateTime": {"type": "string", "nullable": true}, "clientId": {"type": "string", "nullable": true}, "subscriptionType": {"type": "string", "nullable": true}}, "additionalProperties": false}, "ApplicationApi.Application.V2.ApplicationStatus": {"enum": ["Unknown", "Draft", "Published"], "type": "string"}, "ApplicationApi.Application.V2.ApplicationType": {"enum": ["Unknown", "SSO", "Link"], "type": "string"}, "ApplicationApi.Application.V2.PaginatedItemsResponse": {"type": "object", "properties": {"pageIndex": {"type": "integer", "format": "int32"}, "pageSize": {"type": "integer", "format": "int32"}, "count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/ApplicationApi.Application.V2.ApplicationListResponse"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "ApplicationApi.Application.V2.Role": {"type": "object", "properties": {"roleName": {"type": "string", "nullable": true}, "isDefault": {"type": "boolean"}}, "additionalProperties": false}, "DataSyncApi.Connection.V1.ConnectionListResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "connectionId": {"type": "string", "nullable": true}, "name": {"type": "string", "nullable": true}, "providerId": {"type": "string", "nullable": true}, "providerName": {"type": "string", "nullable": true}, "connectionTypeId": {"type": "string", "nullable": true}, "connectionTypeName": {"type": "string", "nullable": true}, "createdBy": {"type": "string", "nullable": true}, "createdDateTime": {"type": "string", "nullable": true}, "lastModifiedBy": {"type": "string", "nullable": true}, "lastModifiedDateTime": {"type": "string", "nullable": true}}, "additionalProperties": false}, "DataSyncApi.Connection.V1.ConnectionListResponsePaginatedItemsViewModel": {"type": "object", "properties": {"pageIndex": {"type": "integer", "format": "int32"}, "pageSize": {"type": "integer", "format": "int32"}, "count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/DataSyncApi.Connection.V1.ConnectionListResponse"}, "nullable": true}}, "additionalProperties": false}, "DataSyncApi.Connection.V1.ConnectionMetadata": {"type": "object", "properties": {"code": {"type": "string", "nullable": true}, "value": {"type": "string", "nullable": true}, "isSecret": {"type": "boolean"}}, "additionalProperties": false}, "DataSyncApi.Connection.V1.ConnectionProfileResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "connectionId": {"type": "string", "nullable": true}, "name": {"type": "string", "nullable": true}, "connectionMetadata": {"type": "array", "items": {"$ref": "#/components/schemas/DataSyncApi.Connection.V1.ConnectionMetadata"}, "nullable": true, "readOnly": true}, "providerId": {"type": "string", "nullable": true}, "providerName": {"type": "string", "nullable": true}, "connectionTypeId": {"type": "string", "nullable": true}, "connectionTypeName": {"type": "string", "nullable": true}, "createdBy": {"type": "string", "nullable": true}, "createdDateTime": {"type": "string", "nullable": true}, "lastModifiedBy": {"type": "string", "nullable": true}, "lastModifiedDateTime": {"type": "string", "nullable": true}}, "additionalProperties": false}, "DataSyncApi.Connection.V1.CreateConnectionRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "connectionId": {"type": "string", "nullable": true}, "name": {"type": "string", "nullable": true}, "connectionMetadata": {"type": "array", "items": {"$ref": "#/components/schemas/DataSyncApi.Connection.V1.ConnectionMetadata"}, "nullable": true, "readOnly": true}, "providerId": {"type": "string", "nullable": true}, "connectionTypeId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "DataSyncApi.Connection.V1.DeleteConnectionRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "connectionId": {"type": "string", "nullable": true}, "reason": {"type": "string", "nullable": true}}, "additionalProperties": false}, "DataSyncApi.Connection.V1.UpdateConnectionRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "connectionId": {"type": "string", "nullable": true}, "name": {"type": "string", "nullable": true}, "connectionMetadata": {"type": "array", "items": {"$ref": "#/components/schemas/DataSyncApi.Connection.V1.ConnectionMetadata"}, "nullable": true, "readOnly": true}, "providerId": {"type": "string", "nullable": true}, "connectionTypeId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "DataSyncApi.Job.V1.ActivateJobRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "jobId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "DataSyncApi.Job.V1.CancelJobRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "jobId": {"type": "string", "nullable": true}, "childJobId": {"type": "string", "nullable": true}, "jobExecutionId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "DataSyncApi.Job.V1.ChildJob": {"type": "object", "properties": {"jobId": {"type": "string", "nullable": true}, "jobExecutionId": {"type": "string", "nullable": true}, "childJobId": {"type": "string", "nullable": true}, "childJobName": {"type": "string", "nullable": true}, "jobExecutionStatus": {"$ref": "#/components/schemas/DataSyncApi.Job.V1.JobExecutionStatus"}, "jobExecutionStartDateTime": {"type": "string", "nullable": true}, "jobExecutionEndDateTime": {"type": "string", "nullable": true}, "metrics": {"type": "array", "items": {"$ref": "#/components/schemas/DataSyncApi.Job.V1.Metric"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "DataSyncApi.Job.V1.CreateJobRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "jobId": {"type": "string", "nullable": true}, "name": {"type": "string", "nullable": true}, "jobTypeId": {"type": "string", "nullable": true}, "sourceConnectionId": {"type": "string", "nullable": true}, "destinationConnectionId": {"type": "string", "nullable": true}, "profileId": {"type": "string", "nullable": true}, "jobPoints": {"type": "integer", "format": "int32"}, "applicationId": {"type": "string", "nullable": true}, "dataRefreshType": {"$ref": "#/components/schemas/DataSyncApi.Job.V1.DataRefreshType"}, "dataRefreshSpecificDate": {"type": "string", "nullable": true}, "maxApiFailure": {"type": "integer", "format": "int32"}, "maxApiRetry": {"type": "integer", "format": "int32"}, "jobCompleteCallbackUrl": {"type": "string", "nullable": true}, "jobMetadata": {"type": "array", "items": {"$ref": "#/components/schemas/DataSyncApi.Job.V1.JobMetadata"}, "nullable": true, "readOnly": true}, "schedule": {"$ref": "#/components/schemas/DataSyncApi.Job.V1.Schedule"}, "notificationEmails": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "DataSyncApi.Job.V1.DataRefreshType": {"enum": ["Unknown", "Full", "Deltasincelastjobexecution", "Deltasincespecificdatetime"], "type": "string"}, "DataSyncApi.Job.V1.DeactivateJobRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "jobId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "DataSyncApi.Job.V1.DeleteJobRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "jobId": {"type": "string", "nullable": true}, "reason": {"type": "string", "nullable": true}}, "additionalProperties": false}, "DataSyncApi.Job.V1.ExecuteJobRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "jobId": {"type": "string", "nullable": true}, "childJobId": {"type": "string", "nullable": true}, "dataRefreshType": {"$ref": "#/components/schemas/DataSyncApi.Job.V1.DataRefreshType"}, "dataRefreshSpecificDate": {"type": "string", "nullable": true}}, "additionalProperties": false}, "DataSyncApi.Job.V1.JobExecutionStatus": {"enum": ["Unknown", "Queued", "Running", "Completed", "CompletedWithErrors", "Cancelled", "Error", "QueuedForCancel"], "type": "string"}, "DataSyncApi.Job.V1.JobListResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "jobId": {"type": "string", "nullable": true}, "name": {"type": "string", "nullable": true}, "jobTypeId": {"type": "string", "nullable": true}, "jobTypeName": {"type": "string", "nullable": true}, "sourceConnectionId": {"type": "string", "nullable": true}, "destinationConnectionId": {"type": "string", "nullable": true}, "profileId": {"type": "string", "nullable": true}, "applicationId": {"type": "string", "nullable": true}, "schedule": {"$ref": "#/components/schemas/DataSyncApi.Job.V1.Schedule"}, "jobStatus": {"$ref": "#/components/schemas/DataSyncApi.Job.V1.JobStatus"}, "jobExecutionId": {"type": "string", "nullable": true}, "jobExecutionStatus": {"$ref": "#/components/schemas/DataSyncApi.Job.V1.JobExecutionStatus"}, "jobExecutionStartDateTime": {"type": "string", "nullable": true}, "jobExecutionEndDateTime": {"type": "string", "nullable": true}, "metrics": {"type": "array", "items": {"$ref": "#/components/schemas/DataSyncApi.Job.V1.Metric"}, "nullable": true, "readOnly": true}, "childJobs": {"type": "array", "items": {"$ref": "#/components/schemas/DataSyncApi.Job.V1.ChildJob"}, "nullable": true, "readOnly": true}, "createdBy": {"type": "string", "nullable": true}, "createdDateTime": {"type": "string", "nullable": true}, "lastModifiedBy": {"type": "string", "nullable": true}, "lastModifiedDateTime": {"type": "string", "nullable": true}}, "additionalProperties": false}, "DataSyncApi.Job.V1.JobListResponsePaginatedItemsViewModel": {"type": "object", "properties": {"pageIndex": {"type": "integer", "format": "int32"}, "pageSize": {"type": "integer", "format": "int32"}, "count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/DataSyncApi.Job.V1.JobListResponse"}, "nullable": true}}, "additionalProperties": false}, "DataSyncApi.Job.V1.JobMetadata": {"type": "object", "properties": {"code": {"type": "string", "nullable": true}, "value": {"type": "string", "nullable": true}}, "additionalProperties": false}, "DataSyncApi.Job.V1.JobProfileResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "jobId": {"type": "string", "nullable": true}, "name": {"type": "string", "nullable": true}, "jobTypeId": {"type": "string", "nullable": true}, "jobTypeName": {"type": "string", "nullable": true}, "sourceConnectionId": {"type": "string", "nullable": true}, "destinationConnectionId": {"type": "string", "nullable": true}, "profileId": {"type": "string", "nullable": true}, "profileName": {"type": "string", "nullable": true}, "applicationId": {"type": "string", "nullable": true}, "jobPoints": {"type": "integer", "format": "int32"}, "dataRefreshType": {"$ref": "#/components/schemas/DataSyncApi.Job.V1.DataRefreshType"}, "dataRefreshSpecificDate": {"type": "string", "nullable": true}, "maxApiFailure": {"type": "integer", "format": "int32"}, "maxApiRetry": {"type": "integer", "format": "int32"}, "jobCompleteCallbackUrl": {"type": "string", "nullable": true}, "jobMetadata": {"type": "array", "items": {"$ref": "#/components/schemas/DataSyncApi.Job.V1.JobMetadata"}, "nullable": true, "readOnly": true}, "schedule": {"$ref": "#/components/schemas/DataSyncApi.Job.V1.Schedule"}, "notificationEmails": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}, "jobStatus": {"$ref": "#/components/schemas/DataSyncApi.Job.V1.JobStatus"}, "jobExecutionId": {"type": "string", "nullable": true}, "jobExecutionStatus": {"$ref": "#/components/schemas/DataSyncApi.Job.V1.JobExecutionStatus"}, "jobExecutionStartDateTime": {"type": "string", "nullable": true}, "jobExecutionEndDateTime": {"type": "string", "nullable": true}, "metrics": {"type": "array", "items": {"$ref": "#/components/schemas/DataSyncApi.Job.V1.Metric"}, "nullable": true, "readOnly": true}, "childJobs": {"type": "array", "items": {"$ref": "#/components/schemas/DataSyncApi.Job.V1.ChildJob"}, "nullable": true, "readOnly": true}, "createdBy": {"type": "string", "nullable": true}, "createdDateTime": {"type": "string", "nullable": true}, "lastModifiedBy": {"type": "string", "nullable": true}, "lastModifiedDateTime": {"type": "string", "nullable": true}}, "additionalProperties": false}, "DataSyncApi.Job.V1.JobStatus": {"enum": ["Unknown", "Active", "Deactivated", "QueuedForDelete", "QueuedForScheduleRestart"], "type": "string"}, "DataSyncApi.Job.V1.Metric": {"type": "object", "properties": {"entity": {"type": "string", "nullable": true}, "processed": {"type": "integer", "format": "int32"}, "success": {"type": "integer", "format": "int32"}, "errors": {"type": "integer", "format": "int32"}}, "additionalProperties": false}, "DataSyncApi.Job.V1.Schedule": {"type": "object", "properties": {"enabled": {"type": "boolean"}, "beginDate": {"type": "string", "nullable": true}, "endDate": {"type": "string", "nullable": true}, "cron": {"type": "string", "nullable": true}, "timeZone": {"type": "string", "nullable": true}}, "additionalProperties": false}, "DataSyncApi.Job.V1.UpdateJobRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "jobId": {"type": "string", "nullable": true}, "name": {"type": "string", "nullable": true}, "sourceConnectionId": {"type": "string", "nullable": true}, "destinationConnectionId": {"type": "string", "nullable": true}, "profileId": {"type": "string", "nullable": true}, "jobPoints": {"type": "integer", "format": "int32"}, "applicationId": {"type": "string", "nullable": true}, "dataRefreshType": {"$ref": "#/components/schemas/DataSyncApi.Job.V1.DataRefreshType"}, "dataRefreshSpecificDate": {"type": "string", "nullable": true}, "maxApiFailure": {"type": "integer", "format": "int32"}, "maxApiRetry": {"type": "integer", "format": "int32"}, "jobCompleteCallbackUrl": {"type": "string", "nullable": true}, "jobMetadata": {"type": "array", "items": {"$ref": "#/components/schemas/DataSyncApi.Job.V1.JobMetadata"}, "nullable": true, "readOnly": true}, "schedule": {"$ref": "#/components/schemas/DataSyncApi.Job.V1.Schedule"}, "notificationEmails": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "DataSyncApi.JobExecution.V1.ChildJob": {"type": "object", "properties": {"jobId": {"type": "string", "nullable": true}, "jobExecutionId": {"type": "string", "nullable": true}, "childJobId": {"type": "string", "nullable": true}, "childJobName": {"type": "string", "nullable": true}, "jobExecutionStatus": {"$ref": "#/components/schemas/DataSyncApi.JobExecution.V1.JobExecutionStatus"}, "jobExecutionStartDateTime": {"type": "string", "nullable": true}, "jobExecutionEndDateTime": {"type": "string", "nullable": true}, "metrics": {"type": "array", "items": {"$ref": "#/components/schemas/DataSyncApi.JobExecution.V1.Metric"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "DataSyncApi.JobExecution.V1.JobExecutionListResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "jobId": {"type": "string", "nullable": true}, "applicationId": {"type": "string", "nullable": true}, "jobExecutionId": {"type": "string", "nullable": true}, "jobExecutionStatus": {"$ref": "#/components/schemas/DataSyncApi.JobExecution.V1.JobExecutionStatus"}, "jobExecutionStartDateTime": {"type": "string", "nullable": true}, "jobExecutionEndDateTime": {"type": "string", "nullable": true}, "childJobs": {"type": "array", "items": {"$ref": "#/components/schemas/DataSyncApi.JobExecution.V1.ChildJob"}, "nullable": true, "readOnly": true}, "metrics": {"type": "array", "items": {"$ref": "#/components/schemas/DataSyncApi.JobExecution.V1.Metric"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "DataSyncApi.JobExecution.V1.JobExecutionListResponsePaginatedItemsViewModel": {"type": "object", "properties": {"pageIndex": {"type": "integer", "format": "int32"}, "pageSize": {"type": "integer", "format": "int32"}, "count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/DataSyncApi.JobExecution.V1.JobExecutionListResponse"}, "nullable": true}}, "additionalProperties": false}, "DataSyncApi.JobExecution.V1.JobExecutionStatus": {"enum": ["Unknown", "Queued", "Running", "Completed", "CompletedWithErrors", "Cancelled", "Error"], "type": "string"}, "DataSyncApi.JobExecution.V1.Metric": {"type": "object", "properties": {"entity": {"type": "string", "nullable": true}, "processed": {"type": "integer", "format": "int32"}, "success": {"type": "integer", "format": "int32"}, "errors": {"type": "integer", "format": "int32"}}, "additionalProperties": false}, "DataSyncApi.JobExecutionLog.V1.JobExecutionLogEntry": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "jobId": {"type": "string", "nullable": true}, "jobExecutionId": {"type": "string", "nullable": true}, "message": {"type": "string", "nullable": true}, "messageType": {"$ref": "#/components/schemas/DataSyncApi.JobExecutionLog.V1.MessageType"}, "loggedDateTime": {"type": "string", "nullable": true}, "errorCode": {"type": "string", "nullable": true}}, "additionalProperties": false}, "DataSyncApi.JobExecutionLog.V1.JobExecutionLogEntryPaginatedItemsViewModel": {"type": "object", "properties": {"pageIndex": {"type": "integer", "format": "int32"}, "pageSize": {"type": "integer", "format": "int32"}, "count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/DataSyncApi.JobExecutionLog.V1.JobExecutionLogEntry"}, "nullable": true}}, "additionalProperties": false}, "DataSyncApi.JobExecutionLog.V1.MessageType": {"enum": ["Information", "Warning", "SyncError", "FatalError"], "type": "string"}, "DataSyncApi.JobType.V1.JobMetadataField": {"type": "object", "properties": {"tab": {"type": "string", "nullable": true}, "code": {"type": "string", "nullable": true}, "label": {"type": "string", "nullable": true}, "validation": {"type": "string", "nullable": true}, "order": {"type": "string", "nullable": true}, "display": {"type": "boolean"}, "defaultValue": {"type": "string", "nullable": true}, "type": {"type": "string", "nullable": true}, "values": {"type": "string", "nullable": true}, "api": {"type": "string", "nullable": true}, "isSecret": {"type": "boolean"}}, "additionalProperties": false}, "DataSyncApi.JobType.V1.JobTypeListResponse": {"type": "object", "properties": {"jobTypeId": {"type": "string", "nullable": true}, "name": {"type": "string", "nullable": true}, "sourceConnectionTypeId": {"type": "string", "nullable": true}, "destinationConnectionTypeId": {"type": "string", "nullable": true}, "sourceConnectionRequired": {"type": "boolean"}, "destinationConnectionRequired": {"type": "boolean"}, "profiles": {"type": "array", "items": {"$ref": "#/components/schemas/DataSyncApi.JobType.V1.Profile"}, "nullable": true, "readOnly": true}, "createdBy": {"type": "string", "nullable": true}, "createdDateTime": {"type": "string", "nullable": true}, "lastModifiedBy": {"type": "string", "nullable": true}, "lastModifiedDateTime": {"type": "string", "nullable": true}}, "additionalProperties": false}, "DataSyncApi.JobType.V1.JobTypeListResponsePaginatedItemsViewModel": {"type": "object", "properties": {"pageIndex": {"type": "integer", "format": "int32"}, "pageSize": {"type": "integer", "format": "int32"}, "count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/DataSyncApi.JobType.V1.JobTypeListResponse"}, "nullable": true}}, "additionalProperties": false}, "DataSyncApi.JobType.V1.JobTypeProfileResponse": {"type": "object", "properties": {"jobTypeId": {"type": "string", "nullable": true}, "name": {"type": "string", "nullable": true}, "description": {"type": "string", "nullable": true}, "jobPoints": {"type": "integer", "format": "int32"}, "hasChildJobs": {"type": "boolean"}, "childJobField": {"type": "string", "nullable": true}, "sourceConnectionTypeId": {"type": "string", "nullable": true}, "destinationConnectionTypeId": {"type": "string", "nullable": true}, "sourceConnectionRequired": {"type": "boolean"}, "destinationConnectionRequired": {"type": "boolean"}, "jobMetadataFields": {"type": "array", "items": {"$ref": "#/components/schemas/DataSyncApi.JobType.V1.JobMetadataField"}, "nullable": true, "readOnly": true}, "profiles": {"type": "array", "items": {"$ref": "#/components/schemas/DataSyncApi.JobType.V1.Profile"}, "nullable": true, "readOnly": true}, "createdBy": {"type": "string", "nullable": true}, "createdDateTime": {"type": "string", "nullable": true}, "lastModifiedBy": {"type": "string", "nullable": true}, "lastModifiedDateTime": {"type": "string", "nullable": true}}, "additionalProperties": false}, "DataSyncApi.JobType.V1.Profile": {"type": "object", "properties": {"jobTypeId": {"type": "string", "nullable": true}, "profileId": {"type": "string", "nullable": true}, "name": {"type": "string", "nullable": true}, "description": {"type": "string", "nullable": true}, "actorType": {"type": "string", "nullable": true}}, "additionalProperties": false}, "DataSyncApi.Provider.V1.ConnectionMetadataField": {"type": "object", "properties": {"tab": {"type": "string", "nullable": true}, "code": {"type": "string", "nullable": true}, "label": {"type": "string", "nullable": true}, "validation": {"type": "string", "nullable": true}, "order": {"type": "string", "nullable": true}, "display": {"type": "boolean"}, "defaultValue": {"type": "string", "nullable": true}, "type": {"type": "string", "nullable": true}, "values": {"type": "string", "nullable": true}, "api": {"type": "string", "nullable": true}, "isSecret": {"type": "boolean"}}, "additionalProperties": false}, "DataSyncApi.Provider.V1.ConnectionType": {"type": "object", "properties": {"providerId": {"type": "string", "nullable": true}, "connectionTypeId": {"type": "string", "nullable": true}, "name": {"type": "string", "nullable": true}, "description": {"type": "string", "nullable": true}, "documentationUri": {"type": "string", "nullable": true}, "connectionMetadataFields": {"type": "array", "items": {"$ref": "#/components/schemas/DataSyncApi.Provider.V1.ConnectionMetadataField"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "DataSyncApi.Provider.V1.ProviderListResponse": {"type": "object", "properties": {"providerId": {"type": "string", "nullable": true}, "name": {"type": "string", "nullable": true}, "description": {"type": "string", "nullable": true}, "iconUri": {"type": "string", "nullable": true}, "connectionTypes": {"type": "array", "items": {"$ref": "#/components/schemas/DataSyncApi.Provider.V1.ConnectionType"}, "nullable": true, "readOnly": true}, "createdBy": {"type": "string", "nullable": true}, "createdDateTime": {"type": "string", "nullable": true}, "lastModifiedBy": {"type": "string", "nullable": true}, "lastModifiedDateTime": {"type": "string", "nullable": true}}, "additionalProperties": false}, "DataSyncApi.Provider.V1.ProviderListResponsePaginatedItemsViewModel": {"type": "object", "properties": {"pageIndex": {"type": "integer", "format": "int32"}, "pageSize": {"type": "integer", "format": "int32"}, "count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/DataSyncApi.Provider.V1.ProviderListResponse"}, "nullable": true}}, "additionalProperties": false}, "DataSyncApi.Provider.V1.ProviderProfileResponse": {"type": "object", "properties": {"providerId": {"type": "string", "nullable": true}, "name": {"type": "string", "nullable": true}, "description": {"type": "string", "nullable": true}, "iconUri": {"type": "string", "nullable": true}, "connectionTypes": {"type": "array", "items": {"$ref": "#/components/schemas/DataSyncApi.Provider.V1.ConnectionType"}, "nullable": true, "readOnly": true}, "createdBy": {"type": "string", "nullable": true}, "createdDateTime": {"type": "string", "nullable": true}, "lastModifiedBy": {"type": "string", "nullable": true}, "lastModifiedDateTime": {"type": "string", "nullable": true}}, "additionalProperties": false}, "EdGraph.Common.Errors.Core.ProblemDetails": {"type": "object", "properties": {"type": {"type": "string", "nullable": true}, "status": {"type": "integer", "format": "int32"}, "title": {"type": "string", "nullable": true}, "details": {"type": "string", "nullable": true}, "instance": {"type": "string", "nullable": true}, "extensions": {"type": "object", "additionalProperties": {"nullable": true}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.Role": {"type": "object", "properties": {"roleName": {"type": "string", "nullable": true}, "isDefault": {"type": "boolean"}}, "additionalProperties": false}, "EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.SubscriptionListResponseDto": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "subscriptionId": {"type": "string", "nullable": true}, "applicationId": {"type": "string", "nullable": true}, "applicationName": {"type": "string", "nullable": true}, "applicationRoles": {"type": "array", "items": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.Role"}, "nullable": true}, "startDateTime": {"type": "string", "nullable": true}, "endDateTime": {"type": "string", "nullable": true}, "actualEndDateTime": {"type": "string", "nullable": true}, "gracePeriod": {"type": "integer", "format": "int32"}, "numberOfLicenses": {"type": "integer", "format": "int32"}, "assignedLicenses": {"type": "integer", "format": "int32"}, "maxAssignedLicenses": {"type": "integer", "format": "int32"}, "lastMaxAssignedLicensesDateTime": {"type": "string", "nullable": true}, "licenseType": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.LicenseType"}, "subscriptionStatus": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.SubscriptionStatus"}, "autoAssign": {"type": "boolean"}, "createdBy": {"type": "string", "nullable": true}, "createdDateTime": {"type": "string", "nullable": true}, "lastModifiedBy": {"type": "string", "nullable": true}, "lastModifiedDateTime": {"type": "string", "nullable": true}}, "additionalProperties": false}, "EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.SubscriptionListResponseDtoPaginatedItemsViewModel": {"type": "object", "properties": {"pageIndex": {"type": "integer", "format": "int32"}, "pageSize": {"type": "integer", "format": "int32"}, "count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.SubscriptionListResponseDto"}, "nullable": true}}, "additionalProperties": false}, "EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.SubscriptionProfileResponseDto": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "subscriptionId": {"type": "string", "nullable": true}, "applicationId": {"type": "string", "nullable": true}, "applicationName": {"type": "string", "nullable": true}, "startDateTime": {"type": "string", "nullable": true}, "endDateTime": {"type": "string", "nullable": true}, "actualEndDateTime": {"type": "string", "nullable": true}, "gracePeriod": {"type": "integer", "format": "int32"}, "numberOfLicenses": {"type": "integer", "format": "int32"}, "assignedLicenses": {"type": "integer", "format": "int32"}, "maxAssignedLicenses": {"type": "integer", "format": "int32"}, "lastMaxAssignedLicensesDateTime": {"type": "string", "nullable": true}, "licenseType": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.LicenseType"}, "subscriptionStatus": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.SubscriptionStatus"}, "autoAssign": {"type": "boolean"}, "createdBy": {"type": "string", "nullable": true}, "createdDateTime": {"type": "string", "nullable": true}, "lastModifiedBy": {"type": "string", "nullable": true}, "lastModifiedDateTime": {"type": "string", "nullable": true}}, "additionalProperties": false}, "EdGraph.Platform.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.ApplicationRole": {"type": "object", "properties": {"role": {"type": "string", "description": "The role associated with the application", "nullable": true}, "isAssigned": {"type": "boolean", "description": "Indicates if the user is assigned license for this application"}}, "additionalProperties": false}, "EdGraph.Platform.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.ApplicationTileResponseWithUserApplicationLicense": {"type": "object", "properties": {"applicationTenantId": {"type": "string", "description": "The Tenant this application belongs to", "nullable": true}, "applicationId": {"type": "string", "nullable": true}, "applicationName": {"type": "string", "nullable": true}, "applicationUri": {"type": "string", "nullable": true}, "version": {"type": "string", "nullable": true}, "tooltipText": {"type": "string", "nullable": true}, "tags": {"type": "string", "nullable": true}, "groups": {"type": "string", "nullable": true}, "lightIconUrl": {"type": "string", "nullable": true}, "darkIconUrl": {"type": "string", "nullable": true}, "lightBackgroundTileUrl": {"type": "string", "nullable": true}, "darkBackgroundTileUrl": {"type": "string", "nullable": true}, "lightOverlayTileUrl": {"type": "string", "nullable": true}, "darkOverlayTileUrl": {"type": "string", "nullable": true}, "showInAppLauncher": {"type": "boolean"}, "showInQuickLauncher": {"type": "boolean"}, "openInNewWindow": {"type": "boolean"}, "isTenantSubscribed": {"type": "boolean"}, "subscriptionTenantId": {"type": "string", "description": "The Tenant Id the subscription belongs to", "nullable": true}, "tenantSubscriptionId": {"type": "string", "description": "The Tenant subscription Id", "nullable": true}, "tenantSubscriptionStartDateTime": {"type": "string", "description": "The Tenant subscription start date", "nullable": true}, "tenantSubscriptionEndDateTime": {"type": "string", "description": "The Tenant subscription end date", "nullable": true}, "tenantSubscriptionActualEndDateTime": {"type": "string", "description": "The Tenant subscription end date", "nullable": true}, "isUserLicensed": {"type": "boolean"}}, "additionalProperties": false}, "EdGraph.Platform.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.ApplicationTilesResponseWithUserApplicationLicense": {"type": "object", "properties": {"data": {"type": "array", "items": {"$ref": "#/components/schemas/EdGraph.Platform.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.ApplicationTileResponseWithUserApplicationLicense"}, "nullable": true}}, "additionalProperties": false}, "EdGraph.Platform.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.ConnectionEdFiResponse": {"type": "object", "properties": {"value": {"type": "string", "nullable": true}, "label": {"type": "string", "nullable": true}, "isSelected": {"type": "boolean"}}, "additionalProperties": false}, "EdGraph.Platform.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.TenantStatus": {"enum": ["Unknown", "Active", "Inactive"], "type": "string"}, "EdGraph.Platform.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.UserCacheResponse": {"type": "object", "properties": {"userName": {"type": "string", "description": "The user name for this user.", "nullable": true}, "email": {"type": "string", "description": "The email address for this user.", "nullable": true}, "firstName": {"type": "string", "description": "The first name for this user.", "nullable": true}, "lastName": {"type": "string", "description": "The last name for this user.", "nullable": true}, "preferences": {"type": "array", "items": {"$ref": "#/components/schemas/IdentityApi.User.V1.Preference"}, "description": "List of preferences associated with this user", "nullable": true}, "tenants": {"type": "array", "items": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.TenantListResponse"}, "description": "List of tenants associated with this user", "nullable": true}, "browserDebugEnabled": {"type": "boolean", "description": "Flag to indicate if the debug mode for user is enabled"}}, "additionalProperties": false}, "EdGraph.Platform.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.UserLicense": {"type": "object", "properties": {"subscriptionTenantId": {"type": "string", "description": "The Tenant Id the subscription belongs to", "nullable": true}, "isTenantSubscribed": {"type": "boolean", "description": "The Tenant has a subscription license for this application"}, "tenantSubscriptionId": {"type": "string", "description": "The Tenant subscription Id", "nullable": true}, "tenantSubscriptionStartDateTime": {"type": "string", "description": "The Tenant subscription start date", "nullable": true}, "tenantSubscriptionEndDateTime": {"type": "string", "description": "The Tenant subscription end date", "nullable": true}, "tenantSubscriptionActualEndDateTime": {"type": "string", "description": "The Tenant subscription end date", "nullable": true}, "numberOfLicenses": {"type": "integer", "description": "The Tenant's number of licenses", "format": "int32"}, "assignedLicenses": {"type": "integer", "description": "The Tenant's assigned of licenses", "format": "int32"}, "isUserLicensed": {"type": "boolean", "description": "The user is assigned license for this application"}, "applicationTenantId": {"type": "string", "description": "The Tenant this application belongs to", "nullable": true}, "applicationId": {"type": "string", "description": "The application Id of the application for license", "nullable": true}, "applicationName": {"type": "string", "description": "The application Name of the application for license", "nullable": true}, "applicationRole": {"type": "array", "items": {"$ref": "#/components/schemas/EdGraph.Platform.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.ApplicationRole"}, "description": "Application role for this user.", "nullable": true}}, "additionalProperties": false}, "EdGraph.Platform.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.UserLicensePaginatedItemsViewModel": {"type": "object", "properties": {"pageIndex": {"type": "integer", "format": "int32"}, "pageSize": {"type": "integer", "format": "int32"}, "count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/EdGraph.Platform.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.UserLicense"}, "nullable": true}}, "additionalProperties": false}, "EdGraph.Platform.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.UserListResponseWithApplicationLicense": {"type": "object", "properties": {"userId": {"type": "string", "nullable": true}, "userName": {"type": "string", "nullable": true}, "email": {"type": "string", "nullable": true}, "firstName": {"type": "string", "nullable": true}, "lastName": {"type": "string", "nullable": true}, "tenantCount": {"type": "integer", "format": "int32"}, "tenants": {"type": "array", "items": {"$ref": "#/components/schemas/EdGraph.Platform.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.UserTenant"}, "nullable": true}, "licenses": {"type": "array", "items": {"$ref": "#/components/schemas/EdGraph.Platform.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.UserLicense"}, "nullable": true}, "createdBy": {"type": "string", "nullable": true}, "createdDateTime": {"type": "string", "nullable": true}, "lastModifiedBy": {"type": "string", "nullable": true}, "lastModifiedDateTime": {"type": "string", "nullable": true}}, "additionalProperties": false}, "EdGraph.Platform.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.UserListResponseWithApplicationLicensePaginatedItemsViewModel": {"type": "object", "properties": {"pageIndex": {"type": "integer", "format": "int32"}, "pageSize": {"type": "integer", "format": "int32"}, "count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/EdGraph.Platform.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.UserListResponseWithApplicationLicense"}, "nullable": true}}, "additionalProperties": false}, "EdGraph.Platform.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.UserProfilePreference": {"type": "object", "properties": {"code": {"type": "string", "nullable": true}, "value": {"type": "string", "nullable": true}}, "additionalProperties": false}, "EdGraph.Platform.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.UserProfileResponseWithApplicationLicense": {"type": "object", "properties": {"userId": {"type": "string", "nullable": true}, "userName": {"type": "string", "nullable": true}, "email": {"type": "string", "nullable": true}, "firstName": {"type": "string", "nullable": true}, "lastName": {"type": "string", "nullable": true}, "phoneNumber": {"type": "string", "nullable": true}, "lockoutEnabled": {"type": "string", "nullable": true}, "tenants": {"type": "array", "items": {"$ref": "#/components/schemas/EdGraph.Platform.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.UserTenant"}, "nullable": true}, "preferences": {"type": "array", "items": {"$ref": "#/components/schemas/EdGraph.Platform.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.UserProfilePreference"}, "nullable": true}, "browserDebugEnabled": {"type": "boolean"}, "licenses": {"type": "array", "items": {"$ref": "#/components/schemas/EdGraph.Platform.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.UserLicense"}, "nullable": true}, "createdBy": {"type": "string", "nullable": true}, "createdDateTime": {"type": "string", "nullable": true}, "lastModifiedBy": {"type": "string", "nullable": true}, "lastModifiedDateTime": {"type": "string", "nullable": true}}, "additionalProperties": false}, "EdGraph.Platform.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.UserTenant": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "status": {"$ref": "#/components/schemas/EdGraph.Platform.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.TenantStatus"}, "roles": {"type": "array", "items": {"type": "string"}, "nullable": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.AddSchoolYearRangeRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "instanceId": {"type": "string", "nullable": true}, "entries": {"type": "array", "items": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.AddSchoolYearRangeRequestEntry"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.AddSchoolYearRangeRequestEntry": {"type": "object", "properties": {"year": {"type": "integer", "format": "int32"}, "selectedTierId": {"type": "string", "nullable": true}, "odsBackupCode": {"type": "string", "nullable": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.AddSchoolYearRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "instanceId": {"type": "string", "nullable": true}, "year": {"type": "integer", "format": "int32"}, "selectedTierId": {"type": "string", "nullable": true}, "odsBackupCode": {"type": "string", "nullable": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.ApplicationEndpoint": {"type": "object", "properties": {"accessType": {"type": "string", "nullable": true}, "url": {"type": "string", "nullable": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.ClaimSet": {"type": "object", "properties": {"claimSetId": {"type": "integer", "format": "int32"}, "claimSetName": {"type": "string", "nullable": true}, "isSystemReserved": {"type": "boolean"}, "applicationsCount": {"type": "integer", "format": "int32"}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.ClaimSetPaginatedItemsViewModel": {"type": "object", "properties": {"pageIndex": {"type": "integer", "format": "int32"}, "pageSize": {"type": "integer", "format": "int32"}, "count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.ClaimSet"}, "nullable": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.CloneInstanceRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "sourceInstanceId": {"type": "string", "nullable": true}, "cloneInstanceName": {"type": "string", "nullable": true}, "cloneInstanceUseCustomId": {"type": "boolean"}, "cloneInstanceCustomId": {"type": "string", "nullable": true}, "cloneInstanceDescription": {"type": "string", "nullable": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.CreateEdFiApplicationRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "instanceId": {"type": "string", "nullable": true}, "applicationId": {"type": "integer", "format": "int32"}, "applicationName": {"type": "string", "nullable": true}, "claimSetName": {"type": "string", "nullable": true}, "operationalContextUri": {"type": "string", "nullable": true}, "vendorId": {"type": "integer", "format": "int32"}, "educationOrganizations": {"type": "array", "items": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.EducationOrganization"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.CreateInstanceRequest": {"type": "object", "properties": {"instanceName": {"type": "string", "description": "Details", "nullable": true}, "useCustomId": {"type": "boolean"}, "customId": {"type": "string", "nullable": true}, "description": {"type": "string", "nullable": true}, "databaseEngine": {"type": "string", "description": "Connection", "nullable": true}, "selectedConnectionId": {"type": "string", "nullable": true}, "schoolYears": {"type": "array", "items": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.CreateInstanceRequestSchoolYear"}, "description": "School Years", "nullable": true, "readOnly": true}, "tenantId": {"type": "string", "description": "Metadata", "nullable": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.CreateInstanceRequestSchoolYear": {"type": "object", "properties": {"year": {"type": "integer", "format": "int32"}, "selectedTierId": {"type": "string", "nullable": true}, "odsBackupCode": {"type": "string", "nullable": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.CreateLocalEducationAgencyRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "instanceId": {"type": "string", "nullable": true}, "year": {"type": "integer", "format": "int32", "nullable": true}, "localEducationAgency": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.LocalEducationAgency"}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.CreateVendorRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "instanceId": {"type": "string", "nullable": true}, "vendorId": {"type": "integer", "format": "int32"}, "vendorName": {"type": "string", "nullable": true}, "applications": {"type": "array", "items": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.EdFiApplication"}, "nullable": true, "readOnly": true}, "namespacePrefixes": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.DescriptorCreatedResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "instanceId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.DescriptorNamespacesPaginatedItemsResponse": {"type": "object", "properties": {"pageIndex": {"type": "integer", "format": "int32"}, "pageSize": {"type": "integer", "format": "int32"}, "count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.DescriptorType": {"type": "object", "properties": {"descriptorId": {"type": "integer", "format": "int32"}, "namespace": {"type": "string", "nullable": true}, "codeValue": {"type": "string", "nullable": true}, "shortDescription": {"type": "string", "nullable": true}, "description": {"type": "string", "nullable": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.DescriptorUpdatedResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "instanceId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.DescriptorsPaginatedItemsResponse": {"type": "object", "properties": {"pageIndex": {"type": "integer", "format": "int32"}, "pageSize": {"type": "integer", "format": "int32"}, "count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.DescriptorType"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.EdFiApplication": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "applicationId": {"type": "integer", "format": "int32"}, "applicationName": {"type": "string", "nullable": true}, "claimSetName": {"type": "string", "nullable": true}, "operationalContextUri": {"type": "string", "nullable": true}, "vendorId": {"type": "integer", "format": "int32"}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.EdFiApplicationApiClientProfileResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "instanceId": {"type": "string", "nullable": true}, "apiClientId": {"type": "integer", "format": "int32"}, "key": {"type": "string", "nullable": true}, "secret": {"type": "string", "nullable": true}, "name": {"type": "string", "nullable": true}, "isApproved": {"type": "boolean"}, "useSandbox": {"type": "boolean"}, "sandboxType": {"type": "integer", "format": "int32"}, "applicationId": {"type": "integer", "format": "int32"}, "secretIsHashed": {"type": "boolean"}, "keyStatus": {"type": "string", "nullable": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.EdFiApplicationApiClientProfileResponsePaginatedItemsViewModel": {"type": "object", "properties": {"pageIndex": {"type": "integer", "format": "int32"}, "pageSize": {"type": "integer", "format": "int32"}, "count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.EdFiApplicationApiClientProfileResponse"}, "nullable": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.EdFiApplicationCreatedResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "instanceId": {"type": "string", "nullable": true}, "applicationId": {"type": "integer", "format": "int32"}, "applicationName": {"type": "string", "nullable": true}, "claimSetName": {"type": "string", "nullable": true}, "operationalContextUri": {"type": "string", "nullable": true}, "vendorId": {"type": "integer", "format": "int32"}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.EdFiApplicationListResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "applicationId": {"type": "integer", "format": "int32"}, "applicationName": {"type": "string", "nullable": true}, "claimSetName": {"type": "string", "nullable": true}, "operationalContextUri": {"type": "string", "nullable": true}, "vendorId": {"type": "integer", "format": "int32"}, "vendorName": {"type": "string", "nullable": true}, "edOrgsCount": {"type": "integer", "format": "int32"}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.EdFiApplicationListResponsePaginatedItemsViewModel": {"type": "object", "properties": {"pageIndex": {"type": "integer", "format": "int32"}, "pageSize": {"type": "integer", "format": "int32"}, "count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.EdFiApplicationListResponse"}, "nullable": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.EdFiApplicationProfileResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "instanceId": {"type": "string", "nullable": true}, "applicationId": {"type": "integer", "format": "int32"}, "applicationName": {"type": "string", "nullable": true}, "claimSetName": {"type": "string", "nullable": true}, "operationalContextUri": {"type": "string", "nullable": true}, "vendorId": {"type": "integer", "format": "int32"}, "vendor": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.Vendor"}, "educationOrganizations": {"type": "array", "items": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.EducationOrganization"}, "description": "TODO Is adding Vendor object which also has application object correct ?", "nullable": true, "readOnly": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.EdFiConnection": {"type": "object", "properties": {"id": {"type": "string", "nullable": true}, "connectionName": {"type": "string", "nullable": true}, "databaseEngine": {"type": "string", "nullable": true}, "edFiVersion": {"type": "string", "nullable": true}, "edFiExtension": {"type": "string", "nullable": true}, "hostingProvider": {"type": "string", "nullable": true}, "allowedTenantIds": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}, "tiers": {"type": "array", "items": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.EdFiConnectionTier"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.EdFiConnectionPaginatedItemsResponse": {"type": "object", "properties": {"pageIndex": {"type": "integer", "format": "int32"}, "pageSize": {"type": "integer", "format": "int32"}, "count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.EdFiConnection"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.EdFiConnectionTier": {"type": "object", "properties": {"tierId": {"type": "string", "nullable": true}, "tierName": {"type": "string", "nullable": true}, "odsApiConnection": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.TierOdsApiConnection"}, "sqlConnection": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.TierSqlConnection"}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.EdFiOdsBackupDescriptor": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "code": {"type": "string", "nullable": true}, "description": {"type": "string", "nullable": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.EdFiOdsBackupDescriptorsPaginatedItemsResponse": {"type": "object", "properties": {"pageIndex": {"type": "integer", "format": "int32"}, "pageSize": {"type": "integer", "format": "int32"}, "count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.EdFiOdsBackupDescriptor"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.EducationOrganization": {"type": "object", "properties": {"educationOrganizationId": {"type": "integer", "format": "int32"}, "nameOfInstitution": {"type": "string", "nullable": true}, "shortnameOfInstitution": {"type": "string", "nullable": true}, "webSite": {"type": "string", "nullable": true}, "operationalStatusDescriptorId": {"type": "integer", "format": "int32"}, "discriminator": {"type": "string", "nullable": true}, "createDate": {"type": "string", "nullable": true}, "lastModifiedDate": {"type": "string", "nullable": true}, "id": {"type": "string", "nullable": true}, "changeVersion": {"type": "integer", "format": "int64"}, "createdByOwnershipTokenId": {"type": "integer", "format": "int32"}, "localEducationAgencyId": {"type": "integer", "format": "int32"}, "schoolId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.EducationOrganizationAddress": {"type": "object", "properties": {"addressTypeDescriptor": {"type": "string", "nullable": true}, "stateAbbreviationDescriptor": {"type": "string", "nullable": true}, "city": {"type": "string", "nullable": true}, "postalCode": {"type": "string", "nullable": true}, "streetNumberName": {"type": "string", "nullable": true}, "localeDescriptor": {"type": "string", "nullable": true}, "buildingSiteNumber": {"type": "string", "nullable": true}, "nameOfCounty": {"type": "string", "nullable": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.EducationOrganizationCategoryDescriptor": {"type": "object", "properties": {"id": {"type": "string", "nullable": true}, "educationOrganizationCategoryDescriptorId": {"type": "integer", "format": "int32"}, "codeValue": {"type": "string", "nullable": true}, "description": {"type": "string", "nullable": true}, "namespace": {"type": "string", "nullable": true}, "shortDescription": {"type": "string", "nullable": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.GenderRepresentation": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "instanceId": {"type": "string", "nullable": true}, "value": {"type": "string", "nullable": true}, "percentOfTotal": {"type": "number", "format": "double"}, "displayName": {"type": "string", "nullable": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.GetLocalEducationAgencyProfileResponse": {"type": "object", "properties": {"localEducationAgency": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.LocalEducationAgency"}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.GetResourceClaimsGridResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "instanceId": {"type": "string", "nullable": true}, "resources": {"type": "array", "items": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.ResourceGridRow"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.Instance": {"type": "object", "properties": {"id": {"type": "string", "description": "Details", "nullable": true}, "instanceName": {"type": "string", "nullable": true}, "useCustomId": {"type": "boolean"}, "customId": {"type": "string", "nullable": true}, "description": {"type": "string", "nullable": true}, "connectionName": {"type": "string", "nullable": true}, "selectedConnectionId": {"type": "string", "description": "Connection", "nullable": true}, "selectedConnection": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.EdFiConnection"}, "databases": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.InstanceDatabases"}, "password": {"type": "string", "description": "API Client", "nullable": true}, "apiClientKey": {"type": "string", "nullable": true}, "apiClientSecret": {"type": "string", "nullable": true}, "isApiClientSecretSecured": {"type": "string", "nullable": true}, "tenantId": {"type": "string", "description": "Metadata", "nullable": true}, "createdBy": {"type": "string", "nullable": true}, "createdDateTime": {"type": "string", "nullable": true}, "isDeleted": {"type": "boolean"}, "lastModifiedBy": {"type": "string", "nullable": true}, "lastModifiedDateTime": {"type": "string", "nullable": true}, "apiAuthUrl": {"type": "string", "description": "URLs", "nullable": true}, "apiResourcesUrls": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}, "apiCompositesUrls": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.InstanceDatabase": {"type": "object", "properties": {"selectedTierId": {"type": "string", "nullable": true}, "selectedTierName": {"type": "string", "nullable": true}, "status": {"type": "string", "nullable": true}, "jobs": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.InstanceDatabaseJobs"}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.InstanceDatabaseJobs": {"type": "object", "properties": {"createJobId": {"type": "string", "nullable": true}, "deleteJobId": {"type": "string", "nullable": true}, "resetDeleteJobId": {"type": "string", "nullable": true}, "resetCreateJobId": {"type": "string", "nullable": true}, "generateReportsJobId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.InstanceDatabases": {"type": "object", "properties": {"admin": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.InstanceDatabase"}, "security": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.InstanceDatabase"}, "ods": {"type": "array", "items": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.InstanceOdsDatabase"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.InstanceEndpointsResponse": {"type": "object", "properties": {"authUrl": {"type": "string", "nullable": true}, "resourcesUrls": {"type": "array", "items": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.ApplicationEndpoint"}, "nullable": true, "readOnly": true}, "compositesUrls": {"type": "array", "items": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.ApplicationEndpoint"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.InstanceOdsDatabase": {"type": "object", "properties": {"selectedTierId": {"type": "string", "nullable": true}, "selectedTierName": {"type": "string", "nullable": true}, "status": {"type": "string", "nullable": true}, "jobs": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.InstanceDatabaseJobs"}, "year": {"type": "integer", "format": "int32"}, "odsBackupCode": {"type": "string", "nullable": true}, "odsBackupDescription": {"type": "string", "nullable": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.InstancePaginatedItemsViewModel": {"type": "object", "properties": {"pageIndex": {"type": "integer", "format": "int32"}, "pageSize": {"type": "integer", "format": "int32"}, "count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.Instance"}, "nullable": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.LocalEducationAgency": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "instanceId": {"type": "string", "nullable": true}, "educationOrganizationId": {"type": "integer", "format": "int32"}, "localEducationAgencyId": {"type": "integer", "format": "int32"}, "nameOfInstitution": {"type": "string", "nullable": true}, "shortnameOfInstitution": {"type": "string", "nullable": true}, "webSite": {"type": "string", "nullable": true}, "operationalStatusDescriptorId": {"type": "integer", "format": "int32"}, "discriminator": {"type": "string", "nullable": true}, "createDate": {"type": "string", "nullable": true}, "lastModifiedDate": {"type": "string", "nullable": true}, "addresses": {"type": "array", "items": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.EducationOrganizationAddress"}, "nullable": true, "readOnly": true}, "categories": {"type": "array", "items": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.EducationOrganizationCategoryDescriptor"}, "nullable": true, "readOnly": true}, "localEducationAgencyCategoryDescriptorCodeValue": {"type": "string", "nullable": true}, "id": {"type": "string", "nullable": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.LocalEducationAgencyCreatedResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "instanceId": {"type": "string", "nullable": true}, "localEducationAgency": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.LocalEducationAgency"}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.LocalEducationAgencyTableViewResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "instanceId": {"type": "string", "nullable": true}, "educationOrganizationId": {"type": "integer", "format": "int64"}, "id": {"type": "string", "nullable": true}, "nameOfInstitution": {"type": "string", "nullable": true}, "edOrgCategoryDescriptorsCount": {"type": "integer", "format": "int64"}, "leaCategoryDescriptorId": {"type": "integer", "format": "int64"}, "leaCategoryDescriptor": {"type": "string", "nullable": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.LocalEducationAgencyTableViewResponsePaginatedItemsViewModel": {"type": "object", "properties": {"pageIndex": {"type": "integer", "format": "int32"}, "pageSize": {"type": "integer", "format": "int32"}, "count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.LocalEducationAgencyTableViewResponse"}, "nullable": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.OdsApiConnectionEndpoint": {"type": "object", "properties": {"accessTypeId": {"type": "string", "nullable": true}, "compositesUrl": {"type": "string", "nullable": true}, "resourcesUrl": {"type": "string", "nullable": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.RaceRepresentation": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "instanceId": {"type": "string", "nullable": true}, "value": {"type": "string", "nullable": true}, "percentOfTotal": {"type": "number", "format": "double"}, "displayName": {"type": "string", "nullable": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.RegenerateApiClientSecretResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "instanceId": {"type": "string", "nullable": true}, "apiClientId": {"type": "integer", "format": "int32"}, "newSecret": {"type": "string", "nullable": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.ReportsStatusResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "instanceId": {"type": "string", "nullable": true}, "districtSchoolsByTypeReport": {"type": "boolean"}, "districtTotalEnrollmentsReport": {"type": "boolean"}, "localEducationAgenciesReport": {"type": "boolean"}, "studentDemographicsReport": {"type": "boolean"}, "studentEconomicSituationReport": {"type": "boolean"}, "studentsByProgramReport": {"type": "boolean"}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.ResetInstanceResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "instanceId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.ResourceGridRow": {"type": "object", "properties": {"resourceClaimId": {"type": "integer", "format": "int32"}, "name": {"type": "string", "nullable": true}, "create": {"type": "boolean"}, "read": {"type": "boolean"}, "update": {"type": "boolean"}, "delete": {"type": "boolean"}, "children": {"type": "array", "items": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.ResourceGridRow"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.SaveClaimSetRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "instanceId": {"type": "string", "nullable": true}, "claimSetId": {"type": "integer", "format": "int32"}, "claimSetName": {"type": "string", "nullable": true}, "applicationId": {"type": "integer", "format": "int32"}, "resources": {"type": "array", "items": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.ResourceGridRow"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.SaveClaimSetResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "instanceId": {"type": "string", "nullable": true}, "claimSetId": {"type": "integer", "format": "int32"}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.SchoolCountRepresentation": {"type": "object", "properties": {"description": {"type": "string", "nullable": true}, "count": {"type": "integer", "format": "int32"}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.SchoolsByTypeReportResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "instanceId": {"type": "string", "nullable": true}, "schoolCountRepresentations": {"type": "array", "items": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.SchoolCountRepresentation"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.StudentEconomicSituationReportResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "instanceId": {"type": "string", "nullable": true}, "localEducationAgencyId": {"type": "integer", "format": "int32"}, "localEducationAgencyName": {"type": "string", "nullable": true}, "totalStudentCount": {"type": "integer", "format": "int32"}, "studentEconomicSituationRepresentation": {"type": "array", "items": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.StudentEconomicSituationRepresentation"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.StudentEconomicSituationRepresentation": {"type": "object", "properties": {"description": {"type": "string", "nullable": true}, "percentOfTotal": {"type": "number", "format": "double"}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.StudentEnrollmentByEthnicityReportResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "instanceId": {"type": "string", "nullable": true}, "localEducationAgencyId": {"type": "integer", "format": "int32"}, "localEducationAgencyName": {"type": "string", "nullable": true}, "totalStudentCount": {"type": "integer", "format": "int32"}, "hispanicLatinoPercent": {"type": "number", "format": "double"}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.StudentEnrollmentByGenderReportResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "instanceId": {"type": "string", "nullable": true}, "localEducationAgencyId": {"type": "integer", "format": "int32"}, "localEducationAgencyName": {"type": "string", "nullable": true}, "totalStudentCount": {"type": "integer", "format": "int32"}, "genderRepresentation": {"type": "array", "items": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.GenderRepresentation"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.StudentEnrollmentByRaceReportResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "instanceId": {"type": "string", "nullable": true}, "localEducationAgencyId": {"type": "integer", "format": "int32"}, "localEducationAgencyName": {"type": "string", "nullable": true}, "totalStudentCount": {"type": "integer", "format": "int32"}, "raceRepresentation": {"type": "array", "items": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.RaceRepresentation"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.StudentProgramRepresentation": {"type": "object", "properties": {"programName": {"type": "string", "nullable": true}, "percentOfTotalStudents": {"type": "number", "format": "double"}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.StudentsByProgramReportResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "instanceId": {"type": "string", "nullable": true}, "localEducationAgencyId": {"type": "integer", "format": "int32"}, "localEducationAgencyName": {"type": "string", "nullable": true}, "totalStudentCount": {"type": "integer", "format": "int32"}, "studentProgramRepresentations": {"type": "array", "items": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.StudentProgramRepresentation"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.SyncApplicationRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "instanceId": {"type": "string", "nullable": true}, "year": {"type": "integer", "format": "int32", "nullable": true}, "applicationId": {"type": "integer", "format": "int32"}, "entries": {"type": "array", "items": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.SyncEntry"}, "nullable": true, "readOnly": true}, "assignToExistingLeas": {"type": "boolean"}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.SyncClaimSetRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "instanceId": {"type": "string", "nullable": true}, "year": {"type": "integer", "format": "int32", "nullable": true}, "claimSetId": {"type": "integer", "format": "int32"}, "entries": {"type": "array", "items": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.SyncEntry"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.SyncEntry": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "instances": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.SyncLocalEducationAgencyRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "instanceId": {"type": "string", "nullable": true}, "year": {"type": "integer", "format": "int32", "nullable": true}, "edOrgId": {"type": "integer", "format": "int32"}, "edOrgGuid": {"type": "string", "nullable": true}, "entries": {"type": "array", "items": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.SyncEntry"}, "nullable": true, "readOnly": true}, "assignToExistingApplications": {"type": "boolean"}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.SyncResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "instanceId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.SyncVendorRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "instanceId": {"type": "string", "nullable": true}, "year": {"type": "integer", "format": "int32", "nullable": true}, "vendorId": {"type": "integer", "format": "int32"}, "entries": {"type": "array", "items": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.SyncEntry"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.TierOdsApiConnection": {"type": "object", "properties": {"clientId": {"type": "string", "nullable": true}, "clientSecret": {"type": "string", "nullable": true}, "tokenUrl": {"type": "string", "nullable": true}, "endpoints": {"type": "array", "items": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.OdsApiConnectionEndpoint"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.TierSqlConnection": {"type": "object", "properties": {"sqlServer": {"type": "string", "nullable": true}, "sqlServerUserName": {"type": "string", "nullable": true}, "sqlServerPasswordSecret": {"type": "string", "nullable": true}, "azureSubscriptionId": {"type": "string", "nullable": true}, "azureResourceGroupName": {"type": "string", "nullable": true}, "azureServerName": {"type": "string", "nullable": true}, "azureServerElasticPoolName": {"type": "string", "nullable": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.TotalEnrollmentsReportResponse": {"type": "object", "properties": {"enrollmentCount": {"type": "integer", "format": "int32"}, "educationOrganizationId": {"type": "integer", "format": "int32"}, "id": {"type": "string", "nullable": true}, "nameOfInstitution": {"type": "string", "nullable": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.UpdateEdFiApplicationRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "instanceId": {"type": "string", "nullable": true}, "applicationId": {"type": "integer", "format": "int32"}, "applicationName": {"type": "string", "nullable": true}, "claimSetName": {"type": "string", "nullable": true}, "operationalContextUri": {"type": "string", "nullable": true}, "vendorId": {"type": "integer", "format": "int32"}, "educationOrganizations": {"type": "array", "items": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.EducationOrganization"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.UpdateInstanceRequest": {"type": "object", "properties": {"id": {"type": "string", "description": "The Instance ID or Custom ID", "nullable": true}, "instanceName": {"type": "string", "description": "Details", "nullable": true}, "description": {"type": "string", "nullable": true}, "tenantId": {"type": "string", "description": "Metadata", "nullable": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.UpdateLocalEducationAgencyRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "instanceId": {"type": "string", "nullable": true}, "year": {"type": "integer", "format": "int32", "nullable": true}, "localEducationAgency": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.LocalEducationAgency"}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.UpdateVendorRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "instanceId": {"type": "string", "nullable": true}, "vendorId": {"type": "integer", "format": "int32"}, "vendorName": {"type": "string", "nullable": true}, "applications": {"type": "array", "items": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.EdFiApplication"}, "nullable": true, "readOnly": true}, "namespacePrefixes": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.Vendor": {"type": "object", "properties": {"vendorId": {"type": "integer", "format": "int32"}, "vendorName": {"type": "string", "nullable": true}, "applications": {"type": "array", "items": {"type": "integer", "format": "int32"}, "description": "TODO: Changed from application object to applicationId's to remove cyclic structure", "nullable": true, "readOnly": true}, "namespacePrefixes": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}}, "additionalProperties": false, "description": "Common Objects"}, "EdfiAdminApi.EdfiAdmin.V1.VendorCreatedResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "instanceId": {"type": "string", "nullable": true}, "vendorId": {"type": "integer", "format": "int32"}, "vendorName": {"type": "string", "nullable": true}, "applications": {"type": "array", "items": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.EdFiApplication"}, "nullable": true, "readOnly": true}, "namespacePrefixes": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.VendorListResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "vendorId": {"type": "integer", "format": "int32"}, "vendorName": {"type": "string", "nullable": true}, "namespacePrefixes": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.VendorListResponsePaginatedItemsViewModel": {"type": "object", "properties": {"pageIndex": {"type": "integer", "format": "int32"}, "pageSize": {"type": "integer", "format": "int32"}, "count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.VendorListResponse"}, "nullable": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.VendorProfileResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "vendorId": {"type": "integer", "format": "int32"}, "vendorName": {"type": "string", "nullable": true}, "namespacePrefixes": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.VendorUpdatedResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "instanceId": {"type": "string", "nullable": true}, "vendorId": {"type": "integer", "format": "int32"}}, "additionalProperties": false}, "IdentityApi.ApiClient.V1.AccessTokenType": {"enum": ["Jwt", "Reference"], "type": "string"}, "IdentityApi.ApiClient.V1.ApiClaim": {"type": "object", "properties": {"applicationId": {"type": "string", "nullable": true}, "subscriptionId": {"type": "string", "nullable": true}, "value": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "IdentityApi.ApiClient.V1.ApiClientCreatedResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "clientId": {"type": "string", "nullable": true}, "secretValue": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.ApiClient.V1.ApiClientListResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "clientId": {"type": "string", "nullable": true}, "clientName": {"type": "string", "nullable": true}, "clientUri": {"type": "string", "nullable": true}, "enabled": {"type": "boolean"}, "createdBy": {"type": "string", "nullable": true}, "createdDateTime": {"type": "string", "nullable": true}, "lastModifiedBy": {"type": "string", "nullable": true}, "lastModifiedDateTime": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.ApiClient.V1.ApiClientPaginatedItemsResponse": {"type": "object", "properties": {"pageIndex": {"type": "integer", "format": "int32"}, "pageSize": {"type": "integer", "format": "int32"}, "count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/IdentityApi.ApiClient.V1.ApiClientListResponse"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "IdentityApi.ApiClient.V1.ApiClientPaginatedItemsResponsePaginatedItemsViewModel": {"type": "object", "properties": {"pageIndex": {"type": "integer", "format": "int32"}, "pageSize": {"type": "integer", "format": "int32"}, "count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/IdentityApi.ApiClient.V1.ApiClientPaginatedItemsResponse"}, "nullable": true}}, "additionalProperties": false}, "IdentityApi.ApiClient.V1.ApiClientProfileResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "clientId": {"type": "string", "nullable": true}, "clientName": {"type": "string", "nullable": true}, "description": {"type": "string", "nullable": true}, "clientUri": {"type": "string", "nullable": true}, "logoUri": {"type": "string", "nullable": true}, "enabled": {"type": "boolean"}, "accessTokenType": {"$ref": "#/components/schemas/IdentityApi.ApiClient.V1.AccessTokenType"}, "tokenUsage": {"$ref": "#/components/schemas/IdentityApi.ApiClient.V1.TokenUsage"}, "refreshTokenExpiration": {"$ref": "#/components/schemas/IdentityApi.ApiClient.V1.TokenExpiration"}, "enableLocalLogin": {"type": "boolean"}, "allowOfflineAccess": {"type": "boolean"}, "allowAccessTokensViaBrowser": {"type": "boolean"}, "updateAccessTokenClaimsOnRefresh": {"type": "boolean"}, "alwaysIncludeUserClaimsInIdToken": {"type": "boolean"}, "identityTokenLifetime": {"type": "integer", "format": "int32"}, "accessTokenLifetime": {"type": "integer", "format": "int32"}, "authorizationCodeLifetime": {"type": "integer", "format": "int32"}, "absoluteRefreshTokenLifetime": {"type": "integer", "format": "int32"}, "slidingRefreshTokenLifetime": {"type": "integer", "format": "int32"}, "requireClientSecret": {"type": "boolean"}, "requireConsent": {"type": "boolean"}, "allowedScopes": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}, "allowedCorsOrigins": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}, "allowedGrantTypes": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}, "identityProviderRestrictions": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}, "redirectUris": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}, "postLogoutRedirectUris": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}, "claims": {"type": "array", "items": {"$ref": "#/components/schemas/IdentityApi.ApiClient.V1.Claim"}, "nullable": true, "readOnly": true}, "requirePkce": {"type": "boolean"}, "createdBy": {"type": "string", "nullable": true}, "createdDateTime": {"type": "string", "nullable": true}, "lastModifiedBy": {"type": "string", "nullable": true}, "lastModifiedDateTime": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.ApiClient.V1.ApiClientSecretRegeneratedResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "clientId": {"type": "string", "nullable": true}, "secretValue": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.ApiClient.V1.ApiClientUpdatedResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "clientId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.ApiClient.V1.Claim": {"type": "object", "properties": {"type": {"type": "string", "nullable": true}, "value": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.ApiClient.V1.CreateApiClientRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "clientName": {"type": "string", "nullable": true}, "enabled": {"type": "boolean"}, "apiClaims": {"type": "array", "items": {"$ref": "#/components/schemas/IdentityApi.ApiClient.V1.ApiClaim"}, "nullable": true, "readOnly": true}, "secretExpirationDateTime": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.ApiClient.V1.RegenerateApiClientSecretRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "clientId": {"type": "string", "nullable": true}, "secretExpirationDateTime": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.ApiClient.V1.TokenExpiration": {"enum": ["Sliding", "Absolute"], "type": "string"}, "IdentityApi.ApiClient.V1.TokenUsage": {"enum": ["ReUse", "OneTimeOnly"], "type": "string"}, "IdentityApi.ApiClient.V1.UpdateApiClientRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "clientId": {"type": "string", "nullable": true}, "clientName": {"type": "string", "nullable": true}, "enabled": {"type": "boolean"}, "apiClaims": {"type": "array", "items": {"$ref": "#/components/schemas/IdentityApi.ApiClient.V1.ApiClaim"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "IdentityApi.Invitation.V1.AssignLicenseRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "subscriptionId": {"type": "string", "nullable": true}, "applicationId": {"type": "string", "nullable": true}, "userId": {"type": "string", "nullable": true}, "roles": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "IdentityApi.Invitation.V1.InvitationListResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "invitationId": {"type": "string", "nullable": true}, "firstName": {"type": "string", "nullable": true}, "lastName": {"type": "string", "nullable": true}, "email": {"type": "string", "nullable": true}, "role": {"type": "string", "nullable": true}, "invitationToken": {"type": "string", "nullable": true}, "invitationStatus": {"$ref": "#/components/schemas/IdentityApi.Invitation.V1.InvitationStatus"}, "invitationSentDateTime": {"type": "string", "nullable": true}, "assignLicenseRequests": {"type": "array", "items": {"$ref": "#/components/schemas/IdentityApi.Invitation.V1.AssignLicenseRequest"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "IdentityApi.Invitation.V1.InvitationListResponsePaginatedItemsViewModel": {"type": "object", "properties": {"pageIndex": {"type": "integer", "format": "int32"}, "pageSize": {"type": "integer", "format": "int32"}, "count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/IdentityApi.Invitation.V1.InvitationListResponse"}, "nullable": true}}, "additionalProperties": false}, "IdentityApi.Invitation.V1.InvitationResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "invitationId": {"type": "string", "nullable": true}, "firstName": {"type": "string", "nullable": true}, "lastName": {"type": "string", "nullable": true}, "email": {"type": "string", "nullable": true}, "role": {"type": "string", "nullable": true}, "invitationToken": {"type": "string", "nullable": true}, "invitationStatus": {"$ref": "#/components/schemas/IdentityApi.Invitation.V1.InvitationStatus"}, "invitationSentDateTime": {"type": "string", "nullable": true}, "assignLicenseRequests": {"type": "array", "items": {"$ref": "#/components/schemas/IdentityApi.Invitation.V1.AssignLicenseRequest"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "IdentityApi.Invitation.V1.InvitationSentResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "invitationId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.Invitation.V1.InvitationStatus": {"enum": ["Unknown", "Sent", "Accepted"], "type": "string"}, "IdentityApi.Invitation.V1.SendInvitationRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "email": {"type": "string", "nullable": true}, "firstName": {"type": "string", "nullable": true}, "lastName": {"type": "string", "nullable": true}, "role": {"type": "string", "nullable": true}, "assignLicenseRequests": {"type": "array", "items": {"$ref": "#/components/schemas/IdentityApi.Invitation.V1.AssignLicenseRequest"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "IdentityApi.User.V1.ActivateUserRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "userId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.User.V1.AssignLicenseBulkRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "userId": {"type": "string", "nullable": true}, "assignLicenseRequests": {"type": "array", "items": {"$ref": "#/components/schemas/IdentityApi.User.V1.AssignLicenseRequest"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "IdentityApi.User.V1.AssignLicenseRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "subscriptionId": {"type": "string", "nullable": true}, "applicationId": {"type": "string", "nullable": true}, "userId": {"type": "string", "nullable": true}, "roles": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "IdentityApi.User.V1.CreateLocalUserRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "userName": {"type": "string", "nullable": true}, "email": {"type": "string", "nullable": true}, "firstName": {"type": "string", "nullable": true}, "lastName": {"type": "string", "nullable": true}, "role": {"type": "string", "nullable": true}, "phoneNumber": {"type": "string", "nullable": true}, "lockoutEnabled": {"type": "boolean"}, "password": {"type": "string", "nullable": true}, "autoGeneratedPassword": {"type": "boolean"}, "twoFactorEnabled": {"type": "boolean"}}, "additionalProperties": false}, "IdentityApi.User.V1.DeactivateUserRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "userId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.User.V1.LicenseAssignedBulkResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "userId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.User.V1.LicenseAssignedResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "subscriptionId": {"type": "string", "nullable": true}, "applicationId": {"type": "string", "nullable": true}, "userId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.User.V1.LicenseRevokedBulkResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "userId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.User.V1.LicenseRevokedResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "subscriptionId": {"type": "string", "nullable": true}, "applicationId": {"type": "string", "nullable": true}, "userId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.User.V1.LocalUserCreatedResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "userId": {"type": "string", "nullable": true}, "password": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.User.V1.PasswordResettedResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "userId": {"type": "string", "nullable": true}, "password": {"type": "string", "nullable": true}, "autoGeneratedPassword": {"type": "boolean"}}, "additionalProperties": false}, "IdentityApi.User.V1.Preference": {"type": "object", "properties": {"code": {"type": "string", "nullable": true}, "value": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.User.V1.ResetPasswordRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "userId": {"type": "string", "nullable": true}, "password": {"type": "string", "nullable": true}, "autoGeneratedPassword": {"type": "boolean"}}, "additionalProperties": false}, "IdentityApi.User.V1.RevokeLicenseBulkRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "userId": {"type": "string", "nullable": true}, "revokeLicenseRequests": {"type": "array", "items": {"$ref": "#/components/schemas/IdentityApi.User.V1.RevokeLicenseRequest"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "IdentityApi.User.V1.RevokeLicenseRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "subscriptionId": {"type": "string", "nullable": true}, "applicationId": {"type": "string", "nullable": true}, "userId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.User.V1.UpdateUserPreferenceRequest": {"type": "object", "properties": {"claimName": {"type": "string", "nullable": true}, "code": {"type": "string", "nullable": true}, "value": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.User.V1.UpdateUserRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "userId": {"type": "string", "nullable": true}, "email": {"type": "string", "nullable": true}, "firstName": {"type": "string", "nullable": true}, "lastName": {"type": "string", "nullable": true}, "role": {"type": "string", "nullable": true}, "phoneNumber": {"type": "string", "nullable": true}, "lockoutEnabled": {"type": "boolean"}}, "additionalProperties": false}, "IdentityApi.User.V1.UserActivatedResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "userId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.User.V1.UserDeactivatedResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "userId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.User.V1.UserPreferenceUpdatedResponse": {"type": "object", "properties": {"code": {"type": "string", "nullable": true}, "value": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.User.V1.UserUpdatedResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "userId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "Microsoft.AspNetCore.Mvc.ProblemDetails": {"type": "object", "properties": {"type": {"type": "string", "nullable": true}, "title": {"type": "string", "nullable": true}, "status": {"type": "integer", "format": "int32", "nullable": true}, "detail": {"type": "string", "nullable": true}, "instance": {"type": "string", "nullable": true}}, "additionalProperties": {}}, "Microsoft.AspNetCore.Mvc.ValidationProblemDetails": {"type": "object", "properties": {"errors": {"type": "object", "additionalProperties": {"type": "array", "items": {"type": "string"}}, "nullable": true}, "type": {"type": "string", "nullable": true}, "title": {"type": "string", "nullable": true}, "status": {"type": "integer", "format": "int32", "nullable": true}, "detail": {"type": "string", "nullable": true}, "instance": {"type": "string", "nullable": true}}, "additionalProperties": {}}, "RegistrationApi.Registration.V1.ApprovalStatus": {"enum": ["Unknown", "Pending", "Approved", "Denied", "Failed", "Completed"], "type": "string"}, "RegistrationApi.Registration.V1.SubmitTenantRegistrationRequest": {"type": "object", "properties": {"tenantType": {"$ref": "#/components/schemas/RegistrationApi.Registration.V1.TenantType"}, "firstName": {"type": "string", "nullable": true}, "lastName": {"type": "string", "nullable": true}, "email": {"type": "string", "nullable": true}, "state": {"type": "string", "nullable": true}, "organizationIdentifier": {"type": "string", "nullable": true}, "organizationName": {"type": "string", "nullable": true}, "password": {"type": "string", "nullable": true}, "applicationIds": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}, "azureSubscriptionId": {"type": "string", "nullable": true}, "azureSubscriptionStoragePath": {"type": "string", "nullable": true}}, "additionalProperties": false}, "RegistrationApi.Registration.V1.TenantType": {"enum": ["Unknown", "Internal", "State", "Collaborative", "District", "Partner", "Teacher", "Student"], "type": "string"}, "TenantApi.Tenant.V1.CreateSubscriptionRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "subscriptionId": {"type": "string", "nullable": true}, "applicationId": {"type": "string", "nullable": true}, "startDateTime": {"type": "string", "nullable": true}, "endDateTime": {"type": "string", "nullable": true}, "gracePeriod": {"type": "integer", "format": "int32"}, "numberOfLicenses": {"type": "integer", "format": "int32"}, "assignedLicenses": {"type": "integer", "format": "int32"}, "licenseType": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.LicenseType"}, "subscriptionStatus": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.SubscriptionStatus"}, "autoAssign": {"type": "boolean"}}, "additionalProperties": false}, "TenantApi.Tenant.V1.LicenseType": {"enum": ["Unknown", "Full", "Trial"], "type": "string"}, "TenantApi.Tenant.V1.SubscriptionCreatedResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "subscriptionId": {"type": "string", "nullable": true}, "applicationId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "TenantApi.Tenant.V1.SubscriptionListResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "subscriptionId": {"type": "string", "nullable": true}, "applicationId": {"type": "string", "nullable": true}, "startDateTime": {"type": "string", "nullable": true}, "endDateTime": {"type": "string", "nullable": true}, "actualEndDateTime": {"type": "string", "nullable": true}, "gracePeriod": {"type": "integer", "format": "int32"}, "numberOfLicenses": {"type": "integer", "format": "int32"}, "assignedLicenses": {"type": "integer", "format": "int32"}, "maxAssignedLicenses": {"type": "integer", "format": "int32"}, "lastMaxAssignedLicensesDateTime": {"type": "string", "nullable": true}, "licenseType": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.LicenseType"}, "subscriptionStatus": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.SubscriptionStatus"}, "autoAssign": {"type": "boolean"}, "createdBy": {"type": "string", "nullable": true}, "createdDateTime": {"type": "string", "nullable": true}, "lastModifiedBy": {"type": "string", "nullable": true}, "lastModifiedDateTime": {"type": "string", "nullable": true}}, "additionalProperties": false}, "TenantApi.Tenant.V1.SubscriptionStatus": {"enum": ["Unknown", "Active", "Inactive", "Pending", "Rejected"], "type": "string"}, "TenantApi.Tenant.V1.SubscriptionUpdatedResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "subscriptionId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "TenantApi.Tenant.V1.TenantIdentityProviders": {"enum": ["Local", "Aad", "Google", "Adfs"], "type": "string"}, "TenantApi.Tenant.V1.TenantListResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "tenantType": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.TenantType"}, "organizationIdentifier": {"type": "string", "nullable": true}, "organizationName": {"type": "string", "nullable": true}, "state": {"type": "string", "nullable": true}, "tenantStatus": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.TenantStatus"}, "isDemo": {"type": "boolean"}, "enforceMfa": {"type": "boolean"}, "subscriptionsMigrated": {"type": "boolean"}, "subscriptions": {"type": "array", "items": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.SubscriptionListResponse"}, "nullable": true, "readOnly": true}, "domains": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}, "createdBy": {"type": "string", "nullable": true}, "createdDateTime": {"type": "string", "nullable": true}, "lastModifiedBy": {"type": "string", "nullable": true}, "lastModifiedDateTime": {"type": "string", "nullable": true}, "identityProviders": {"type": "array", "items": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.TenantIdentityProviders"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "TenantApi.Tenant.V1.TenantStatus": {"enum": ["Unknown", "Active", "Inactive"], "type": "string"}, "TenantApi.Tenant.V1.TenantType": {"enum": ["Unknown", "Internal", "State", "Collaborative", "District", "Partner", "Teacher", "Student"], "type": "string"}, "TenantApi.Tenant.V1.TenantUpdatedResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "TenantApi.Tenant.V1.UpdateSubscriptionRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "subscriptionId": {"type": "string", "nullable": true}, "startDateTime": {"type": "string", "nullable": true}, "endDateTime": {"type": "string", "nullable": true}, "gracePeriod": {"type": "integer", "format": "int32"}, "numberOfLicenses": {"type": "integer", "format": "int32"}, "assignedLicenses": {"type": "integer", "format": "int32"}, "licenseType": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.LicenseType"}, "autoAssign": {"type": "boolean", "description": "SubscriptionStatus SubscriptionStatus = 10;"}}, "additionalProperties": false}, "TenantApi.Tenant.V1.UpdateTenantRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "tenantType": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.TenantType"}, "organizationIdentifier": {"type": "string", "nullable": true}, "organizationName": {"type": "string", "nullable": true}, "state": {"type": "string", "nullable": true}, "isDemo": {"type": "boolean"}, "enforceMfa": {"type": "boolean"}, "tenantStatus": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.TenantStatus"}, "domains": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}, "identityProviders": {"type": "array", "items": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.TenantIdentityProviders"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "ValidationsApi.Containers.V1.ContainerDto": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "id": {"type": "string", "nullable": true}, "name": {"type": "string", "nullable": true}, "description": {"type": "string", "nullable": true}, "containerType": {"type": "string", "nullable": true}, "parentContainerId": {"type": "string", "nullable": true}, "isDefault": {"type": "boolean"}, "environmentType": {"type": "string", "nullable": true}, "childContainers": {"type": "array", "items": {"$ref": "#/components/schemas/ValidationsApi.Containers.V1.ContainerDto"}, "nullable": true, "readOnly": true}, "childContainersCount": {"type": "integer", "format": "int32", "nullable": true}, "tags": {"type": "array", "items": {"$ref": "#/components/schemas/ValidationsApi.Containers.V1.ContainerDto+Types+TagDto"}, "nullable": true, "readOnly": true}, "rulesCount": {"type": "integer", "format": "int32", "nullable": true}}, "additionalProperties": false}, "ValidationsApi.Containers.V1.ContainerDto+Types+TagDto": {"type": "object", "properties": {"id": {"type": "string", "nullable": true}, "name": {"type": "string", "nullable": true}, "description": {"type": "string", "nullable": true}}, "additionalProperties": false}, "ValidationsApi.Containers.V1.CreateCollectionRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "name": {"type": "string", "nullable": true}, "description": {"type": "string", "nullable": true}, "environmentType": {"type": "string", "nullable": true}, "tags": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "ValidationsApi.Containers.V1.CreateContainerRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "name": {"type": "string", "nullable": true}, "description": {"type": "string", "nullable": true}, "environmentType": {"type": "string", "nullable": true}, "tags": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}, "parentContainerId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "ValidationsApi.Containers.V1.GetJsonResponse": {"type": "object", "properties": {"collectionJson": {"type": "string", "nullable": true}}, "additionalProperties": false}, "ValidationsApi.Containers.V1.PaginatedContainers": {"type": "object", "properties": {"count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/ValidationsApi.Containers.V1.ContainerDto"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "ValidationsApi.Containers.V1.UpdateCollectionRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "id": {"type": "string", "nullable": true}, "name": {"type": "string", "nullable": true}, "description": {"type": "string", "nullable": true}, "environmentType": {"type": "string", "nullable": true}, "tags": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "ValidationsApi.Containers.V1.UpdateContainerRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "id": {"type": "string", "nullable": true}, "name": {"type": "string", "nullable": true}, "description": {"type": "string", "nullable": true}, "tags": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "ValidationsApi.Containers.V1.UploadCollectionRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "collectionJson": {"type": "string", "nullable": true}}, "additionalProperties": false}, "ValidationsApi.DbEnvironments.V1.CreateRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "description": "Details", "nullable": true}, "name": {"type": "string", "nullable": true}, "dataSource": {"type": "string", "description": "Connection", "nullable": true}, "database": {"type": "string", "nullable": true}, "user": {"type": "string", "nullable": true}, "password": {"type": "string", "nullable": true}, "securityIntegrated": {"type": "boolean"}, "extraData": {"type": "string", "nullable": true}, "userParams": {"type": "array", "items": {"$ref": "#/components/schemas/ValidationsApi.DbEnvironments.V1.CreateRequest+Types+UserParam"}, "description": "Metadata", "nullable": true, "readOnly": true}, "maxNumberResults": {"type": "integer", "format": "int32", "nullable": true}, "timeoutInMinutes": {"type": "integer", "format": "int32", "nullable": true}, "version": {"type": "integer", "format": "int32", "nullable": true}, "mapTables": {"type": "string", "nullable": true}}, "additionalProperties": false}, "ValidationsApi.DbEnvironments.V1.CreateRequest+Types+UserParam": {"type": "object", "properties": {"name": {"type": "string", "nullable": true}, "value": {"type": "string", "nullable": true}}, "additionalProperties": false}, "ValidationsApi.DbEnvironments.V1.DbEnvironmentDto": {"type": "object", "properties": {"tenantId": {"type": "string", "description": "Details", "nullable": true}, "id": {"type": "string", "nullable": true}, "name": {"type": "string", "nullable": true}, "dataSource": {"type": "string", "description": "Connection", "nullable": true}, "database": {"type": "string", "nullable": true}, "user": {"type": "string", "nullable": true}, "password": {"type": "string", "nullable": true}, "securityIntegrated": {"type": "boolean"}, "extraData": {"type": "string", "nullable": true}, "userParams": {"type": "array", "items": {"$ref": "#/components/schemas/ValidationsApi.DbEnvironments.V1.UserParamDto"}, "description": "Metadata", "nullable": true, "readOnly": true}, "maxNumberResults": {"type": "integer", "format": "int32", "nullable": true}, "timeoutInMinutes": {"type": "integer", "format": "int32", "nullable": true}, "version": {"type": "integer", "format": "int32", "nullable": true}, "mapTables": {"type": "string", "nullable": true}}, "additionalProperties": false}, "ValidationsApi.DbEnvironments.V1.PaginatedDbEnvironments": {"type": "object", "properties": {"count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/ValidationsApi.DbEnvironments.V1.DbEnvironmentDto"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "ValidationsApi.DbEnvironments.V1.TestConnectionRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "dataSource": {"type": "string", "nullable": true}, "database": {"type": "string", "nullable": true}, "user": {"type": "string", "nullable": true}, "password": {"type": "string", "nullable": true}, "securityIntegrated": {"type": "boolean"}, "extraData": {"type": "string", "nullable": true}}, "additionalProperties": false}, "ValidationsApi.DbEnvironments.V1.UpdateRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "description": "Details", "nullable": true}, "id": {"type": "string", "nullable": true}, "name": {"type": "string", "nullable": true}, "dataSource": {"type": "string", "description": "Connection", "nullable": true}, "database": {"type": "string", "nullable": true}, "user": {"type": "string", "nullable": true}, "password": {"type": "string", "nullable": true}, "securityIntegrated": {"type": "boolean"}, "extraData": {"type": "string", "nullable": true}, "userParams": {"type": "array", "items": {"$ref": "#/components/schemas/ValidationsApi.DbEnvironments.V1.UpdateRequest+Types+UserParam"}, "description": "Metadata", "nullable": true, "readOnly": true}, "maxNumberResults": {"type": "integer", "format": "int32", "nullable": true}, "timeoutInMinutes": {"type": "integer", "format": "int32", "nullable": true}, "version": {"type": "integer", "format": "int32", "nullable": true}, "mapTables": {"type": "string", "nullable": true}}, "additionalProperties": false}, "ValidationsApi.DbEnvironments.V1.UpdateRequest+Types+UserParam": {"type": "object", "properties": {"name": {"type": "string", "nullable": true}, "value": {"type": "string", "nullable": true}}, "additionalProperties": false}, "ValidationsApi.DbEnvironments.V1.UserParamDto": {"type": "object", "properties": {"name": {"type": "string", "nullable": true}, "value": {"type": "string", "nullable": true}}, "additionalProperties": false}, "ValidationsApi.Jobs.V1.ChildJob": {"type": "object", "properties": {"jobId": {"type": "string", "nullable": true}, "jobExecutionId": {"type": "string", "nullable": true}, "childJobId": {"type": "string", "nullable": true}, "childJobName": {"type": "string", "nullable": true}, "jobExecutionStatus": {"$ref": "#/components/schemas/ValidationsApi.Jobs.V1.JobExecutionStatus"}, "jobExecutionStartDateTime": {"type": "string", "nullable": true}, "jobExecutionEndDateTime": {"type": "string", "nullable": true}, "metrics": {"type": "array", "items": {"$ref": "#/components/schemas/ValidationsApi.Jobs.V1.Metric"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "ValidationsApi.Jobs.V1.CreateRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "name": {"type": "string", "nullable": true}, "jobMetadata": {"type": "array", "items": {"$ref": "#/components/schemas/ValidationsApi.Jobs.V1.JobMetadata"}, "nullable": true, "readOnly": true}, "schedule": {"$ref": "#/components/schemas/ValidationsApi.Jobs.V1.Schedule"}, "notificationEmails": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "ValidationsApi.Jobs.V1.DataRefreshType": {"enum": ["Unknown", "Full", "Deltasincelastjobexecution", "Deltasincespecificdatetime"], "type": "string"}, "ValidationsApi.Jobs.V1.JobExecutionStatus": {"enum": ["Unknown", "Queued", "Running", "Completed", "CompletedWithErrors", "Cancelled", "Error", "QueuedForCancel"], "type": "string"}, "ValidationsApi.Jobs.V1.JobListResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "jobId": {"type": "string", "nullable": true}, "name": {"type": "string", "nullable": true}, "jobTypeId": {"type": "string", "nullable": true}, "jobTypeName": {"type": "string", "nullable": true}, "sourceConnectionId": {"type": "string", "nullable": true}, "destinationConnectionId": {"type": "string", "nullable": true}, "profileId": {"type": "string", "nullable": true}, "applicationId": {"type": "string", "nullable": true}, "schedule": {"$ref": "#/components/schemas/ValidationsApi.Jobs.V1.Schedule"}, "jobStatus": {"$ref": "#/components/schemas/ValidationsApi.Jobs.V1.JobStatus"}, "jobExecutionId": {"type": "string", "nullable": true}, "jobExecutionStatus": {"$ref": "#/components/schemas/ValidationsApi.Jobs.V1.JobExecutionStatus"}, "jobExecutionStartDateTime": {"type": "string", "nullable": true}, "jobExecutionEndDateTime": {"type": "string", "nullable": true}, "metrics": {"type": "array", "items": {"$ref": "#/components/schemas/ValidationsApi.Jobs.V1.Metric"}, "nullable": true, "readOnly": true}, "childJobs": {"type": "array", "items": {"$ref": "#/components/schemas/ValidationsApi.Jobs.V1.ChildJob"}, "nullable": true, "readOnly": true}, "createdBy": {"type": "string", "nullable": true}, "createdDateTime": {"type": "string", "nullable": true}, "lastModifiedBy": {"type": "string", "nullable": true}, "lastModifiedDateTime": {"type": "string", "nullable": true}, "collectionId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "ValidationsApi.Jobs.V1.JobMetadata": {"type": "object", "properties": {"code": {"type": "string", "nullable": true}, "value": {"type": "string", "nullable": true}}, "additionalProperties": false}, "ValidationsApi.Jobs.V1.JobProfileResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "jobId": {"type": "string", "nullable": true}, "name": {"type": "string", "nullable": true}, "jobTypeId": {"type": "string", "nullable": true}, "jobTypeName": {"type": "string", "nullable": true}, "sourceConnectionId": {"type": "string", "nullable": true}, "destinationConnectionId": {"type": "string", "nullable": true}, "profileId": {"type": "string", "nullable": true}, "profileName": {"type": "string", "nullable": true}, "applicationId": {"type": "string", "nullable": true}, "jobPoints": {"type": "integer", "format": "int32"}, "dataRefreshType": {"$ref": "#/components/schemas/ValidationsApi.Jobs.V1.DataRefreshType"}, "dataRefreshSpecificDate": {"type": "string", "nullable": true}, "maxApiFailure": {"type": "integer", "format": "int32"}, "maxApiRetry": {"type": "integer", "format": "int32"}, "jobCompleteCallbackUrl": {"type": "string", "nullable": true}, "jobMetadata": {"type": "array", "items": {"$ref": "#/components/schemas/ValidationsApi.Jobs.V1.JobMetadata"}, "nullable": true, "readOnly": true}, "schedule": {"$ref": "#/components/schemas/ValidationsApi.Jobs.V1.Schedule"}, "notificationEmails": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}, "jobStatus": {"$ref": "#/components/schemas/ValidationsApi.Jobs.V1.JobStatus"}, "jobExecutionId": {"type": "string", "nullable": true}, "jobExecutionStatus": {"$ref": "#/components/schemas/ValidationsApi.Jobs.V1.JobExecutionStatus"}, "jobExecutionStartDateTime": {"type": "string", "nullable": true}, "jobExecutionEndDateTime": {"type": "string", "nullable": true}, "metrics": {"type": "array", "items": {"$ref": "#/components/schemas/ValidationsApi.Jobs.V1.Metric"}, "nullable": true, "readOnly": true}, "childJobs": {"type": "array", "items": {"$ref": "#/components/schemas/ValidationsApi.Jobs.V1.ChildJob"}, "nullable": true, "readOnly": true}, "createdBy": {"type": "string", "nullable": true}, "createdDateTime": {"type": "string", "nullable": true}, "lastModifiedBy": {"type": "string", "nullable": true}, "lastModifiedDateTime": {"type": "string", "nullable": true}, "collectionId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "ValidationsApi.Jobs.V1.JobStatus": {"enum": ["Unknown", "Active", "Deactivated", "QueuedForDelete", "QueuedForScheduleRestart"], "type": "string"}, "ValidationsApi.Jobs.V1.Metric": {"type": "object", "properties": {"entity": {"type": "string", "nullable": true}, "processed": {"type": "integer", "format": "int32"}, "success": {"type": "integer", "format": "int32"}, "errors": {"type": "integer", "format": "int32"}}, "additionalProperties": false}, "ValidationsApi.Jobs.V1.PaginatedItemsResponse": {"type": "object", "properties": {"pageIndex": {"type": "integer", "format": "int32"}, "pageSize": {"type": "integer", "format": "int32"}, "count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/ValidationsApi.Jobs.V1.JobListResponse"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "ValidationsApi.Jobs.V1.Schedule": {"type": "object", "properties": {"enabled": {"type": "boolean"}, "beginDate": {"type": "string", "nullable": true}, "endDate": {"type": "string", "nullable": true}, "cron": {"type": "string", "nullable": true}, "timeZone": {"type": "string", "nullable": true}}, "additionalProperties": false}, "ValidationsApi.Jobs.V1.UpdateRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "id": {"type": "string", "nullable": true}, "name": {"type": "string", "nullable": true}, "jobMetadata": {"type": "array", "items": {"$ref": "#/components/schemas/ValidationsApi.Jobs.V1.JobMetadata"}, "nullable": true, "readOnly": true}, "schedule": {"$ref": "#/components/schemas/ValidationsApi.Jobs.V1.Schedule"}, "notificationEmails": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "ValidationsApi.RuleExecutionLogs.V1.FindResponse": {"type": "object", "properties": {"count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/ValidationsApi.RuleExecutionLogs.V1.RuleExecutionLogDto"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "ValidationsApi.RuleExecutionLogs.V1.RuleExecutionLogDto": {"type": "object", "properties": {"dbEnvironmentId": {"type": "string", "nullable": true}, "ruleId": {"type": "string", "nullable": true}, "id": {"type": "string", "nullable": true}, "response": {"type": "string", "nullable": true}, "result": {"type": "integer", "format": "int32"}, "evaluation": {"type": "boolean"}, "statusId": {"type": "integer", "format": "int32"}, "executionDate": {"type": "string", "nullable": true}, "executionTimeMs": {"type": "integer", "format": "int64"}, "executedSql": {"type": "string", "nullable": true}, "diagnosticSql": {"type": "string", "nullable": true}, "ruleDetailsDestinationId": {"type": "integer", "format": "int32", "nullable": true}, "detailsSchema": {"type": "string", "nullable": true}, "detailsTableName": {"type": "string", "nullable": true}, "details": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "ValidationsApi.Rules.V1.CreateRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "description": "Details", "nullable": true}, "containerId": {"type": "string", "nullable": true}, "id": {"type": "string", "nullable": true}, "name": {"type": "string", "nullable": true}, "description": {"type": "string", "nullable": true}, "diagnosticSql": {"type": "string", "description": "SQL", "nullable": true}, "errorSeverityLevel": {"type": "integer", "format": "int32"}, "errorMessage": {"type": "string", "nullable": true}, "maxNumberResults": {"type": "integer", "format": "int32", "nullable": true}, "ruleIdentification": {"type": "string", "description": "Metadata", "nullable": true}, "resolution": {"type": "string", "nullable": true}, "tags": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}, "version": {"type": "string", "nullable": true}}, "additionalProperties": false}, "ValidationsApi.Rules.V1.PaginatedRules": {"type": "object", "properties": {"count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/ValidationsApi.Rules.V1.RuleDto"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "ValidationsApi.Rules.V1.RuleDto": {"type": "object", "properties": {"tenantId": {"type": "string", "description": "Details", "nullable": true}, "containerId": {"type": "string", "nullable": true}, "id": {"type": "string", "nullable": true}, "name": {"type": "string", "nullable": true}, "description": {"type": "string", "nullable": true}, "diagnosticSql": {"type": "string", "description": "SQL", "nullable": true}, "errorSeverityLevel": {"type": "integer", "format": "int32"}, "errorMessage": {"type": "string", "nullable": true}, "maxNumberResults": {"type": "integer", "format": "int32", "nullable": true}, "ruleIdentification": {"type": "string", "description": "Metadata", "nullable": true}, "resolution": {"type": "string", "nullable": true}, "tags": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}, "version": {"type": "string", "nullable": true}, "parentCollection": {"$ref": "#/components/schemas/ValidationsApi.Containers.V1.ContainerDto"}, "parentContainer": {"$ref": "#/components/schemas/ValidationsApi.Containers.V1.ContainerDto"}}, "additionalProperties": false}, "ValidationsApi.Rules.V1.UpdateRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "description": "Details", "nullable": true}, "id": {"type": "string", "nullable": true}, "name": {"type": "string", "nullable": true}, "description": {"type": "string", "nullable": true}, "diagnosticSql": {"type": "string", "description": "SQL", "nullable": true}, "errorSeverityLevel": {"type": "integer", "format": "int32"}, "errorMessage": {"type": "string", "nullable": true}, "maxNumberResults": {"type": "integer", "format": "int32", "nullable": true}, "ruleIdentification": {"type": "string", "description": "Metadata", "nullable": true}, "resolution": {"type": "string", "nullable": true}, "tags": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}, "version": {"type": "string", "nullable": true}}, "additionalProperties": false}, "ValidationsApi.Tags.V1.CreateRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "name": {"type": "string", "nullable": true}, "description": {"type": "string", "nullable": true}, "isPublic": {"type": "boolean"}}, "additionalProperties": false}, "ValidationsApi.Tags.V1.PaginatedTags": {"type": "object", "properties": {"count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/ValidationsApi.Tags.V1.TagDto"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "ValidationsApi.Tags.V1.TagDto": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "id": {"type": "string", "nullable": true}, "name": {"type": "string", "nullable": true}, "description": {"type": "string", "nullable": true}, "isPublic": {"type": "boolean"}}, "additionalProperties": false}, "ValidationsApi.Tags.V1.UpdateRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "id": {"type": "string", "nullable": true}, "name": {"type": "string", "nullable": true}, "description": {"type": "string", "nullable": true}, "isPublic": {"type": "boolean"}}, "additionalProperties": false}}, "securitySchemes": {"oauth2": {"type": "oauth2", "description": "Use bearer token generated from an OpenId server", "flows": {"clientCredentials": {"tokenUrl": "https://login.edgraph.dev/connect/token", "scopes": {"https://api.edgraph.com/tenant": "EdGraph Platform - Tenant Api"}}}}}}, "security": [{"oauth2": ["https://api.edgraph.com/tenant"]}]}