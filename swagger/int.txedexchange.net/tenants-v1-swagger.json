{"openapi": "3.0.1", "info": {"title": "Tenant Api", "description": "Tenant Api - v1.0", "version": "v1.0"}, "servers": [{"url": "https://api.int.txedexchange.net/tenant"}], "paths": {"/tenants/{tenantId}/apiclients/{clientId}/regeneratesecret": {"put": {"tags": ["API Clients"], "summary": "Regenerates an OpenId API Client's secret", "operationId": "RegenerateTenantApiClientSecretAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "clientId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.ApiClient.V1.RegenerateApiClientSecretRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.ApiClient.V1.RegenerateApiClientSecretRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.ApiClient.V1.RegenerateApiClientSecretRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.ApiClient.V1.RegenerateApiClientSecretRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.ApiClient.V1.ApiClientSecretRegeneratedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/apiclients/{clientId}": {"delete": {"tags": ["API Clients"], "summary": "Deletes an OpenId API Client", "operationId": "DeleteTenantApiClientAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "clientId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "204": {"description": "The resource was successfully deleted."}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "get": {"tags": ["API Clients"], "summary": "Retrieves an OpenId API Client", "operationId": "GetTenantApiClientByIdAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "clientId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.ApiClient.V1.ApiClientProfileResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}, "put": {"tags": ["API Clients"], "summary": "Updates an OpenId API Client", "operationId": "UpdateTenantApiClientAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "clientId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.ApiClient.V1.UpdateApiClientRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.ApiClient.V1.UpdateApiClientRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.ApiClient.V1.UpdateApiClientRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.ApiClient.V1.UpdateApiClientRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.ApiClient.V1.ApiClientUpdatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/apiclients": {"get": {"tags": ["API Clients"], "summary": "Retrieves a list of OpenId API Clients associated to this tenant", "operationId": "GetAllTenantApiClientsAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.ApiClient.V1.ApiClientPaginatedItemsResponsePaginatedItemsViewModel"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "post": {"tags": ["API Clients"], "summary": "Creates a new OpenId API Client", "operationId": "CreateTenantApiClientAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.ApiClient.V1.CreateApiClientRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.ApiClient.V1.CreateApiClientRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.ApiClient.V1.CreateApiClientRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.ApiClient.V1.CreateApiClientRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "201": {"description": "The resource was created. The location of the resource is available in the Location header of the response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.ApiClient.V1.ApiClientCreatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/clients/{clientId}/settings": {"get": {"tags": ["Applications / Settings"], "summary": "Retrieves a list of a Tenant's ClientSettings.", "operationId": "GetClientSettingsAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "clientId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.GetAppSettingsResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "post": {"tags": ["Applications / Settings"], "summary": "Creates/updates a Tenant's ClientSettings.", "operationId": "SetClientSettingsAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "clientId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.SetAppSettingsRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.SetAppSettingsRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.SetAppSettingsRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.SetAppSettingsRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.SetAppSettingsResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/clients/{clientId}/settingstypes": {"get": {"tags": ["Applications / Settings"], "summary": "Retrieves a list of ClientSettingsTypes.", "operationId": "GetClientSettingsTypesAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "clientId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.ClientSettingsType.V1.GetClientSettingsTypesResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/applicationtiles": {"get": {"tags": ["Applications / Tiles"], "summary": "Retrieves a list of applications licensed to the user that is currently logged in the context of this tenant", "operationId": "GetTenantApplicationTilesAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 100}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string", "default": "applicationName ASC"}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Platform.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.ApplicationTilesResponseWithUserApplicationLicense"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/applications/{applicationId}": {"get": {"tags": ["Applications"], "summary": "Retrieves an application", "operationId": "GetTenantApplicationProfileByIdAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "applicationId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ApplicationApi.Application.V1.ApplicationProfileResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/applications": {"get": {"tags": ["Applications"], "summary": "Retrieves a list of applications associated to this tenant", "operationId": "GetTenantApplicationsAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string"}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ApplicationApi.Application.V1.ApplicationListResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/domains/{domainName}/verify": {"put": {"tags": ["Domains"], "summary": "Verify a  tenant's domain", "operationId": "VerifyTenantDomainAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "domainName", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.VerifyDomainRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.VerifyDomainRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.VerifyDomainRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.VerifyDomainRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.DomainVerifiedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/domains/{domainName}": {"delete": {"tags": ["Domains"], "summary": "Deletes a user", "operationId": "DeleteTenantDomainAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "domainName", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "204": {"description": "The resource was successfully deleted."}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "get": {"tags": ["Domains"], "summary": "Retrieves a domain", "operationId": "GetTenantDomainProfileByNameAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "domainName", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.DomainProfileResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}, "put": {"tags": ["Domains"], "summary": "Updates a domain", "operationId": "UpdateTenantDomainAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "domainName", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.UpdateDomainRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.UpdateDomainRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.UpdateDomainRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.UpdateDomainRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.DomainUpdatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/domains": {"get": {"tags": ["Domains"], "summary": "Retrieves a list of domains associated to this tenant", "operationId": "GetAllTenantDomainsAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.DomainListResponseDtoPaginatedItemsViewModel"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "post": {"tags": ["Domains"], "summary": "Creates a new domain", "operationId": "CreateTenantDomainAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.CreateDomainRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.CreateDomainRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.CreateDomainRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.CreateDomainRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "201": {"description": "The resource was created. The location of the resource is available in the Location header of the response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.DomainCreatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/invitations/{invitationId}": {"delete": {"tags": ["Invitations"], "summary": "Deletes an invitation", "operationId": "DeleteTenantInvitationAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "invitationId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "204": {"description": "The resource was successfully deleted."}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "get": {"tags": ["Invitations"], "summary": "Retrieves a specific invitation", "operationId": "GetTenantInvitationByIdAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "invitationId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.Invitation.V1.InvitationResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/invitations": {"get": {"tags": ["Invitations"], "summary": "Retrieves a list of invitations associated to this tenant", "operationId": "GetAllTenantInvitationsAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.Invitation.V1.InvitationListResponsePaginatedItemsViewModel"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "post": {"tags": ["Invitations"], "summary": "Creates and sends an invitation to a user", "operationId": "SendTenantInvitationAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Requests.SendInvitationRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Requests.SendInvitationRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Requests.SendInvitationRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Requests.SendInvitationRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "201": {"description": "The resource was created. The location of the resource is available in the Location header of the response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.Invitation.V1.InvitationSentResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/onboardingsteps/{stepNumber}": {"put": {"tags": ["OnboardingSteps"], "summary": "Updates the status of an Onboarding Step.", "operationId": "UpdateOnboardingStepAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "stepNumber", "in": "path", "description": "", "required": true, "schema": {"type": "integer", "format": "int32"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.UpdateOnboardingStepRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.UpdateOnboardingStepRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.UpdateOnboardingStepRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.UpdateOnboardingStepRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.TenantUpdatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/onboardingsteps": {"post": {"tags": ["OnboardingSteps"], "summary": "Creates an Onboarding Step.", "operationId": "CreateOnboardingStepAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.CreateOnboardingStepRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.CreateOnboardingStepRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.CreateOnboardingStepRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.CreateOnboardingStepRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.TenantUpdatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/organizations/{organizationIdentifier}": {"delete": {"tags": ["Organizations"], "summary": "Deletes an Organization.", "operationId": "DeleteOrganizationAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "organizationIdentifier", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.OrganizationDeletedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}, "get": {"tags": ["Organizations"], "summary": "Retrieves an Organization by ID.", "operationId": "GetOrganizationByIdAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "organizationIdentifier", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.Organization"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}, "put": {"tags": ["Organizations"], "summary": "Updates an Organization.", "operationId": "UpdateOrganizationAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "organizationIdentifier", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.UpdateOrganizationRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.UpdateOrganizationRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.UpdateOrganizationRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.UpdateOrganizationRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.OrganizationUpdatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/organizations/instances": {"get": {"tags": ["Organizations"], "summary": "Retrieves the tenant's Ed-Fi Admin instances.", "operationId": "GetEdFiAdminInstancesAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string", "default": "instanceName"}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.GetEdFiAdminInstancesResponse"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/organizations/sync": {"post": {"tags": ["Organizations"], "summary": "Syncs an Ed-Fi Admin instance's organizations into the Tenant's organizations.", "operationId": "SyncOrganizationsAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.SyncOrganizationsRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.SyncOrganizationsRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.SyncOrganizationsRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.SyncOrganizationsRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "201": {"description": "Created", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.OrganizationsSyncedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved."}}}}, "/tenants/{tenantId}/organizations": {"get": {"tags": ["Organizations"], "summary": "Retrieves a list of Organizations.", "operationId": "GetOrganizationsAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.GetOrganizationsPaginatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "post": {"tags": ["Organizations"], "summary": "Creates an Organization.", "operationId": "CreateOrganizationAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.CreateOrganizationRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.CreateOrganizationRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.CreateOrganizationRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.CreateOrganizationRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "201": {"description": "The resource was created. The location of the resource is available in the Location header of the response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.OrganizationCreatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/staffclassifications/{staffClassificationId}": {"delete": {"tags": ["StaffClassifications"], "summary": "Deletes a StaffClassification.", "operationId": "DeleteStaffClassification", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "staffClassificationId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.StaffClassification.V1.StaffClassificationDeletedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "get": {"tags": ["StaffClassifications"], "summary": "Retrieves a StaffClassification by ID.", "operationId": "GetStaffClassificationById", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "staffClassificationId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.StaffClassification.V1.StaffClassificationResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}, "put": {"tags": ["StaffClassifications"], "summary": "Updates a StaffClassification.", "operationId": "UpdateStaffClassification", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "staffClassificationId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.StaffClassification.V1.UpdateStaffClassificationRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.StaffClassification.V1.UpdateStaffClassificationRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.StaffClassification.V1.UpdateStaffClassificationRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.StaffClassification.V1.UpdateStaffClassificationRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.StaffClassification.V1.StaffClassificationUpdatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/staffclassifications/namespaces": {"get": {"tags": ["StaffClassifications"], "summary": "Retrieves a list of unique Staff Classification Namespaces.", "operationId": "GetStaffClassificationsNamespaces", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.StaffClassification.V1.GetStaffClassificationsNamespacesResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/staffclassifications": {"get": {"tags": ["StaffClassifications"], "summary": "Retrieves a list of StaffClassifications.", "operationId": "GetStaffClassifications", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.StaffClassification.V1.GetStaffClassificationsResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "post": {"tags": ["StaffClassifications"], "summary": "Creates a StaffClassification.", "operationId": "CreateStaffClassification", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.StaffClassification.V1.CreateStaffClassificationRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.StaffClassification.V1.CreateStaffClassificationRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.StaffClassification.V1.CreateStaffClassificationRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.StaffClassification.V1.CreateStaffClassificationRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "201": {"description": "The resource was created. The location of the resource is available in the Location header of the response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.StaffClassification.V1.StaffClassificationCreatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/subscriptions/{subscriptionId}": {"get": {"tags": ["Subscriptions"], "summary": "Retrieves a subscription", "operationId": "GetTenantSubscriptionProfileByIdAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "subscriptionId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.SubscriptionProfileResponseDto"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}, "put": {"tags": ["Subscriptions"], "summary": "Updates a subscription", "operationId": "UpdateTenantSubscriptionAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "subscriptionId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.UpdateSubscriptionRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.UpdateSubscriptionRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.UpdateSubscriptionRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.UpdateSubscriptionRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.SubscriptionUpdatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/subscriptions/applications": {"get": {"tags": ["Subscriptions"], "summary": "Retrieves a list of applications available for subscription.", "operationId": "GetAllTenantSubscriptionApplications", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ApplicationApi.Application.V1.PaginatedItemsResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/subscriptions": {"get": {"tags": ["Subscriptions"], "summary": "Retrieves a list of subscriptions associated to this tenant", "operationId": "GetAllTenantSubscriptionsAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.SubscriptionListResponseDtoPaginatedItemsViewModel"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "post": {"tags": ["Subscriptions"], "summary": "Creates a new subscription", "operationId": "CreateTenantSubscriptionAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.CreateSubscriptionRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.CreateSubscriptionRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.CreateSubscriptionRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.CreateSubscriptionRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "201": {"description": "The resource was created. The location of the resource is available in the Location header of the response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.SubscriptionCreatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/settings": {"get": {"tags": ["Tenant / SettingTypes"], "summary": "Retrieves all setting types", "operationId": "GetAllSettingTypes", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.TenantSettingTypesListResponsePaginatedItemsViewModel"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}": {"get": {"tags": ["Tenants"], "summary": "Retrieves the profile of a specific tenant", "operationId": "GetTenantByIdAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.TenantProfileResponse"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}, "put": {"tags": ["Tenants"], "summary": "Updates a tenant's profile", "description": "Note: Only the tenant's Identity Providers can be updated at this time", "operationId": "UpdateTenantAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Requests.Tenants.UpdateTenantRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Requests.Tenants.UpdateTenantRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Requests.Tenants.UpdateTenantRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Requests.Tenants.UpdateTenantRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.TenantUpdatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/users/{userId}/educationorganizations/{educationOrganizationId}": {"delete": {"tags": ["Users - Education Organizations"], "summary": "Removes an Education Organization from a user.", "operationId": "RemoveUserEducationOrganization", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "userId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "educationOrganizationId", "in": "path", "description": "", "required": true, "schema": {"type": "integer", "format": "int32"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.EducationOrganizationRemovedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}, "put": {"tags": ["Users - Education Organizations"], "summary": "Updates the Education Organization of a user.", "operationId": "UpdateUserEducationOrganization", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "userId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "educationOrganizationId", "in": "path", "description": "", "required": true, "schema": {"type": "integer", "format": "int32"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Requests.EducationOrganizations.UpdateEducationOrganizationRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Requests.EducationOrganizations.UpdateEducationOrganizationRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Requests.EducationOrganizations.UpdateEducationOrganizationRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Requests.EducationOrganizations.UpdateEducationOrganizationRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.EducationOrganizationUpdatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/users/{userId}/educationorganizations": {"get": {"tags": ["Users - Education Organizations"], "summary": "Gets the Education Organizations of a user.", "operationId": "GetUserEducationOrganizations", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "userId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.EducationOrganizationPaginatedItemsResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}, "post": {"tags": ["Users - Education Organizations"], "summary": "Adds an Education Organization to a user.", "operationId": "AddUserEducationOrganization", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "userId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Requests.EducationOrganizations.AddEducationOrganizationRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Requests.EducationOrganizations.AddEducationOrganizationRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Requests.EducationOrganizations.AddEducationOrganizationRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Requests.EducationOrganizations.AddEducationOrganizationRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.EducationOrganizationAddedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/users/{userId}/licenses/assignbulk": {"put": {"tags": ["Users - Licenses"], "summary": "Assigns one or more licenses to a user in the context of a specific tenant", "operationId": "AssignLicenseTenantUserBulkAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "userId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Requests.Licenses.AssignLicenseBulkRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Requests.Licenses.AssignLicenseBulkRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Requests.Licenses.AssignLicenseBulkRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Requests.Licenses.AssignLicenseBulkRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.LicenseAssignedBulkResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/users/{userId}/licenses/assign": {"put": {"tags": ["Users - Licenses"], "summary": "Assigns a license to a user in the context of a specific tenant", "operationId": "AssignLicenseTenantUserAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "userId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Requests.Licenses.AssignLicenseRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Requests.Licenses.AssignLicenseRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Requests.Licenses.AssignLicenseRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Requests.Licenses.AssignLicenseRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.LicenseAssignedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/users/{userId}/licenses/revokebulk": {"put": {"tags": ["Users - Licenses"], "summary": "Revokes one or more licenses from a user in the context of a specific tenant", "operationId": "RevokeLicenseTenantUserBulkAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "userId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Requests.Licenses.RevokeLicenseBulkRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Requests.Licenses.RevokeLicenseBulkRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Requests.Licenses.RevokeLicenseBulkRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Requests.Licenses.RevokeLicenseBulkRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.LicenseRevokedBulkResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/users/{userId}/licenses/revoke": {"put": {"tags": ["Users - Licenses"], "summary": "Revokes a license from a user in the context of a specific tenant", "operationId": "RevokeLicenseTenantUserAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "userId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.RevokeLicenseRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.RevokeLicenseRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.RevokeLicenseRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.RevokeLicenseRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.LicenseRevokedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/users/{userId}/licenses": {"get": {"tags": ["Users - Licenses"], "summary": "Retrieves a list of user licenses in the context of a specific tenant", "operationId": "GetAllTenantUserApplicationLicensesAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "userId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Platform.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.UserLicensePaginatedItemsViewModel"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/users/{email}/status": {"get": {"tags": ["Users"], "summary": "Searches a user by email and retrieves it's minimal information and status.", "operationId": "GetUserTenantStatusProfile", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "email", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.UserTenantStatusProfile"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/users/{userId}/activate": {"put": {"tags": ["Users"], "summary": "Activates a user", "operationId": "ActivateTenantUserAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "userId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.ActivateUserRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.ActivateUserRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.ActivateUserRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.ActivateUserRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.UserActivatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/users/{userId}/deactivate": {"put": {"tags": ["Users"], "summary": "Deactivates a user", "operationId": "DeactivateTenantUserAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "userId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.DeactivateUserRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.DeactivateUserRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.DeactivateUserRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.DeactivateUserRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.UserDeactivatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/users/{userId}/resetpassword": {"put": {"tags": ["Users"], "summary": "Resets a user's password", "description": "Note: This is only applicable to user created in the local identity provider.", "operationId": "ResetPasswordTenantUserAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "userId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.ResetPasswordRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.ResetPasswordRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.ResetPasswordRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.ResetPasswordRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.PasswordResettedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/users/{userId}": {"delete": {"tags": ["Users"], "summary": "Deletes a user", "operationId": "DeleteTenantUserAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "userId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "204": {"description": "The resource was successfully deleted."}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "get": {"tags": ["Users"], "summary": "Retrieves a user", "operationId": "GetTenantUserProfileByIdAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "userId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Platform.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.UserProfileResponseWithApplicationLicense"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}, "put": {"tags": ["Users"], "summary": "Creates or updates a user", "operationId": "UpdateTenantUserAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "userId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.UpdateUserRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.UpdateUserRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.UpdateUserRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.UpdateUserRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.UserUpdatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/users": {"get": {"tags": ["Users"], "summary": "Retrieves a list of users associated to this tenant", "operationId": "GetAllTenantUsersAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Platform.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.UserListResponseWithApplicationLicensePaginatedItemsViewModel"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "post": {"tags": ["Users"], "summary": "Creates a user in the local identity provider", "description": "Note: This is only used to create a user in the local identity provider, i.e. this cannot be used to create a user in an external identity providers such as Microsoft or Google.", "operationId": "CreateTenantLocalUserAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Requests.CreateLocalUserRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Requests.CreateLocalUserRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Requests.CreateLocalUserRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Requests.CreateLocalUserRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "201": {"description": "The resource was created. The location of the resource is available in the Location header of the response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.LocalUserCreatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/webhooks/{webhookId}": {"delete": {"tags": ["Webhooks"], "summary": "Removes a webhook.", "operationId": "DeleteWebhookAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "webhookId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Webhook.V1.WebhookIdResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "get": {"tags": ["Webhooks"], "summary": "Retrieves a webhook by ID.", "operationId": "GetWebhookByIdAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "webhookId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Webhook.V1.WebhookResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "put": {"tags": ["Webhooks"], "summary": "Updates a webhook", "operationId": "UpdateWebhookAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "webhookId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/TenantApi.Webhook.V1.UpdateWebhookRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Webhook.V1.UpdateWebhookRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Webhook.V1.UpdateWebhookRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/TenantApi.Webhook.V1.UpdateWebhookRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Webhook.V1.WebhookIdResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/webhooks/events": {"get": {"tags": ["Webhooks"], "operationId": "GetAllWebhookSubscriptionsAsync", "parameters": [{"name": "tenantId", "in": "path", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "Success", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Webhook.V1.WebhookEventsResponse"}}}}, "400": {"description": "Bad Request", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/webhooks": {"get": {"tags": ["Webhooks"], "summary": "Retrieves a list of webhooks.", "operationId": "GetAllWebhooksAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Webhook.V1.PaginatedItemsResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "post": {"tags": ["Webhooks"], "summary": "Creates a new Webhook", "operationId": "CreateWebhookAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/TenantApi.Webhook.V1.CreateWebhookRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Webhook.V1.CreateWebhookRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Webhook.V1.CreateWebhookRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/TenantApi.Webhook.V1.CreateWebhookRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Webhook.V1.WebhookIdResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}}, "components": {"schemas": {"ApplicationApi.Application.V1.ApplicationListResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "applicationId": {"type": "string", "nullable": true}, "applicationName": {"type": "string", "nullable": true}, "version": {"type": "string", "nullable": true}, "tags": {"type": "string", "nullable": true}, "groups": {"type": "string", "nullable": true}, "applicationStatus": {"$ref": "#/components/schemas/ApplicationApi.Application.V1.ApplicationStatus"}, "roles": {"type": "array", "items": {"$ref": "#/components/schemas/ApplicationApi.Application.V1.Role"}, "nullable": true, "readOnly": true}, "createdBy": {"type": "string", "nullable": true}, "createdDateTime": {"type": "string", "nullable": true}, "lastModifiedBy": {"type": "string", "nullable": true}, "lastModifiedDateTime": {"type": "string", "nullable": true}, "deletedAt": {"type": "string", "nullable": true}, "subscriptionType": {"$ref": "#/components/schemas/ApplicationApi.Application.V1.ApplicationSubscriptionType"}, "documentationUrl": {"type": "string", "nullable": true}}, "additionalProperties": false}, "ApplicationApi.Application.V1.ApplicationProfileResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "applicationId": {"type": "string", "nullable": true}, "applicationType": {"$ref": "#/components/schemas/ApplicationApi.Application.V1.ApplicationType"}, "applicationName": {"type": "string", "nullable": true}, "applicationUri": {"type": "string", "nullable": true}, "version": {"type": "string", "nullable": true}, "tooltipText": {"type": "string", "nullable": true}, "applicationDescription": {"type": "string", "nullable": true}, "tags": {"type": "string", "nullable": true}, "groups": {"type": "string", "nullable": true}, "applicationStatus": {"$ref": "#/components/schemas/ApplicationApi.Application.V1.ApplicationStatus"}, "openInNewWindow": {"type": "boolean"}, "roles": {"type": "array", "items": {"$ref": "#/components/schemas/ApplicationApi.Application.V1.Role"}, "nullable": true, "readOnly": true}, "createdBy": {"type": "string", "nullable": true}, "createdDateTime": {"type": "string", "nullable": true}, "lastModifiedBy": {"type": "string", "nullable": true}, "lastModifiedDateTime": {"type": "string", "nullable": true}, "clientId": {"type": "string", "nullable": true}, "subscriptionType": {"$ref": "#/components/schemas/ApplicationApi.Application.V1.ApplicationSubscriptionType"}}, "additionalProperties": false}, "ApplicationApi.Application.V1.ApplicationStatus": {"enum": ["Unknown", "Draft", "Published"], "type": "string"}, "ApplicationApi.Application.V1.ApplicationSubscriptionType": {"enum": ["Auto", "Manual", "None"], "type": "string"}, "ApplicationApi.Application.V1.ApplicationType": {"enum": ["Unknown", "SSO", "Link"], "type": "string"}, "ApplicationApi.Application.V1.PaginatedItemsResponse": {"type": "object", "properties": {"pageIndex": {"type": "integer", "format": "int32"}, "pageSize": {"type": "integer", "format": "int32"}, "count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/ApplicationApi.Application.V1.ApplicationListResponse"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "ApplicationApi.Application.V1.Role": {"type": "object", "properties": {"roleName": {"type": "string", "nullable": true}, "isDefault": {"type": "boolean"}, "isAvailableForTenants": {"type": "boolean"}, "displayName": {"type": "string", "nullable": true}, "description": {"type": "string", "nullable": true}, "sortOrder": {"type": "integer", "format": "int32"}}, "additionalProperties": false}, "ApplicationApi.Application.V1.UrlType": {"enum": ["Link", "Asset"], "type": "string"}, "EdGraph.Common.Errors.Core.ProblemDetails": {"type": "object", "properties": {"type": {"type": "string", "nullable": true}, "status": {"type": "integer", "format": "int32"}, "title": {"type": "string", "nullable": true}, "details": {"type": "string", "nullable": true}, "instance": {"type": "string", "nullable": true}, "extensions": {"type": "object", "additionalProperties": {"nullable": true}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Requests.CreateLocalUserRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "userName": {"type": "string", "nullable": true}, "email": {"type": "string", "nullable": true}, "firstName": {"type": "string", "nullable": true}, "lastName": {"type": "string", "nullable": true}, "role": {"type": "string", "nullable": true}, "phoneNumber": {"type": "string", "nullable": true}, "lockoutEnabled": {"type": "boolean"}, "password": {"type": "string", "nullable": true}, "autoGeneratedPassword": {"type": "boolean"}, "twoFactorEnabled": {"type": "boolean"}, "assignLicenseRequests": {"type": "array", "items": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Requests.Licenses.AssignLicenseRequest"}, "nullable": true}}, "additionalProperties": false}, "EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Requests.EducationOrganizations.AddEducationOrganizationRequest": {"type": "object", "properties": {"userId": {"type": "string", "nullable": true}, "tenantId": {"type": "string", "nullable": true}, "educationOrganizationId": {"type": "integer", "format": "int32"}, "staffClassifications": {"type": "array", "items": {"type": "string"}, "nullable": true}, "source": {"type": "string", "nullable": true}}, "additionalProperties": false}, "EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Requests.EducationOrganizations.UpdateEducationOrganizationRequest": {"type": "object", "properties": {"userId": {"type": "string", "nullable": true}, "tenantId": {"type": "string", "nullable": true}, "educationOrganizationId": {"type": "integer", "format": "int32"}, "staffClassifications": {"type": "array", "items": {"type": "string"}, "nullable": true}}, "additionalProperties": false}, "EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Requests.Licenses.AssignLicenseBulkRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "userId": {"type": "string", "nullable": true}, "assignLicenseRequests": {"type": "array", "items": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Requests.Licenses.AssignLicenseRequest"}, "nullable": true}}, "additionalProperties": false}, "EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Requests.Licenses.AssignLicenseRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "subscriptionId": {"type": "string", "nullable": true}, "applicationId": {"type": "string", "nullable": true}, "userId": {"type": "string", "nullable": true}, "roles": {"type": "array", "items": {"type": "string"}, "nullable": true}}, "additionalProperties": false}, "EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Requests.Licenses.RevokeLicenseBulkRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "userId": {"type": "string", "nullable": true}, "revokeLicenseRequests": {"type": "array", "items": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Requests.Licenses.RevokeLicenseRequest"}, "nullable": true}}, "additionalProperties": false}, "EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Requests.Licenses.RevokeLicenseRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "subscriptionId": {"type": "string", "nullable": true}, "applicationId": {"type": "string", "nullable": true}, "userId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Requests.SendInvitationRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "email": {"type": "string", "nullable": true}, "firstName": {"type": "string", "nullable": true}, "lastName": {"type": "string", "nullable": true}, "role": {"type": "string", "nullable": true}, "assignLicenseRequests": {"type": "array", "items": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Requests.Licenses.AssignLicenseRequest"}, "nullable": true}, "invitingUserDisplayName": {"type": "string", "nullable": true}, "dontSendEmail": {"type": "boolean", "nullable": true}}, "additionalProperties": false}, "EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Requests.Tenants.TenantIdentityProvider": {"enum": ["Local", "Aad", "Google", "Adfs", "Txedexchange"], "type": "string"}, "EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Requests.Tenants.TenantSetting": {"type": "object", "properties": {"code": {"type": "string", "nullable": true}, "value": {"type": "string", "nullable": true}, "dataType": {"type": "string", "nullable": true}}, "additionalProperties": false}, "EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Requests.Tenants.TenantStatus": {"enum": ["Unknown", "Active", "Inactive"], "type": "string"}, "EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Requests.Tenants.TenantType": {"enum": ["Unknown", "Internal", "State", "Collaborative", "District", "Partner", "Teacher", "Student"], "type": "string"}, "EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Requests.Tenants.UpdateTenantRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "tenantType": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Requests.Tenants.TenantType"}, "organizationIdentifier": {"type": "string", "nullable": true}, "organizationName": {"type": "string", "nullable": true}, "state": {"type": "string", "nullable": true}, "isDemo": {"type": "boolean"}, "enforceMfa": {"type": "boolean"}, "showLocalLoginOptionToTenantAdmins": {"type": "boolean", "nullable": true}, "tenantStatus": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Requests.Tenants.TenantStatus"}, "identityProviders": {"type": "array", "items": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Requests.Tenants.TenantIdentityProvider"}, "nullable": true}, "settings": {"type": "array", "items": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Requests.Tenants.TenantSetting"}, "nullable": true}}, "additionalProperties": false}, "EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.DomainListResponseDto": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "domainName": {"type": "string", "nullable": true}, "domainStatus": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.DomainStatus"}, "autoAssignUsers": {"type": "boolean"}, "createdBy": {"type": "string", "nullable": true}, "createdDateTime": {"type": "string", "nullable": true}, "lastModifiedBy": {"type": "string", "nullable": true}, "lastModifiedDateTime": {"type": "string", "nullable": true}}, "additionalProperties": false}, "EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.DomainListResponseDtoPaginatedItemsViewModel": {"type": "object", "properties": {"pageIndex": {"type": "integer", "format": "int32"}, "pageSize": {"type": "integer", "format": "int32"}, "count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.DomainListResponseDto"}, "nullable": true}}, "additionalProperties": false}, "EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.Role": {"type": "object", "properties": {"roleName": {"type": "string", "nullable": true}, "isDefault": {"type": "boolean"}, "isAvailableForTenants": {"type": "boolean"}, "displayName": {"type": "string", "nullable": true}, "description": {"type": "string", "nullable": true}, "sortOrder": {"type": "integer", "format": "int32"}}, "additionalProperties": false}, "EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.SubscriptionListResponseDto": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "subscriptionId": {"type": "string", "nullable": true}, "applicationId": {"type": "string", "nullable": true}, "applicationName": {"type": "string", "nullable": true}, "applicationRoles": {"type": "array", "items": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.Role"}, "nullable": true}, "startDateTime": {"type": "string", "nullable": true}, "endDateTime": {"type": "string", "nullable": true}, "actualEndDateTime": {"type": "string", "nullable": true}, "gracePeriod": {"type": "integer", "format": "int32"}, "numberOfLicenses": {"type": "integer", "format": "int32"}, "assignedLicenses": {"type": "integer", "format": "int32"}, "maxAssignedLicenses": {"type": "integer", "format": "int32"}, "lastMaxAssignedLicensesDateTime": {"type": "string", "nullable": true}, "licenseType": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.LicenseType"}, "subscriptionStatus": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.SubscriptionStatus"}, "autoAssign": {"type": "boolean"}, "createdBy": {"type": "string", "nullable": true}, "createdDateTime": {"type": "string", "nullable": true}, "lastModifiedBy": {"type": "string", "nullable": true}, "lastModifiedDateTime": {"type": "string", "nullable": true}}, "additionalProperties": false}, "EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.SubscriptionListResponseDtoPaginatedItemsViewModel": {"type": "object", "properties": {"pageIndex": {"type": "integer", "format": "int32"}, "pageSize": {"type": "integer", "format": "int32"}, "count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.SubscriptionListResponseDto"}, "nullable": true}}, "additionalProperties": false}, "EdGraph.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.SubscriptionProfileResponseDto": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "subscriptionId": {"type": "string", "nullable": true}, "applicationId": {"type": "string", "nullable": true}, "applicationName": {"type": "string", "nullable": true}, "startDateTime": {"type": "string", "nullable": true}, "endDateTime": {"type": "string", "nullable": true}, "actualEndDateTime": {"type": "string", "nullable": true}, "gracePeriod": {"type": "integer", "format": "int32"}, "numberOfLicenses": {"type": "integer", "format": "int32"}, "assignedLicenses": {"type": "integer", "format": "int32"}, "maxAssignedLicenses": {"type": "integer", "format": "int32"}, "lastMaxAssignedLicensesDateTime": {"type": "string", "nullable": true}, "licenseType": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.LicenseType"}, "subscriptionStatus": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.SubscriptionStatus"}, "autoAssign": {"type": "boolean"}, "createdBy": {"type": "string", "nullable": true}, "createdDateTime": {"type": "string", "nullable": true}, "lastModifiedBy": {"type": "string", "nullable": true}, "lastModifiedDateTime": {"type": "string", "nullable": true}}, "additionalProperties": false}, "EdGraph.Platform.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.ApplicationRole": {"type": "object", "properties": {"role": {"type": "string", "description": "The role associated with the application", "nullable": true}, "isAssigned": {"type": "boolean", "description": "Indicates if the user is assigned license for this application"}}, "additionalProperties": false}, "EdGraph.Platform.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.ApplicationTileResponseWithUserApplicationLicense": {"type": "object", "properties": {"applicationTenantId": {"type": "string", "description": "The Tenant this application belongs to", "nullable": true}, "applicationId": {"type": "string", "nullable": true}, "applicationName": {"type": "string", "nullable": true}, "applicationDescription": {"type": "string", "nullable": true}, "documentationUrl": {"type": "string", "nullable": true}, "applicationUri": {"type": "string", "nullable": true}, "version": {"type": "string", "nullable": true}, "tooltipText": {"type": "string", "nullable": true}, "tags": {"type": "string", "nullable": true}, "groups": {"type": "string", "nullable": true}, "lightIconUrl": {"type": "string", "nullable": true}, "darkIconUrl": {"type": "string", "nullable": true}, "lightBackgroundTileUrl": {"type": "string", "nullable": true}, "darkBackgroundTileUrl": {"type": "string", "nullable": true}, "lightOverlayTileUrl": {"type": "string", "nullable": true}, "darkOverlayTileUrl": {"type": "string", "nullable": true}, "showInAppLauncher": {"type": "boolean"}, "showInQuickLauncher": {"type": "boolean"}, "openInNewWindow": {"type": "boolean"}, "isTenantSubscribed": {"type": "boolean"}, "subscriptionTenantId": {"type": "string", "description": "The Tenant Id the subscription belongs to", "nullable": true}, "tenantSubscriptionId": {"type": "string", "description": "The Tenant subscription Id", "nullable": true}, "tenantSubscriptionStartDateTime": {"type": "string", "description": "The Tenant subscription start date", "nullable": true}, "tenantSubscriptionEndDateTime": {"type": "string", "description": "The Tenant subscription end date", "nullable": true}, "tenantSubscriptionActualEndDateTime": {"type": "string", "description": "The Tenant subscription end date", "nullable": true}, "isUserLicensed": {"type": "boolean"}, "urls": {"type": "array", "items": {"$ref": "#/components/schemas/EdGraph.Platform.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.ApplicationUrl"}, "nullable": true}}, "additionalProperties": false}, "EdGraph.Platform.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.ApplicationTilesResponseWithUserApplicationLicense": {"type": "object", "properties": {"data": {"type": "array", "items": {"$ref": "#/components/schemas/EdGraph.Platform.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.ApplicationTileResponseWithUserApplicationLicense"}, "nullable": true}}, "additionalProperties": false}, "EdGraph.Platform.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.ApplicationUrl": {"type": "object", "properties": {"code": {"type": "string", "nullable": true}, "label": {"type": "string", "nullable": true}, "value": {"type": "string", "nullable": true}, "openInNewTab": {"type": "boolean"}, "readonly": {"type": "boolean"}, "type": {"$ref": "#/components/schemas/ApplicationApi.Application.V1.UrlType"}}, "additionalProperties": false}, "EdGraph.Platform.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.TenantStatus": {"enum": ["Unknown", "Active", "Inactive"], "type": "string"}, "EdGraph.Platform.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.UserLicense": {"type": "object", "properties": {"subscriptionTenantId": {"type": "string", "description": "The Tenant Id the subscription belongs to", "nullable": true}, "isTenantSubscribed": {"type": "boolean", "description": "The Tenant has a subscription license for this application"}, "tenantSubscriptionId": {"type": "string", "description": "The Tenant subscription Id", "nullable": true}, "tenantSubscriptionStartDateTime": {"type": "string", "description": "The Tenant subscription start date", "nullable": true}, "tenantSubscriptionEndDateTime": {"type": "string", "description": "The Tenant subscription end date", "nullable": true}, "tenantSubscriptionActualEndDateTime": {"type": "string", "description": "The Tenant subscription end date", "nullable": true}, "numberOfLicenses": {"type": "integer", "description": "The Tenant's number of licenses", "format": "int32"}, "assignedLicenses": {"type": "integer", "description": "The Tenant's assigned of licenses", "format": "int32"}, "isUserLicensed": {"type": "boolean", "description": "The user is assigned license for this application"}, "applicationTenantId": {"type": "string", "description": "The Tenant this application belongs to", "nullable": true}, "applicationId": {"type": "string", "description": "The application Id of the application for license", "nullable": true}, "applicationName": {"type": "string", "description": "The application Name of the application for license", "nullable": true}, "applicationRole": {"type": "array", "items": {"$ref": "#/components/schemas/EdGraph.Platform.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.ApplicationRole"}, "description": "Application role for this user.", "nullable": true}}, "additionalProperties": false}, "EdGraph.Platform.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.UserLicensePaginatedItemsViewModel": {"type": "object", "properties": {"pageIndex": {"type": "integer", "format": "int32"}, "pageSize": {"type": "integer", "format": "int32"}, "count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/EdGraph.Platform.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.UserLicense"}, "nullable": true}}, "additionalProperties": false}, "EdGraph.Platform.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.UserListResponseWithApplicationLicense": {"type": "object", "properties": {"userId": {"type": "string", "nullable": true}, "userName": {"type": "string", "nullable": true}, "email": {"type": "string", "nullable": true}, "firstName": {"type": "string", "nullable": true}, "lastName": {"type": "string", "nullable": true}, "tenantCount": {"type": "integer", "format": "int32"}, "tenants": {"type": "array", "items": {"$ref": "#/components/schemas/EdGraph.Platform.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.UserTenant"}, "nullable": true}, "licenses": {"type": "array", "items": {"$ref": "#/components/schemas/EdGraph.Platform.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.UserLicense"}, "nullable": true}, "createdBy": {"type": "string", "nullable": true}, "createdDateTime": {"type": "string", "nullable": true}, "lastModifiedBy": {"type": "string", "nullable": true}, "lastModifiedDateTime": {"type": "string", "nullable": true}, "logins": {"type": "array", "items": {"$ref": "#/components/schemas/EdGraph.Platform.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.UserLogin"}, "nullable": true}, "source": {"type": "string", "nullable": true}, "lastLoginDateTime": {"type": "string", "nullable": true}}, "additionalProperties": false}, "EdGraph.Platform.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.UserListResponseWithApplicationLicensePaginatedItemsViewModel": {"type": "object", "properties": {"pageIndex": {"type": "integer", "format": "int32"}, "pageSize": {"type": "integer", "format": "int32"}, "count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/EdGraph.Platform.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.UserListResponseWithApplicationLicense"}, "nullable": true}}, "additionalProperties": false}, "EdGraph.Platform.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.UserLogin": {"type": "object", "properties": {"loginProvider": {"type": "string", "nullable": true}, "providerDisplayName": {"type": "string", "nullable": true}}, "additionalProperties": false}, "EdGraph.Platform.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.UserProfilePreference": {"type": "object", "properties": {"code": {"type": "string", "nullable": true}, "value": {"type": "string", "nullable": true}}, "additionalProperties": false}, "EdGraph.Platform.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.UserProfileResponseWithApplicationLicense": {"type": "object", "properties": {"userId": {"type": "string", "nullable": true}, "userName": {"type": "string", "nullable": true}, "email": {"type": "string", "nullable": true}, "firstName": {"type": "string", "nullable": true}, "lastName": {"type": "string", "nullable": true}, "phoneNumber": {"type": "string", "nullable": true}, "lockoutEnabled": {"type": "string", "nullable": true}, "tenants": {"type": "array", "items": {"$ref": "#/components/schemas/EdGraph.Platform.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.UserTenant"}, "nullable": true}, "preferences": {"type": "array", "items": {"$ref": "#/components/schemas/EdGraph.Platform.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.UserProfilePreference"}, "nullable": true}, "browserDebugEnabled": {"type": "boolean"}, "licenses": {"type": "array", "items": {"$ref": "#/components/schemas/EdGraph.Platform.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.UserLicense"}, "nullable": true}, "createdBy": {"type": "string", "nullable": true}, "createdDateTime": {"type": "string", "nullable": true}, "lastModifiedBy": {"type": "string", "nullable": true}, "lastModifiedDateTime": {"type": "string", "nullable": true}, "logins": {"type": "array", "items": {"$ref": "#/components/schemas/EdGraph.Platform.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.UserLogin"}, "nullable": true}, "source": {"type": "string", "nullable": true}, "lastLoginDateTime": {"type": "string", "nullable": true}}, "additionalProperties": false}, "EdGraph.Platform.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.UserTenant": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "status": {"$ref": "#/components/schemas/EdGraph.Platform.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.TenantStatus"}, "roles": {"type": "array", "items": {"type": "string"}, "nullable": true}, "licenses": {"type": "array", "items": {"$ref": "#/components/schemas/EdGraph.Platform.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.UserTenantLicense"}, "nullable": true}}, "additionalProperties": false}, "EdGraph.Platform.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.UserTenantLicense": {"type": "object", "properties": {"applicationId": {"type": "string", "nullable": true}, "applicationName": {"type": "string", "nullable": true}, "roles": {"type": "array", "items": {"$ref": "#/components/schemas/EdGraph.Platform.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.UserTenantLicenseRole"}, "nullable": true}}, "additionalProperties": false}, "EdGraph.Platform.HttpAggregators.Tenant.Api.Controllers.v1.ViewModels.Responses.UserTenantLicenseRole": {"type": "object", "properties": {"role": {"type": "string", "nullable": true}, "isImplicitlyAssigned": {"type": "boolean"}, "status": {"type": "string", "nullable": true}, "educationOrganizationId": {"type": "integer", "format": "int32", "nullable": true}, "staffClassification": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.ApiClient.V1.AccessTokenType": {"enum": ["Jwt", "Reference"], "type": "string"}, "IdentityApi.ApiClient.V1.ApiClaim": {"type": "object", "properties": {"applicationId": {"type": "string", "nullable": true}, "subscriptionId": {"type": "string", "nullable": true}, "value": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "IdentityApi.ApiClient.V1.ApiClientCreatedResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "clientId": {"type": "string", "nullable": true}, "secretValue": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.ApiClient.V1.ApiClientListResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "clientId": {"type": "string", "nullable": true}, "clientName": {"type": "string", "nullable": true}, "clientUri": {"type": "string", "nullable": true}, "enabled": {"type": "boolean"}, "createdBy": {"type": "string", "nullable": true}, "createdDateTime": {"type": "string", "nullable": true}, "lastModifiedBy": {"type": "string", "nullable": true}, "lastModifiedDateTime": {"type": "string", "nullable": true}, "expirationDate": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.ApiClient.V1.ApiClientPaginatedItemsResponse": {"type": "object", "properties": {"pageIndex": {"type": "integer", "format": "int32"}, "pageSize": {"type": "integer", "format": "int32"}, "count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/IdentityApi.ApiClient.V1.ApiClientListResponse"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "IdentityApi.ApiClient.V1.ApiClientPaginatedItemsResponsePaginatedItemsViewModel": {"type": "object", "properties": {"pageIndex": {"type": "integer", "format": "int32"}, "pageSize": {"type": "integer", "format": "int32"}, "count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/IdentityApi.ApiClient.V1.ApiClientPaginatedItemsResponse"}, "nullable": true}}, "additionalProperties": false}, "IdentityApi.ApiClient.V1.ApiClientProfileResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "clientId": {"type": "string", "nullable": true}, "clientName": {"type": "string", "nullable": true}, "description": {"type": "string", "nullable": true}, "clientUri": {"type": "string", "nullable": true}, "logoUri": {"type": "string", "nullable": true}, "enabled": {"type": "boolean"}, "accessTokenType": {"$ref": "#/components/schemas/IdentityApi.ApiClient.V1.AccessTokenType"}, "tokenUsage": {"$ref": "#/components/schemas/IdentityApi.ApiClient.V1.TokenUsage"}, "refreshTokenExpiration": {"$ref": "#/components/schemas/IdentityApi.ApiClient.V1.TokenExpiration"}, "enableLocalLogin": {"type": "boolean"}, "allowOfflineAccess": {"type": "boolean"}, "allowAccessTokensViaBrowser": {"type": "boolean"}, "updateAccessTokenClaimsOnRefresh": {"type": "boolean"}, "alwaysIncludeUserClaimsInIdToken": {"type": "boolean"}, "identityTokenLifetime": {"type": "integer", "format": "int32"}, "accessTokenLifetime": {"type": "integer", "format": "int32"}, "authorizationCodeLifetime": {"type": "integer", "format": "int32"}, "absoluteRefreshTokenLifetime": {"type": "integer", "format": "int32"}, "slidingRefreshTokenLifetime": {"type": "integer", "format": "int32"}, "requireClientSecret": {"type": "boolean"}, "requireConsent": {"type": "boolean"}, "allowedScopes": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}, "allowedCorsOrigins": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}, "allowedGrantTypes": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}, "identityProviderRestrictions": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}, "redirectUris": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}, "postLogoutRedirectUris": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}, "claims": {"type": "array", "items": {"$ref": "#/components/schemas/IdentityApi.ApiClient.V1.Claim"}, "nullable": true, "readOnly": true}, "requirePkce": {"type": "boolean"}, "createdBy": {"type": "string", "nullable": true}, "createdDateTime": {"type": "string", "nullable": true}, "lastModifiedBy": {"type": "string", "nullable": true}, "lastModifiedDateTime": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.ApiClient.V1.ApiClientSecretRegeneratedResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "clientId": {"type": "string", "nullable": true}, "secretValue": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.ApiClient.V1.ApiClientUpdatedResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "clientId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.ApiClient.V1.Claim": {"type": "object", "properties": {"type": {"type": "string", "nullable": true}, "value": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.ApiClient.V1.CreateApiClientRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "clientName": {"type": "string", "nullable": true}, "enabled": {"type": "boolean"}, "apiClaims": {"type": "array", "items": {"$ref": "#/components/schemas/IdentityApi.ApiClient.V1.ApiClaim"}, "nullable": true, "readOnly": true}, "secretExpirationDateTime": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.ApiClient.V1.RegenerateApiClientSecretRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "clientId": {"type": "string", "nullable": true}, "secretExpirationDateTime": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.ApiClient.V1.TokenExpiration": {"enum": ["Sliding", "Absolute"], "type": "string"}, "IdentityApi.ApiClient.V1.TokenUsage": {"enum": ["ReUse", "OneTimeOnly"], "type": "string"}, "IdentityApi.ApiClient.V1.UpdateApiClientRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "clientId": {"type": "string", "nullable": true}, "clientName": {"type": "string", "nullable": true}, "enabled": {"type": "boolean"}, "apiClaims": {"type": "array", "items": {"$ref": "#/components/schemas/IdentityApi.ApiClient.V1.ApiClaim"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "IdentityApi.ClientSettingsType.V1.ClientSettingsTypeResponse": {"type": "object", "properties": {"id": {"type": "string", "nullable": true}, "clientId": {"type": "string", "nullable": true}, "code": {"type": "string", "nullable": true}, "dataType": {"type": "string", "nullable": true}, "order": {"type": "integer", "format": "int32"}, "hidden": {"type": "boolean"}, "htmlElement": {"type": "string", "description": "Html attributes", "nullable": true}, "label": {"type": "string", "nullable": true}, "inputType": {"type": "string", "nullable": true}, "defaultValue": {"type": "string", "nullable": true}, "minValue": {"type": "integer", "format": "int32", "nullable": true}, "maxValue": {"type": "integer", "format": "int32", "nullable": true}, "maxLength": {"type": "integer", "format": "int32", "nullable": true}, "options": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}, "createdBy": {"type": "string", "nullable": true}, "createdDateTime": {"type": "string", "nullable": true}, "lastModifiedBy": {"type": "string", "nullable": true}, "lastModifiedDateTime": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.ClientSettingsType.V1.GetClientSettingsTypesResponse": {"type": "object", "properties": {"pageIndex": {"type": "integer", "format": "int32"}, "pageSize": {"type": "integer", "format": "int32"}, "count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/IdentityApi.ClientSettingsType.V1.ClientSettingsTypeResponse"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "IdentityApi.Invitation.V1.AssignLicenseRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "subscriptionId": {"type": "string", "nullable": true}, "applicationId": {"type": "string", "nullable": true}, "userId": {"type": "string", "nullable": true}, "roles": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "IdentityApi.Invitation.V1.InvitationListResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "invitationId": {"type": "string", "nullable": true}, "firstName": {"type": "string", "nullable": true}, "lastName": {"type": "string", "nullable": true}, "email": {"type": "string", "nullable": true}, "role": {"type": "string", "nullable": true}, "invitationToken": {"type": "string", "nullable": true}, "invitationStatus": {"$ref": "#/components/schemas/IdentityApi.Invitation.V1.InvitationStatus"}, "invitationSentDateTime": {"type": "string", "nullable": true}, "assignLicenseRequests": {"type": "array", "items": {"$ref": "#/components/schemas/IdentityApi.Invitation.V1.AssignLicenseRequest"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "IdentityApi.Invitation.V1.InvitationListResponsePaginatedItemsViewModel": {"type": "object", "properties": {"pageIndex": {"type": "integer", "format": "int32"}, "pageSize": {"type": "integer", "format": "int32"}, "count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/IdentityApi.Invitation.V1.InvitationListResponse"}, "nullable": true}}, "additionalProperties": false}, "IdentityApi.Invitation.V1.InvitationResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "invitationId": {"type": "string", "nullable": true}, "firstName": {"type": "string", "nullable": true}, "lastName": {"type": "string", "nullable": true}, "email": {"type": "string", "nullable": true}, "role": {"type": "string", "nullable": true}, "invitationToken": {"type": "string", "nullable": true}, "invitationStatus": {"$ref": "#/components/schemas/IdentityApi.Invitation.V1.InvitationStatus"}, "invitationSentDateTime": {"type": "string", "nullable": true}, "assignLicenseRequests": {"type": "array", "items": {"$ref": "#/components/schemas/IdentityApi.Invitation.V1.AssignLicenseRequest"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "IdentityApi.Invitation.V1.InvitationSentResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "invitationId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.Invitation.V1.InvitationStatus": {"enum": ["Unknown", "Invited", "Accepted"], "type": "string"}, "IdentityApi.StaffClassification.V1.CreateStaffClassificationRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "namespace": {"type": "string", "nullable": true}, "codeValue": {"type": "string", "nullable": true}, "shortDescription": {"type": "string", "nullable": true}, "description": {"type": "string", "nullable": true}, "licenses": {"type": "array", "items": {"$ref": "#/components/schemas/IdentityApi.StaffClassification.V1.StaffClassificationLicenseRequest"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "IdentityApi.StaffClassification.V1.GetStaffClassificationsNamespacesResponse": {"type": "object", "properties": {"pageIndex": {"type": "integer", "format": "int32"}, "pageSize": {"type": "integer", "format": "int32"}, "count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "IdentityApi.StaffClassification.V1.GetStaffClassificationsResponse": {"type": "object", "properties": {"pageIndex": {"type": "integer", "format": "int32"}, "pageSize": {"type": "integer", "format": "int32"}, "count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/IdentityApi.StaffClassification.V1.StaffClassificationResponse"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "IdentityApi.StaffClassification.V1.StaffClassificationCreatedResponse": {"type": "object", "properties": {"id": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.StaffClassification.V1.StaffClassificationDeletedResponse": {"type": "object", "properties": {"id": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.StaffClassification.V1.StaffClassificationLicense": {"type": "object", "properties": {"applicationId": {"type": "string", "nullable": true}, "licenseStatus": {"type": "string", "nullable": true}, "roles": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "IdentityApi.StaffClassification.V1.StaffClassificationLicenseRequest": {"type": "object", "properties": {"applicationId": {"type": "string", "nullable": true}, "licenseStatus": {"type": "string", "nullable": true}, "roles": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "IdentityApi.StaffClassification.V1.StaffClassificationResponse": {"type": "object", "properties": {"id": {"type": "string", "nullable": true}, "createdBy": {"type": "string", "nullable": true}, "createdDateTime": {"type": "string", "nullable": true}, "lastModifiedBy": {"type": "string", "nullable": true}, "lastModifiedDateTime": {"type": "string", "nullable": true}, "isDeleted": {"type": "boolean"}, "tenantId": {"type": "string", "nullable": true}, "namespace": {"type": "string", "nullable": true}, "codeValue": {"type": "string", "nullable": true}, "shortDescription": {"type": "string", "nullable": true}, "description": {"type": "string", "nullable": true}, "licenses": {"type": "array", "items": {"$ref": "#/components/schemas/IdentityApi.StaffClassification.V1.StaffClassificationLicense"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "IdentityApi.StaffClassification.V1.StaffClassificationUpdatedResponse": {"type": "object", "properties": {"id": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.StaffClassification.V1.UpdateStaffClassificationRequest": {"type": "object", "properties": {"id": {"type": "string", "nullable": true}, "namespace": {"type": "string", "nullable": true}, "codeValue": {"type": "string", "nullable": true}, "shortDescription": {"type": "string", "nullable": true}, "description": {"type": "string", "nullable": true}, "licenses": {"type": "array", "items": {"$ref": "#/components/schemas/IdentityApi.StaffClassification.V1.StaffClassificationLicenseRequest"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "IdentityApi.User.V1.ActivateUserRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "userId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.User.V1.DeactivateUserRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "userId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.User.V1.EducationOrganization": {"type": "object", "properties": {"educationOrganizationId": {"type": "integer", "format": "int32"}, "shortNameOfInstitution": {"type": "string", "nullable": true}, "nameOfInstitution": {"type": "string", "nullable": true}, "staffClassifications": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}, "source": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.User.V1.EducationOrganizationAddedResponse": {"type": "object", "properties": {"userId": {"type": "string", "nullable": true}, "tenantId": {"type": "string", "nullable": true}, "educationOrganizationId": {"type": "integer", "format": "int32"}}, "additionalProperties": false}, "IdentityApi.User.V1.EducationOrganizationPaginatedItemsResponse": {"type": "object", "properties": {"pageIndex": {"type": "integer", "format": "int32"}, "pageSize": {"type": "integer", "format": "int32"}, "count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/IdentityApi.User.V1.EducationOrganization"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "IdentityApi.User.V1.EducationOrganizationRemovedResponse": {"type": "object", "properties": {"userId": {"type": "string", "nullable": true}, "tenantId": {"type": "string", "nullable": true}, "educationOrganizationId": {"type": "integer", "format": "int32"}}, "additionalProperties": false}, "IdentityApi.User.V1.EducationOrganizationUpdatedResponse": {"type": "object", "properties": {"userId": {"type": "string", "nullable": true}, "tenantId": {"type": "string", "nullable": true}, "educationOrganizationId": {"type": "integer", "format": "int32"}}, "additionalProperties": false}, "IdentityApi.User.V1.LicenseAssignedBulkResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "userId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.User.V1.LicenseAssignedResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "subscriptionId": {"type": "string", "nullable": true}, "applicationId": {"type": "string", "nullable": true}, "userId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.User.V1.LicenseRevokedBulkResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "userId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.User.V1.LicenseRevokedResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "subscriptionId": {"type": "string", "nullable": true}, "applicationId": {"type": "string", "nullable": true}, "userId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.User.V1.LocalUserCreatedResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "userId": {"type": "string", "nullable": true}, "password": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.User.V1.PasswordResettedResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "userId": {"type": "string", "nullable": true}, "password": {"type": "string", "nullable": true}, "autoGeneratedPassword": {"type": "boolean"}}, "additionalProperties": false}, "IdentityApi.User.V1.ResetPasswordRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "userId": {"type": "string", "nullable": true}, "password": {"type": "string", "nullable": true}, "autoGeneratedPassword": {"type": "boolean"}}, "additionalProperties": false}, "IdentityApi.User.V1.RevokeLicenseRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "subscriptionId": {"type": "string", "nullable": true}, "applicationId": {"type": "string", "nullable": true}, "userId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.User.V1.UpdateUserRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "userId": {"type": "string", "nullable": true}, "role": {"type": "string", "nullable": true}, "isPlatformAdmin": {"type": "boolean", "nullable": true}}, "additionalProperties": false}, "IdentityApi.User.V1.UserActivatedResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "userId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.User.V1.UserDeactivatedResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "userId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.User.V1.UserTenantStatusProfile": {"type": "object", "properties": {"email": {"type": "string", "nullable": true}, "username": {"type": "string", "nullable": true}, "firstName": {"type": "string", "nullable": true}, "lastName": {"type": "string", "nullable": true}, "status": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.User.V1.UserUpdatedResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "userId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "Microsoft.AspNetCore.Mvc.ValidationProblemDetails": {"type": "object", "properties": {"errors": {"type": "object", "additionalProperties": {"type": "array", "items": {"type": "string"}}, "nullable": true}, "type": {"type": "string", "nullable": true}, "title": {"type": "string", "nullable": true}, "status": {"type": "integer", "format": "int32", "nullable": true}, "detail": {"type": "string", "nullable": true}, "instance": {"type": "string", "nullable": true}}, "additionalProperties": {}}, "TenantApi.Tenant.V1.CreateDomainRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "domainName": {"type": "string", "nullable": true}, "domainStatus": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.DomainStatus"}, "autoAssignUsers": {"type": "boolean"}}, "additionalProperties": false}, "TenantApi.Tenant.V1.CreateOnboardingStepRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "number": {"type": "integer", "format": "int32"}, "description": {"type": "string", "nullable": true}, "status": {"type": "string", "nullable": true}}, "additionalProperties": false}, "TenantApi.Tenant.V1.CreateOrganizationRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "identifierType": {"type": "string", "nullable": true}, "identifierValue": {"type": "string", "nullable": true}, "shortNameOfInstitution": {"type": "string", "nullable": true}, "nameOfInstitution": {"type": "string", "nullable": true}, "discriminator": {"type": "string", "nullable": true}, "source": {"type": "string", "nullable": true}, "includeInJwt": {"type": "boolean"}}, "additionalProperties": false}, "TenantApi.Tenant.V1.CreateSubscriptionRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "subscriptionId": {"type": "string", "nullable": true}, "applicationId": {"type": "string", "nullable": true}, "startDateTime": {"type": "string", "nullable": true}, "endDateTime": {"type": "string", "nullable": true}, "gracePeriod": {"type": "integer", "format": "int32"}, "numberOfLicenses": {"type": "integer", "format": "int32"}, "assignedLicenses": {"type": "integer", "format": "int32"}, "licenseType": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.LicenseType"}, "subscriptionStatus": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.SubscriptionStatus"}, "autoAssign": {"type": "boolean"}}, "additionalProperties": false}, "TenantApi.Tenant.V1.DomainCreatedResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "domainName": {"type": "string", "nullable": true}}, "additionalProperties": false}, "TenantApi.Tenant.V1.DomainProfileResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "domainName": {"type": "string", "nullable": true}, "domainStatus": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.DomainStatus"}, "autoAssignUsers": {"type": "boolean"}, "createdBy": {"type": "string", "nullable": true}, "createdDateTime": {"type": "string", "nullable": true}, "lastModifiedBy": {"type": "string", "nullable": true}, "lastModifiedDateTime": {"type": "string", "nullable": true}}, "additionalProperties": false}, "TenantApi.Tenant.V1.DomainStatus": {"enum": ["Unknown", "Unverified", "Verified", "Rejected", "Error"], "type": "string"}, "TenantApi.Tenant.V1.DomainUpdatedResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "oldDomainName": {"type": "string", "nullable": true}, "newDomainName": {"type": "string", "nullable": true}, "domainStatus": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.DomainStatus"}}, "additionalProperties": false}, "TenantApi.Tenant.V1.DomainVerifiedResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "domainName": {"type": "string", "nullable": true}, "domainStatus": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.DomainStatus"}}, "additionalProperties": false}, "TenantApi.Tenant.V1.EdFiAdminInstance": {"type": "object", "properties": {"id": {"type": "string", "description": "Details", "nullable": true}, "instanceName": {"type": "string", "nullable": true}, "useCustomId": {"type": "boolean"}, "customId": {"type": "string", "nullable": true}, "description": {"type": "string", "nullable": true}, "connectionName": {"type": "string", "nullable": true}, "selectedConnectionId": {"type": "string", "description": "Connection", "nullable": true}, "databases": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.InstanceDatabases"}, "password": {"type": "string", "description": "API Client", "nullable": true}, "apiClientKey": {"type": "string", "nullable": true}, "apiClientSecret": {"type": "string", "nullable": true}, "isApiClientSecretSecured": {"type": "boolean"}, "tenantId": {"type": "string", "description": "Metadata", "nullable": true}, "createdBy": {"type": "string", "nullable": true}, "createdDateTime": {"type": "string", "nullable": true}, "isDeleted": {"type": "boolean"}, "lastModifiedBy": {"type": "string", "nullable": true}, "lastModifiedDateTime": {"type": "string", "nullable": true}, "apiAuthUrl": {"type": "string", "description": "URLs", "nullable": true}, "apiResourcesUrls": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}, "apiCompositesUrls": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "TenantApi.Tenant.V1.GetAppSettingsResponse": {"type": "object", "properties": {"data": {"type": "array", "items": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.TenantAppSettings"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "TenantApi.Tenant.V1.GetEdFiAdminInstancesResponse": {"type": "object", "properties": {"pageIndex": {"type": "integer", "format": "int32"}, "pageSize": {"type": "integer", "format": "int32"}, "count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.EdFiAdminInstance"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "TenantApi.Tenant.V1.GetOrganizationsPaginatedResponse": {"type": "object", "properties": {"pageIndex": {"type": "integer", "format": "int32"}, "pageSize": {"type": "integer", "format": "int32"}, "count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.Organization"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "TenantApi.Tenant.V1.InstanceDatabase": {"type": "object", "properties": {"selectedTierId": {"type": "string", "nullable": true}, "selectedTierName": {"type": "string", "nullable": true}, "status": {"type": "string", "nullable": true}, "jobs": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.InstanceDatabaseJobs"}}, "additionalProperties": false}, "TenantApi.Tenant.V1.InstanceDatabaseJobs": {"type": "object", "properties": {"createJobId": {"type": "string", "nullable": true}, "deleteJobId": {"type": "string", "nullable": true}, "resetDeleteJobId": {"type": "string", "nullable": true}, "resetCreateJobId": {"type": "string", "nullable": true}, "generateReportsJobId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "TenantApi.Tenant.V1.InstanceDatabases": {"type": "object", "properties": {"admin": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.InstanceDatabase"}, "security": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.InstanceDatabase"}, "ods": {"type": "array", "items": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.InstanceOdsDatabase"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "TenantApi.Tenant.V1.InstanceOdsDatabase": {"type": "object", "properties": {"selectedTierId": {"type": "string", "nullable": true}, "selectedTierName": {"type": "string", "nullable": true}, "status": {"type": "string", "nullable": true}, "jobs": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.InstanceDatabaseJobs"}, "year": {"type": "integer", "format": "int32"}, "odsBackupCode": {"type": "string", "nullable": true}, "odsBackupDescription": {"type": "string", "nullable": true}}, "additionalProperties": false}, "TenantApi.Tenant.V1.LicenseType": {"enum": ["Unknown", "Full", "Trial"], "type": "string"}, "TenantApi.Tenant.V1.Onboarding": {"type": "object", "properties": {"status": {"type": "string", "nullable": true}, "progressPercentage": {"type": "number", "format": "float"}, "totalSteps": {"type": "integer", "format": "int32"}, "lastCompletedStep": {"type": "integer", "format": "int32", "nullable": true}, "startedAt": {"type": "string", "nullable": true}, "completedAt": {"type": "string", "nullable": true}, "steps": {"type": "array", "items": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.OnboardingStep"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "TenantApi.Tenant.V1.OnboardingStep": {"type": "object", "properties": {"number": {"type": "integer", "format": "int32"}, "description": {"type": "string", "nullable": true}, "status": {"type": "string", "nullable": true}, "startedAt": {"type": "string", "nullable": true}, "completedAt": {"type": "string", "nullable": true}}, "additionalProperties": false}, "TenantApi.Tenant.V1.Organization": {"type": "object", "properties": {"identifierType": {"type": "string", "nullable": true}, "identifierValue": {"type": "string", "nullable": true}, "discriminator": {"type": "string", "nullable": true}, "source": {"type": "string", "nullable": true}, "shortNameOfInstitution": {"type": "string", "nullable": true}, "nameOfInstitution": {"type": "string", "nullable": true}, "includeInJwt": {"type": "boolean"}}, "additionalProperties": false}, "TenantApi.Tenant.V1.OrganizationCreatedResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "identifierValue": {"type": "string", "nullable": true}}, "additionalProperties": false}, "TenantApi.Tenant.V1.OrganizationDeletedResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "identifierValue": {"type": "string", "nullable": true}}, "additionalProperties": false}, "TenantApi.Tenant.V1.OrganizationUpdatedResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "identifierValue": {"type": "string", "nullable": true}}, "additionalProperties": false}, "TenantApi.Tenant.V1.OrganizationsSyncedResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "TenantApi.Tenant.V1.SetAppSettingsRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "clientId": {"type": "string", "nullable": true}, "code": {"type": "string", "nullable": true}, "data": {"type": "string", "nullable": true}, "dataType": {"type": "string", "nullable": true}}, "additionalProperties": false}, "TenantApi.Tenant.V1.SetAppSettingsResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "clientId": {"type": "string", "nullable": true}, "code": {"type": "string", "nullable": true}}, "additionalProperties": false}, "TenantApi.Tenant.V1.SubscriptionCreatedResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "subscriptionId": {"type": "string", "nullable": true}, "applicationId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "TenantApi.Tenant.V1.SubscriptionProfileResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "subscriptionId": {"type": "string", "nullable": true}, "applicationId": {"type": "string", "nullable": true}, "startDateTime": {"type": "string", "nullable": true}, "endDateTime": {"type": "string", "nullable": true}, "actualEndDateTime": {"type": "string", "nullable": true}, "gracePeriod": {"type": "integer", "format": "int32"}, "numberOfLicenses": {"type": "integer", "format": "int32"}, "assignedLicenses": {"type": "integer", "format": "int32"}, "maxAssignedLicenses": {"type": "integer", "format": "int32"}, "lastMaxAssignedLicensesDateTime": {"type": "string", "nullable": true}, "licenseType": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.LicenseType"}, "subscriptionStatus": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.SubscriptionStatus"}, "autoAssign": {"type": "boolean"}, "createdBy": {"type": "string", "nullable": true}, "createdDateTime": {"type": "string", "nullable": true}, "lastModifiedBy": {"type": "string", "nullable": true}, "lastModifiedDateTime": {"type": "string", "nullable": true}, "deletedAt": {"type": "string", "nullable": true}}, "additionalProperties": false}, "TenantApi.Tenant.V1.SubscriptionStatus": {"enum": ["Unknown", "Active", "Inactive", "Pending", "Rejected"], "type": "string"}, "TenantApi.Tenant.V1.SubscriptionUpdatedResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "subscriptionId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "TenantApi.Tenant.V1.SyncOrganizationsRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "instanceId": {"type": "string", "nullable": true}, "year": {"type": "integer", "format": "int32"}}, "additionalProperties": false}, "TenantApi.Tenant.V1.TenantAppSettings": {"type": "object", "properties": {"clientId": {"type": "string", "nullable": true}, "code": {"type": "string", "nullable": true}, "data": {"type": "string", "nullable": true}, "dataType": {"type": "string", "nullable": true}}, "additionalProperties": false}, "TenantApi.Tenant.V1.TenantIdentityProviders": {"enum": ["Local", "Aad", "Google", "Adfs", "Txedexchange"], "type": "string"}, "TenantApi.Tenant.V1.TenantProfileResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "tenantType": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.TenantType"}, "organizationIdentifier": {"type": "string", "nullable": true}, "organizationName": {"type": "string", "nullable": true}, "state": {"type": "string", "nullable": true}, "tenantStatus": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.TenantStatus"}, "isDemo": {"type": "boolean"}, "enforceMfa": {"type": "boolean"}, "subscriptionsMigrated": {"type": "boolean"}, "showLocalLoginOptionToTenantAdmins": {"type": "boolean"}, "subscriptions": {"type": "array", "items": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.SubscriptionProfileResponse"}, "nullable": true, "readOnly": true}, "domains": {"type": "array", "items": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.DomainProfileResponse"}, "nullable": true, "readOnly": true}, "createdBy": {"type": "string", "nullable": true}, "createdDateTime": {"type": "string", "nullable": true}, "lastModifiedBy": {"type": "string", "nullable": true}, "lastModifiedDateTime": {"type": "string", "nullable": true}, "identityProviders": {"type": "array", "items": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.TenantIdentityProviders"}, "nullable": true, "readOnly": true}, "onboarding": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.Onboarding"}, "organizations": {"type": "array", "items": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.Organization"}, "nullable": true, "readOnly": true}, "organizationIdentifierHash": {"type": "string", "nullable": true}, "settings": {"type": "array", "items": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.TenantSetting"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "TenantApi.Tenant.V1.TenantSetting": {"type": "object", "properties": {"code": {"type": "string", "nullable": true}, "value": {"type": "string", "nullable": true}, "dataType": {"type": "string", "nullable": true}}, "additionalProperties": false}, "TenantApi.Tenant.V1.TenantSettingTypesListResponse": {"type": "object", "properties": {"id": {"type": "string", "nullable": true}, "tenantId": {"type": "string", "nullable": true}, "code": {"type": "string", "nullable": true}, "dataType": {"type": "string", "nullable": true}, "order": {"type": "integer", "format": "int32", "nullable": true}, "hidden": {"type": "boolean"}, "htmlElement": {"type": "string", "nullable": true}, "label": {"type": "string", "nullable": true}, "inputType": {"type": "string", "nullable": true}, "defaultValue": {"type": "string", "nullable": true}, "minValue": {"type": "integer", "format": "int32", "nullable": true}, "maxValue": {"type": "integer", "format": "int32", "nullable": true}, "maxLength": {"type": "integer", "format": "int32", "nullable": true}, "attributes": {"type": "array", "items": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.TenantSettingsTypeAttribute"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "TenantApi.Tenant.V1.TenantSettingTypesListResponsePaginatedItemsViewModel": {"type": "object", "properties": {"pageIndex": {"type": "integer", "format": "int32"}, "pageSize": {"type": "integer", "format": "int32"}, "count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.TenantSettingTypesListResponse"}, "nullable": true}}, "additionalProperties": false}, "TenantApi.Tenant.V1.TenantSettingsTypeAttribute": {"type": "object", "properties": {"key": {"type": "string", "nullable": true}, "value": {"type": "string", "nullable": true}}, "additionalProperties": false}, "TenantApi.Tenant.V1.TenantStatus": {"enum": ["Unknown", "Active", "Inactive"], "type": "string"}, "TenantApi.Tenant.V1.TenantType": {"enum": ["Unknown", "Internal", "State", "Collaborative", "District", "Partner", "Teacher", "Student"], "type": "string"}, "TenantApi.Tenant.V1.TenantUpdatedResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "TenantApi.Tenant.V1.UpdateDomainRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "oldDomainName": {"type": "string", "nullable": true}, "newDomainName": {"type": "string", "nullable": true}, "domainStatus": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.DomainStatus"}, "autoAssignUsers": {"type": "boolean"}}, "additionalProperties": false}, "TenantApi.Tenant.V1.UpdateOnboardingStepRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "number": {"type": "integer", "format": "int32"}, "status": {"type": "string", "nullable": true}}, "additionalProperties": false}, "TenantApi.Tenant.V1.UpdateOrganizationRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "identifierValue": {"type": "string", "nullable": true}, "discriminator": {"type": "string", "nullable": true}, "source": {"type": "string", "nullable": true}, "shortNameOfInstitution": {"type": "string", "nullable": true}, "nameOfInstitution": {"type": "string", "nullable": true}, "includeInJwt": {"type": "boolean"}}, "additionalProperties": false}, "TenantApi.Tenant.V1.UpdateSubscriptionRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "subscriptionId": {"type": "string", "nullable": true}, "startDateTime": {"type": "string", "nullable": true}, "endDateTime": {"type": "string", "nullable": true}, "gracePeriod": {"type": "integer", "format": "int32"}, "numberOfLicenses": {"type": "integer", "format": "int32"}, "assignedLicenses": {"type": "integer", "format": "int32"}, "licenseType": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.LicenseType"}, "autoAssign": {"type": "boolean", "description": "SubscriptionStatus SubscriptionStatus = 10;"}}, "additionalProperties": false}, "TenantApi.Tenant.V1.VerifyDomainRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "domainName": {"type": "string", "nullable": true}}, "additionalProperties": false}, "TenantApi.Webhook.V1.CreateWebhookRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "name": {"type": "string", "nullable": true}, "url": {"type": "string", "nullable": true}, "secretHeader": {"type": "string", "nullable": true}, "secretValue": {"type": "string", "nullable": true}, "contentType": {"type": "string", "nullable": true}, "eventSubscriptions": {"type": "array", "items": {"$ref": "#/components/schemas/TenantApi.Webhook.V1.WebhookSubscriberResponse"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "TenantApi.Webhook.V1.PaginatedItemsResponse": {"type": "object", "properties": {"pageIndex": {"type": "integer", "format": "int32"}, "pageSize": {"type": "integer", "format": "int32"}, "count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/TenantApi.Webhook.V1.WebhookResponse"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "TenantApi.Webhook.V1.UpdateWebhookRequest": {"type": "object", "properties": {"id": {"type": "string", "nullable": true}, "tenantId": {"type": "string", "nullable": true}, "name": {"type": "string", "nullable": true}, "url": {"type": "string", "nullable": true}, "secretHeader": {"type": "string", "nullable": true}, "secretValue": {"type": "string", "nullable": true}, "contentType": {"type": "string", "nullable": true}, "status": {"type": "string", "nullable": true}, "eventSubscriptions": {"type": "array", "items": {"$ref": "#/components/schemas/TenantApi.Webhook.V1.WebhookSubscriberResponse"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "TenantApi.Webhook.V1.WebhookEventsResponse": {"type": "object", "properties": {"eventSubscriptions": {"type": "array", "items": {"$ref": "#/components/schemas/TenantApi.Webhook.V1.WebhookSubscriberResponse"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "TenantApi.Webhook.V1.WebhookIdResponse": {"type": "object", "properties": {"id": {"type": "string", "nullable": true}}, "additionalProperties": false}, "TenantApi.Webhook.V1.WebhookResponse": {"type": "object", "properties": {"id": {"type": "string", "nullable": true}, "tenantId": {"type": "string", "nullable": true}, "createdAt": {"type": "string", "nullable": true}, "createdBy": {"type": "string", "nullable": true}, "updatedAt": {"type": "string", "nullable": true}, "updatedBy": {"type": "string", "nullable": true}, "isDeleted": {"type": "boolean"}, "name": {"type": "string", "nullable": true}, "url": {"type": "string", "nullable": true}, "secretHeader": {"type": "string", "nullable": true}, "secretValue": {"type": "string", "nullable": true}, "contentType": {"type": "string", "nullable": true}, "status": {"type": "string", "nullable": true}, "eventSubscriptions": {"type": "array", "items": {"$ref": "#/components/schemas/TenantApi.Webhook.V1.WebhookSubscriberResponse"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "TenantApi.Webhook.V1.WebhookSubscriberResponse": {"type": "object", "properties": {"eventName": {"type": "string", "nullable": true}, "eventVersion": {"type": "string", "nullable": true}, "eventSchema": {"type": "string", "nullable": true}, "groupName": {"type": "string", "nullable": true}, "scope": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}}, "additionalProperties": false, "description": "Webhook Subscribers"}}, "securitySchemes": {"oauth2": {"type": "oauth2", "description": "Use bearer token generated from an OpenId server", "flows": {"clientCredentials": {"tokenUrl": "https://login.int.txedexchange.net/connect/token", "scopes": {"https://api.edgraph.com/auth/tenant": "EdGraph Platform - Tenant Api"}}}}}}, "security": [{"oauth2": ["https://api.edgraph.com/auth/tenant"]}]}