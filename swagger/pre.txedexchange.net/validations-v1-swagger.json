{"openapi": "3.0.1", "info": {"title": "Validations Api", "description": "Validations Api - v1.0", "version": "v1.0"}, "servers": [{"url": "https://api.pre.txedexchange.net/tenant"}], "paths": {"/tenants/{tenantId}/validations/collections/{collectionId}/containers/{containerId}": {"delete": {"tags": ["Collections"], "summary": "Deletes a Container.", "operationId": "DeleteContainer", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "collectionId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "containerId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "204": {"description": "The resource was successfully deleted."}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}, "get": {"tags": ["Collections"], "summary": "Retrieves a Container by ID.", "operationId": "GetContainerById", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "collectionId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "containerId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Containers.V1.ContainerDto"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}, "put": {"tags": ["Collections"], "summary": "Updates a Container.", "operationId": "UpdateContainer", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "collectionId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "containerId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Containers.V1.UpdateContainerRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Containers.V1.UpdateContainerRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Containers.V1.UpdateContainerRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Containers.V1.UpdateContainerRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved."}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/validations/collections/{collectionId}/containers": {"get": {"tags": ["Collections"], "summary": "Retrieves a list of Containers.", "operationId": "GetContainers", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "collectionId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string"}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Containers.V1.PaginatedContainers"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "post": {"tags": ["Collections"], "summary": "Creates a Container.", "operationId": "CreateContainer", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "collectionId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Containers.V1.CreateContainerRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Containers.V1.CreateContainerRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Containers.V1.CreateContainerRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Containers.V1.CreateContainerRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "201": {"description": "The resource was created. The location of the resource is available in the Location header of the response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Core.V1.CreatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/validations/collections/{collectionId}/export": {"get": {"tags": ["Collections"], "summary": "Retrieves the JSON representation of a Collection. Useful for exporting into other systems.", "operationId": "GetCollectionJson", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "collectionId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Containers.V1.GetJsonResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/validations/collections/{collectionId}": {"delete": {"tags": ["Collections"], "summary": "Deletes a Collection.", "operationId": "DeleteCollection", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "collectionId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "204": {"description": "The resource was successfully deleted."}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}, "get": {"tags": ["Collections"], "summary": "Retrieves a Collection by ID.", "operationId": "GetCollectionById", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "collectionId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Containers.V1.ContainerDto"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}, "put": {"tags": ["Collections"], "summary": "Updates a Collection.", "operationId": "UpdateCollection", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "collectionId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Containers.V1.UpdateCollectionRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Containers.V1.UpdateCollectionRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Containers.V1.UpdateCollectionRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Containers.V1.UpdateCollectionRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved."}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/validations/collections/import": {"post": {"tags": ["Collections"], "summary": "Uploads a Collection JSON. Useful for importing from another system.", "operationId": "UploadCollectionJson", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Containers.V1.UploadCollectionRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Containers.V1.UploadCollectionRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Containers.V1.UploadCollectionRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Containers.V1.UploadCollectionRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "201": {"description": "The resource was created. The location of the resource is available in the Location header of the response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Core.V1.CreatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/validations/collections": {"get": {"tags": ["Collections"], "summary": "Retrieves a list of Collections.", "operationId": "GetCollections", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string"}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Containers.V1.PaginatedContainers"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "post": {"tags": ["Collections"], "summary": "Creates a Collection.", "operationId": "CreateCollection", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Containers.V1.CreateCollectionRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Containers.V1.CreateCollectionRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Containers.V1.CreateCollectionRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Containers.V1.CreateCollectionRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "201": {"description": "The resource was created. The location of the resource is available in the Location header of the response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Core.V1.CreatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/validations/environments/{environmentId}": {"delete": {"tags": ["Environments"], "summary": "Deletes an Environment.", "operationId": "DeleteEnvironment", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "environmentId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "204": {"description": "The resource was successfully deleted."}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}, "get": {"tags": ["Environments"], "summary": "Retrieves an Environment by ID.", "operationId": "GetEnvironmentById", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "environmentId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.DbEnvironments.V1.DbEnvironmentDto"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}, "put": {"tags": ["Environments"], "summary": "Updates an Environment.", "operationId": "UpdateEnvironment", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "environmentId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.DbEnvironments.V1.UpdateRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.DbEnvironments.V1.UpdateRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.DbEnvironments.V1.UpdateRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.DbEnvironments.V1.UpdateRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Core.V1.EmptyResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "Not Found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/validations/environments/testconnection": {"post": {"tags": ["Environments"], "summary": "Tests if the provided connection string can establish a valid connection.", "operationId": "TestEnvironmentConnection", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.DbEnvironments.V1.TestConnectionRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.DbEnvironments.V1.TestConnectionRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.DbEnvironments.V1.TestConnectionRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.DbEnvironments.V1.TestConnectionRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.DbEnvironments.V1.TestConnectionResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/validations/environments": {"get": {"tags": ["Environments"], "summary": "Retrieves a list of Environments.", "operationId": "GetEnvironments", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string"}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.DbEnvironments.V1.PaginatedDbEnvironments"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "post": {"tags": ["Environments"], "summary": "Creates an Environment.", "operationId": "CreateEnvironment", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.DbEnvironments.V1.CreateRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.DbEnvironments.V1.CreateRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.DbEnvironments.V1.CreateRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.DbEnvironments.V1.CreateRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "Success", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Core.V1.CreatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "201": {"description": "The resource was created. The location of the resource is available in the Location header of the response."}}}}, "/tenants/{tenantId}/validations/jobs/{jobId}/cancel": {"post": {"tags": ["Jobs"], "summary": "Requests a Job cancellation.", "operationId": "CancelJob", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "jobId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Core.V1.EmptyResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/validations/jobs/{jobId}/execute": {"post": {"tags": ["Jobs"], "summary": "Requests a Job execution.", "operationId": "ExecuteJob", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "jobId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Core.V1.EmptyResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/validations/jobs/{jobId}/restart": {"post": {"tags": ["Jobs"], "summary": "Requests a Job schedule restart.", "operationId": "RestartJobSchedule", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "jobId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved."}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/validations/jobs/{jobId}": {"delete": {"tags": ["Jobs"], "summary": "Deletes a Job.", "operationId": "DeleteJob", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "jobId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details."}, "204": {"description": "The resource was successfully deleted."}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}, "get": {"tags": ["Jobs"], "summary": "Retrieves a Job by ID.", "operationId": "GetJobById", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "jobId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Jobs.V1.JobProfileResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}, "put": {"tags": ["Jobs"], "summary": "Updates a Job.", "operationId": "UpdateJob", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "jobId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Jobs.V1.UpdateRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Jobs.V1.UpdateRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Jobs.V1.UpdateRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Jobs.V1.UpdateRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved."}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/validations/jobs": {"get": {"tags": ["Jobs"], "summary": "Retrieves a list of Jobs.", "operationId": "GetJobs", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string"}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Jobs.V1.PaginatedItemsResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "post": {"tags": ["Jobs"], "summary": "Creates a Job.", "operationId": "CreateJob", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Jobs.V1.CreateRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Jobs.V1.CreateRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Jobs.V1.CreateRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Jobs.V1.CreateRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "201": {"description": "The resource was created. The location of the resource is available in the Location header of the response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Core.V1.CreatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/validations/logs": {"get": {"tags": ["Logs"], "summary": "Retrieves a list of Logs.", "operationId": "GetLogs", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string"}}, {"name": "environmentId", "in": "query", "description": "", "schema": {"type": "string"}}, {"name": "collectionId", "in": "query", "description": "", "schema": {"type": "string"}}, {"name": "containerId", "in": "query", "description": "", "schema": {"type": "string"}}, {"name": "ruleId", "in": "query", "description": "", "schema": {"type": "string"}}, {"name": "jobId", "in": "query", "description": "", "schema": {"type": "string"}}, {"name": "jobExecutionId", "in": "query", "description": "", "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.RuleExecutionLogs.V1.FindResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/validations/rules/{ruleId}": {"delete": {"tags": ["Rules"], "summary": "Deletes a Rule.", "operationId": "DeleteRule", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "ruleId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "204": {"description": "The resource was successfully deleted."}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}, "get": {"tags": ["Rules"], "summary": "Retrieves a Rule by ID.", "operationId": "GetRuleById", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "ruleId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Rules.V1.RuleDto"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}, "put": {"tags": ["Rules"], "summary": "Updates a Rule.", "operationId": "UpdateRule", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "ruleId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Rules.V1.UpdateRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Rules.V1.UpdateRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Rules.V1.UpdateRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Rules.V1.UpdateRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved."}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/validations/rules": {"get": {"tags": ["Rules"], "summary": "Retrieves a list of Rules.", "operationId": "GetRules", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string"}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Rules.V1.PaginatedRules"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "post": {"tags": ["Rules"], "summary": "Creates a Rule.", "operationId": "CreateRule", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Rules.V1.CreateRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Rules.V1.CreateRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Rules.V1.CreateRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Rules.V1.CreateRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "201": {"description": "The resource was created. The location of the resource is available in the Location header of the response."}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/validations/tags/{tagId}": {"delete": {"tags": ["Tags"], "summary": "Deletes a Tag.", "operationId": "DeleteTag", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "tagId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "204": {"description": "The resource was successfully deleted."}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}, "get": {"tags": ["Tags"], "summary": "Retrieves a Tag by ID.", "operationId": "GetTagById", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "tagId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Tags.V1.TagDto"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}, "put": {"tags": ["Tags"], "summary": "Updates a Tag.", "operationId": "UpdateTag", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "tagId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Tags.V1.UpdateRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Tags.V1.UpdateRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Tags.V1.UpdateRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Tags.V1.UpdateRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved."}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/validations/tags": {"get": {"tags": ["Tags"], "summary": "Retrieves a list of Tags.", "operationId": "GetTags", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string"}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Tags.V1.PaginatedTags"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "post": {"tags": ["Tags"], "summary": "Creates a Tag.", "operationId": "CreateTag", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Tags.V1.CreateRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Tags.V1.CreateRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Tags.V1.CreateRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Tags.V1.CreateRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "201": {"description": "The resource was created. The location of the resource is available in the Location header of the response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Core.V1.CreatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}}, "components": {"schemas": {"EdGraph.Common.Errors.Core.ProblemDetails": {"type": "object", "properties": {"type": {"type": "string", "nullable": true}, "status": {"type": "integer", "format": "int32"}, "title": {"type": "string", "nullable": true}, "details": {"type": "string", "nullable": true}, "instance": {"type": "string", "nullable": true}, "extensions": {"type": "object", "additionalProperties": {"nullable": true}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "Microsoft.AspNetCore.Mvc.ValidationProblemDetails": {"type": "object", "properties": {"errors": {"type": "object", "additionalProperties": {"type": "array", "items": {"type": "string"}}, "nullable": true}, "type": {"type": "string", "nullable": true}, "title": {"type": "string", "nullable": true}, "status": {"type": "integer", "format": "int32", "nullable": true}, "detail": {"type": "string", "nullable": true}, "instance": {"type": "string", "nullable": true}}, "additionalProperties": {}}, "ValidationsApi.Containers.V1.CollectionUser": {"type": "object", "properties": {"email": {"type": "string", "nullable": true}, "firstName": {"type": "string", "nullable": true}, "lastName": {"type": "string", "nullable": true}}, "additionalProperties": false}, "ValidationsApi.Containers.V1.ContainerDto": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "id": {"type": "string", "nullable": true}, "name": {"type": "string", "nullable": true}, "description": {"type": "string", "nullable": true}, "containerType": {"type": "string", "nullable": true}, "parentContainerId": {"type": "string", "nullable": true}, "isDefault": {"type": "boolean"}, "environmentType": {"type": "string", "nullable": true}, "childContainers": {"type": "array", "items": {"$ref": "#/components/schemas/ValidationsApi.Containers.V1.ContainerDto"}, "nullable": true, "readOnly": true}, "childContainersCount": {"type": "integer", "format": "int32", "nullable": true}, "tags": {"type": "array", "items": {"$ref": "#/components/schemas/ValidationsApi.Containers.V1.ContainerDto+Types+TagDto"}, "nullable": true, "readOnly": true}, "rulesCount": {"type": "integer", "format": "int32", "nullable": true}, "dataOwner": {"$ref": "#/components/schemas/ValidationsApi.Containers.V1.CollectionUser"}, "dataStewards": {"type": "array", "items": {"$ref": "#/components/schemas/ValidationsApi.Containers.V1.CollectionUser"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "ValidationsApi.Containers.V1.ContainerDto+Types+TagDto": {"type": "object", "properties": {"id": {"type": "string", "nullable": true}, "name": {"type": "string", "nullable": true}, "description": {"type": "string", "nullable": true}}, "additionalProperties": false}, "ValidationsApi.Containers.V1.CreateCollectionRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "name": {"type": "string", "nullable": true}, "description": {"type": "string", "nullable": true}, "environmentType": {"type": "string", "nullable": true}, "tags": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "ValidationsApi.Containers.V1.CreateContainerRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "name": {"type": "string", "nullable": true}, "description": {"type": "string", "nullable": true}, "environmentType": {"type": "string", "nullable": true}, "tags": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}, "parentContainerId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "ValidationsApi.Containers.V1.GetJsonResponse": {"type": "object", "properties": {"collectionJson": {"type": "string", "nullable": true}}, "additionalProperties": false}, "ValidationsApi.Containers.V1.PaginatedContainers": {"type": "object", "properties": {"pageIndex": {"type": "integer", "format": "int32"}, "pageSize": {"type": "integer", "format": "int32"}, "count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/ValidationsApi.Containers.V1.ContainerDto"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "ValidationsApi.Containers.V1.UpdateCollectionRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "id": {"type": "string", "nullable": true}, "name": {"type": "string", "nullable": true}, "description": {"type": "string", "nullable": true}, "environmentType": {"type": "string", "nullable": true}, "tags": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "ValidationsApi.Containers.V1.UpdateContainerRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "id": {"type": "string", "nullable": true}, "name": {"type": "string", "nullable": true}, "description": {"type": "string", "nullable": true}, "tags": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "ValidationsApi.Containers.V1.UploadCollectionRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "collectionJson": {"type": "string", "nullable": true}}, "additionalProperties": false}, "ValidationsApi.Core.V1.CreatedResponse": {"type": "object", "properties": {"id": {"type": "string", "nullable": true}}, "additionalProperties": false}, "ValidationsApi.Core.V1.EmptyResponse": {"type": "object", "additionalProperties": false}, "ValidationsApi.DbEnvironments.V1.AzureSynapseSqlServerlessConnection": {"type": "object", "properties": {"server": {"type": "string", "nullable": true}, "database": {"type": "string", "nullable": true}, "username": {"type": "string", "nullable": true}, "password": {"type": "string", "nullable": true}}, "additionalProperties": false}, "ValidationsApi.DbEnvironments.V1.CreateRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "description": "Details", "nullable": true}, "id": {"type": "string", "nullable": true}, "name": {"type": "string", "nullable": true}, "connectionType": {"type": "string", "description": "Connection", "nullable": true}, "sqlServerConnection": {"$ref": "#/components/schemas/ValidationsApi.DbEnvironments.V1.SqlServerConnection"}, "azureSynapseSqlServerlessConnection": {"$ref": "#/components/schemas/ValidationsApi.DbEnvironments.V1.AzureSynapseSqlServerlessConnection"}, "maxNumberResults": {"type": "integer", "description": "Metadata", "format": "int32", "nullable": true}, "timeoutInMinutes": {"type": "integer", "format": "int32", "nullable": true}, "version": {"type": "integer", "format": "int32", "nullable": true}, "mapTables": {"type": "string", "nullable": true}}, "additionalProperties": false}, "ValidationsApi.DbEnvironments.V1.DbEnvironmentDto": {"type": "object", "properties": {"tenantId": {"type": "string", "description": "Details", "nullable": true}, "id": {"type": "string", "nullable": true}, "name": {"type": "string", "nullable": true}, "connectionType": {"type": "string", "description": "Connection", "nullable": true}, "sqlServerConnection": {"$ref": "#/components/schemas/ValidationsApi.DbEnvironments.V1.SqlServerConnection"}, "azureSynapseSqlServerlessConnection": {"$ref": "#/components/schemas/ValidationsApi.DbEnvironments.V1.AzureSynapseSqlServerlessConnection"}, "connectionString": {"type": "string", "nullable": true}, "maxNumberResults": {"type": "integer", "description": "Metadata", "format": "int32", "nullable": true}, "timeoutInMinutes": {"type": "integer", "format": "int32", "nullable": true}, "version": {"type": "integer", "format": "int32", "nullable": true}, "mapTables": {"type": "string", "nullable": true}}, "additionalProperties": false}, "ValidationsApi.DbEnvironments.V1.PaginatedDbEnvironments": {"type": "object", "properties": {"pageIndex": {"type": "integer", "format": "int32"}, "pageSize": {"type": "integer", "format": "int32"}, "count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/ValidationsApi.DbEnvironments.V1.DbEnvironmentDto"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "ValidationsApi.DbEnvironments.V1.SqlServerConnection": {"type": "object", "properties": {"server": {"type": "string", "nullable": true}, "database": {"type": "string", "nullable": true}, "username": {"type": "string", "nullable": true}, "password": {"type": "string", "nullable": true}}, "additionalProperties": false}, "ValidationsApi.DbEnvironments.V1.TestConnectionRequest": {"type": "object", "properties": {"id": {"type": "string", "nullable": true}, "connectionType": {"type": "string", "nullable": true}, "sqlServerConnection": {"$ref": "#/components/schemas/ValidationsApi.DbEnvironments.V1.SqlServerConnection"}, "azureSynapseSqlServerlessConnection": {"$ref": "#/components/schemas/ValidationsApi.DbEnvironments.V1.AzureSynapseSqlServerlessConnection"}}, "additionalProperties": false}, "ValidationsApi.DbEnvironments.V1.TestConnectionResponse": {"type": "object", "properties": {"canConnect": {"type": "boolean"}, "reasonFailed": {"type": "string", "nullable": true}}, "additionalProperties": false}, "ValidationsApi.DbEnvironments.V1.UpdateRequest": {"type": "object", "properties": {"id": {"type": "string", "description": "Details", "nullable": true}, "name": {"type": "string", "nullable": true}, "connectionType": {"type": "string", "description": "Connection", "nullable": true}, "sqlServerConnection": {"$ref": "#/components/schemas/ValidationsApi.DbEnvironments.V1.SqlServerConnection"}, "azureSynapseSqlServerlessConnection": {"$ref": "#/components/schemas/ValidationsApi.DbEnvironments.V1.AzureSynapseSqlServerlessConnection"}, "maxNumberResults": {"type": "integer", "description": "Metadata", "format": "int32", "nullable": true}, "timeoutInMinutes": {"type": "integer", "format": "int32", "nullable": true}, "version": {"type": "integer", "format": "int32", "nullable": true}, "mapTables": {"type": "string", "nullable": true}}, "additionalProperties": false}, "ValidationsApi.Jobs.V1.ChildJob": {"type": "object", "properties": {"jobId": {"type": "string", "nullable": true}, "jobExecutionId": {"type": "string", "nullable": true}, "childJobId": {"type": "string", "nullable": true}, "childJobName": {"type": "string", "nullable": true}, "jobExecutionStatus": {"$ref": "#/components/schemas/ValidationsApi.Jobs.V1.JobExecutionStatus"}, "jobExecutionStartDateTime": {"type": "string", "nullable": true}, "jobExecutionEndDateTime": {"type": "string", "nullable": true}, "metrics": {"type": "array", "items": {"$ref": "#/components/schemas/ValidationsApi.Jobs.V1.Metric"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "ValidationsApi.Jobs.V1.CreateRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "name": {"type": "string", "nullable": true}, "jobMetadata": {"type": "array", "items": {"$ref": "#/components/schemas/ValidationsApi.Jobs.V1.JobMetadata"}, "nullable": true, "readOnly": true}, "schedule": {"$ref": "#/components/schemas/ValidationsApi.Jobs.V1.Schedule"}, "notificationEmails": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "ValidationsApi.Jobs.V1.DataRefreshType": {"enum": ["Unknown", "Full", "Deltasincelastjobexecution", "Deltasincespecificdatetime"], "type": "string"}, "ValidationsApi.Jobs.V1.JobExecutionStatus": {"enum": ["Unknown", "Queued", "Running", "Completed", "CompletedWithErrors", "Cancelled", "Error", "QueuedForCancel"], "type": "string"}, "ValidationsApi.Jobs.V1.JobListResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "jobId": {"type": "string", "nullable": true}, "name": {"type": "string", "nullable": true}, "jobTypeId": {"type": "string", "nullable": true}, "jobTypeName": {"type": "string", "nullable": true}, "sourceConnectionId": {"type": "string", "nullable": true}, "destinationConnectionId": {"type": "string", "nullable": true}, "profileId": {"type": "string", "nullable": true}, "applicationId": {"type": "string", "nullable": true}, "schedule": {"$ref": "#/components/schemas/ValidationsApi.Jobs.V1.Schedule"}, "jobStatus": {"$ref": "#/components/schemas/ValidationsApi.Jobs.V1.JobStatus"}, "jobExecutionId": {"type": "string", "nullable": true}, "jobExecutionStatus": {"$ref": "#/components/schemas/ValidationsApi.Jobs.V1.JobExecutionStatus"}, "jobExecutionStartDateTime": {"type": "string", "nullable": true}, "jobExecutionEndDateTime": {"type": "string", "nullable": true}, "metrics": {"type": "array", "items": {"$ref": "#/components/schemas/ValidationsApi.Jobs.V1.Metric"}, "nullable": true, "readOnly": true}, "childJobs": {"type": "array", "items": {"$ref": "#/components/schemas/ValidationsApi.Jobs.V1.ChildJob"}, "nullable": true, "readOnly": true}, "createdBy": {"type": "string", "nullable": true}, "createdDateTime": {"type": "string", "nullable": true}, "lastModifiedBy": {"type": "string", "nullable": true}, "lastModifiedDateTime": {"type": "string", "nullable": true}, "collectionId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "ValidationsApi.Jobs.V1.JobMetadata": {"type": "object", "properties": {"code": {"type": "string", "nullable": true}, "value": {"type": "string", "nullable": true}}, "additionalProperties": false}, "ValidationsApi.Jobs.V1.JobProfileResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "jobId": {"type": "string", "nullable": true}, "name": {"type": "string", "nullable": true}, "jobTypeId": {"type": "string", "nullable": true}, "jobTypeName": {"type": "string", "nullable": true}, "sourceConnectionId": {"type": "string", "nullable": true}, "destinationConnectionId": {"type": "string", "nullable": true}, "profileId": {"type": "string", "nullable": true}, "profileName": {"type": "string", "nullable": true}, "applicationId": {"type": "string", "nullable": true}, "jobPoints": {"type": "integer", "format": "int32"}, "dataRefreshType": {"$ref": "#/components/schemas/ValidationsApi.Jobs.V1.DataRefreshType"}, "dataRefreshSpecificDate": {"type": "string", "nullable": true}, "maxApiFailure": {"type": "integer", "format": "int32"}, "maxApiRetry": {"type": "integer", "format": "int32"}, "jobCompleteCallbackUrl": {"type": "string", "nullable": true}, "jobMetadata": {"type": "array", "items": {"$ref": "#/components/schemas/ValidationsApi.Jobs.V1.JobMetadata"}, "nullable": true, "readOnly": true}, "schedule": {"$ref": "#/components/schemas/ValidationsApi.Jobs.V1.Schedule"}, "notificationEmails": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}, "jobStatus": {"$ref": "#/components/schemas/ValidationsApi.Jobs.V1.JobStatus"}, "jobExecutionId": {"type": "string", "nullable": true}, "jobExecutionStatus": {"$ref": "#/components/schemas/ValidationsApi.Jobs.V1.JobExecutionStatus"}, "jobExecutionStartDateTime": {"type": "string", "nullable": true}, "jobExecutionEndDateTime": {"type": "string", "nullable": true}, "metrics": {"type": "array", "items": {"$ref": "#/components/schemas/ValidationsApi.Jobs.V1.Metric"}, "nullable": true, "readOnly": true}, "childJobs": {"type": "array", "items": {"$ref": "#/components/schemas/ValidationsApi.Jobs.V1.ChildJob"}, "nullable": true, "readOnly": true}, "createdBy": {"type": "string", "nullable": true}, "createdDateTime": {"type": "string", "nullable": true}, "lastModifiedBy": {"type": "string", "nullable": true}, "lastModifiedDateTime": {"type": "string", "nullable": true}, "collectionId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "ValidationsApi.Jobs.V1.JobStatus": {"enum": ["Unknown", "Active", "Deactivated", "QueuedForDelete", "QueuedForScheduleRestart"], "type": "string"}, "ValidationsApi.Jobs.V1.Metric": {"type": "object", "properties": {"entity": {"type": "string", "nullable": true}, "processed": {"type": "integer", "format": "int32"}, "success": {"type": "integer", "format": "int32"}, "errors": {"type": "integer", "format": "int32"}}, "additionalProperties": false}, "ValidationsApi.Jobs.V1.PaginatedItemsResponse": {"type": "object", "properties": {"pageIndex": {"type": "integer", "format": "int32"}, "pageSize": {"type": "integer", "format": "int32"}, "count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/ValidationsApi.Jobs.V1.JobListResponse"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "ValidationsApi.Jobs.V1.Schedule": {"type": "object", "properties": {"enabled": {"type": "boolean"}, "beginDate": {"type": "string", "nullable": true}, "endDate": {"type": "string", "nullable": true}, "cron": {"type": "string", "nullable": true}, "timeZone": {"type": "string", "nullable": true}}, "additionalProperties": false}, "ValidationsApi.Jobs.V1.UpdateRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "id": {"type": "string", "nullable": true}, "name": {"type": "string", "nullable": true}, "jobMetadata": {"type": "array", "items": {"$ref": "#/components/schemas/ValidationsApi.Jobs.V1.JobMetadata"}, "nullable": true, "readOnly": true}, "schedule": {"$ref": "#/components/schemas/ValidationsApi.Jobs.V1.Schedule"}, "notificationEmails": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "ValidationsApi.RuleExecutionLogs.V1.FindResponse": {"type": "object", "properties": {"pageIndex": {"type": "integer", "format": "int32"}, "pageSize": {"type": "integer", "format": "int32"}, "count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/ValidationsApi.RuleExecutionLogs.V1.RuleExecutionLogDto"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "ValidationsApi.RuleExecutionLogs.V1.RuleExecutionLogDto": {"type": "object", "properties": {"id": {"type": "string", "nullable": true}, "environmentId": {"type": "string", "nullable": true}, "collectionId": {"type": "string", "nullable": true}, "containerId": {"type": "string", "nullable": true}, "ruleId": {"type": "string", "nullable": true}, "jobId": {"type": "string", "nullable": true}, "jobExecutionId": {"type": "string", "nullable": true}, "response": {"type": "string", "nullable": true}, "result": {"type": "integer", "format": "int32"}, "evaluation": {"type": "boolean"}, "statusId": {"type": "integer", "format": "int32"}, "executionDate": {"type": "string", "nullable": true}, "executionTimeMs": {"type": "integer", "format": "int64"}, "executedSql": {"type": "string", "nullable": true}, "diagnosticSql": {"type": "string", "nullable": true}, "ruleDetailsDestinationId": {"type": "integer", "format": "int32", "nullable": true}, "detailsSchema": {"type": "string", "nullable": true}, "detailsTableName": {"type": "string", "nullable": true}, "details": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}, "lastExecutionId": {"type": "string", "nullable": true}, "lastExecutionTotalResults": {"type": "integer", "format": "int32", "nullable": true}, "lastExecutionTotalInvalidResults": {"type": "integer", "format": "int32", "nullable": true}}, "additionalProperties": false}, "ValidationsApi.Rules.V1.CreateRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "description": "Details", "nullable": true}, "containerId": {"type": "string", "nullable": true}, "id": {"type": "string", "nullable": true}, "name": {"type": "string", "nullable": true}, "description": {"type": "string", "nullable": true}, "diagnosticSql": {"type": "string", "description": "SQL", "nullable": true}, "countSql": {"type": "string", "nullable": true}, "errorSeverityLevel": {"type": "integer", "format": "int32"}, "errorMessage": {"type": "string", "nullable": true}, "maxNumberResults": {"type": "integer", "format": "int32", "nullable": true}, "ruleIdentification": {"type": "string", "description": "Metadata", "nullable": true}, "resolution": {"type": "string", "nullable": true}, "tags": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}, "version": {"type": "string", "nullable": true}}, "additionalProperties": false}, "ValidationsApi.Rules.V1.PaginatedRules": {"type": "object", "properties": {"pageIndex": {"type": "integer", "format": "int32"}, "pageSize": {"type": "integer", "format": "int32"}, "count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/ValidationsApi.Rules.V1.RuleDto"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "ValidationsApi.Rules.V1.RuleDto": {"type": "object", "properties": {"tenantId": {"type": "string", "description": "Details", "nullable": true}, "containerId": {"type": "string", "nullable": true}, "id": {"type": "string", "nullable": true}, "name": {"type": "string", "nullable": true}, "description": {"type": "string", "nullable": true}, "diagnosticSql": {"type": "string", "description": "SQL", "nullable": true}, "countSql": {"type": "string", "nullable": true}, "errorSeverityLevel": {"type": "integer", "format": "int32"}, "errorMessage": {"type": "string", "nullable": true}, "maxNumberResults": {"type": "integer", "format": "int32", "nullable": true}, "ruleIdentification": {"type": "string", "description": "Metadata", "nullable": true}, "resolution": {"type": "string", "nullable": true}, "tags": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}, "version": {"type": "string", "nullable": true}, "parentCollection": {"$ref": "#/components/schemas/ValidationsApi.Containers.V1.ContainerDto"}, "parentContainer": {"$ref": "#/components/schemas/ValidationsApi.Containers.V1.ContainerDto"}, "lastExecutionId": {"type": "string", "nullable": true}, "lastExecutionStartDateTime": {"type": "string", "nullable": true}, "lastExecutionEndDateTime": {"type": "string", "nullable": true}, "lastExecutionTotalResults": {"type": "integer", "format": "int32", "nullable": true}, "lastExecutionTotalInvalidResults": {"type": "integer", "format": "int32", "nullable": true}}, "additionalProperties": false}, "ValidationsApi.Rules.V1.UpdateRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "description": "Details", "nullable": true}, "id": {"type": "string", "nullable": true}, "name": {"type": "string", "nullable": true}, "description": {"type": "string", "nullable": true}, "diagnosticSql": {"type": "string", "description": "SQL", "nullable": true}, "countSql": {"type": "string", "nullable": true}, "errorSeverityLevel": {"type": "integer", "format": "int32"}, "errorMessage": {"type": "string", "nullable": true}, "maxNumberResults": {"type": "integer", "format": "int32", "nullable": true}, "ruleIdentification": {"type": "string", "description": "Metadata", "nullable": true}, "resolution": {"type": "string", "nullable": true}, "tags": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}, "version": {"type": "string", "nullable": true}}, "additionalProperties": false}, "ValidationsApi.Tags.V1.CreateRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "name": {"type": "string", "nullable": true}, "description": {"type": "string", "nullable": true}, "isPublic": {"type": "boolean"}}, "additionalProperties": false}, "ValidationsApi.Tags.V1.PaginatedTags": {"type": "object", "properties": {"pageIndex": {"type": "integer", "format": "int32"}, "pageSize": {"type": "integer", "format": "int32"}, "count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/ValidationsApi.Tags.V1.TagDto"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "ValidationsApi.Tags.V1.TagDto": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "id": {"type": "string", "nullable": true}, "name": {"type": "string", "nullable": true}, "description": {"type": "string", "nullable": true}, "isPublic": {"type": "boolean"}}, "additionalProperties": false}, "ValidationsApi.Tags.V1.UpdateRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "id": {"type": "string", "nullable": true}, "name": {"type": "string", "nullable": true}, "description": {"type": "string", "nullable": true}, "isPublic": {"type": "boolean"}}, "additionalProperties": false}}, "securitySchemes": {"oauth2": {"type": "oauth2", "description": "Use bearer token generated from an OpenId server", "flows": {"clientCredentials": {"tokenUrl": "https://login.pre.txedexchange.net/connect/token", "scopes": {"https://api.edgraph.com/tenant": "EdGraph Platform - Tenant Api"}}}}}}, "security": [{"oauth2": ["https://api.edgraph.com/tenant"]}]}