{"openapi": "3.0.1", "info": {"title": "Management Api", "description": "Api to help platform wide items such as users, tenants, applications, subscriptions, etc.", "version": "v1.0"}, "servers": [{"url": "https://api.txedexchange.dev/management"}], "paths": {"/apiresources/{apiResourceId}": {"delete": {"tags": ["Api Resources"], "summary": "Deletes an OpenId Api Resource", "operationId": "DeleteApiResourceAsync", "parameters": [{"name": "apiResourceId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "204": {"description": "The resource was successfully deleted."}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "get": {"tags": ["Api Resources"], "summary": "Retrieves a specific OpenId Api Resource", "operationId": "GetApiResourceByIdAsync", "parameters": [{"name": "apiResourceId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Responses.ApiResourceResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "put": {"tags": ["Api Resources"], "summary": "Adds or Updates an OpenId Api Resource", "operationId": "CreateOrUpdateApiResourceAsync", "parameters": [{"name": "apiResourceId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.UpdateApiResourceRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.UpdateApiResourceRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.UpdateApiResourceRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.UpdateApiResourceRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Responses.ApiResourceResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/apiresources": {"get": {"tags": ["Api Resources"], "summary": "Retrieves a list of OpenId Api Resources", "operationId": "GetAllApiResourcesAsync", "parameters": [{"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string", "default": "Name ASC"}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Responses.ApiResourceResponsePaginatedItemsViewModel"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "post": {"tags": ["Api Resources"], "summary": "Creates a new OpenId Api Resource", "operationId": "CreateApiResourceAsync", "parameters": [{"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.CreateApiResourceRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.CreateApiResourceRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.CreateApiResourceRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.CreateApiResourceRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "201": {"description": "The resource was created. The location of the resource is available in the Location header of the response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Responses.ApiResourceResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/applications/{applicationId}/launchersettings": {"get": {"tags": ["Applications"], "summary": "Retrieves the launcher settings for a specific application", "operationId": "GetApplicationLauncherSettingsByIdAsync", "parameters": [{"name": "applicationId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ApplicationApi.Application.V3.ApplicationLauncherSettingsResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found."}}}, "put": {"tags": ["Applications"], "summary": "Update an application's launcher settings", "operationId": "UpdateApplicationLauncherSettingsAsync", "parameters": [{"name": "applicationId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/ApplicationApi.Application.V3.UpdateApplicationLauncherSettingsRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/ApplicationApi.Application.V3.UpdateApplicationLauncherSettingsRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/ApplicationApi.Application.V3.UpdateApplicationLauncherSettingsRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/ApplicationApi.Application.V3.UpdateApplicationLauncherSettingsRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ApplicationApi.Application.V3.ApplicationUpdatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/applications/{applicationId}/publish": {"put": {"tags": ["Applications"], "summary": "Publish an application", "operationId": "PublishApplicationAsync", "parameters": [{"name": "applicationId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ApplicationApi.Application.V3.ApplicationPublishedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/applications/{applicationId}": {"delete": {"tags": ["Applications"], "summary": "Delete an application", "operationId": "DeleteApplicationAsync", "parameters": [{"name": "applicationId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/ApplicationApi.Application.V3.DeleteApplicationRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/ApplicationApi.Application.V3.DeleteApplicationRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/ApplicationApi.Application.V3.DeleteApplicationRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/ApplicationApi.Application.V3.DeleteApplicationRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "204": {"description": "The resource was successfully deleted."}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "get": {"tags": ["Applications"], "summary": "Retrieves a specific application", "operationId": "GetApplicationProfileByIdAsync", "parameters": [{"name": "applicationId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ApplicationApi.Application.V3.ApplicationProfileResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found."}}}, "put": {"tags": ["Applications"], "summary": "Update an application's profile", "operationId": "UpdateApplicationProfileAsync", "parameters": [{"name": "applicationId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/ApplicationApi.Application.V3.UpdateApplicationProfileRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/ApplicationApi.Application.V3.UpdateApplicationProfileRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/ApplicationApi.Application.V3.UpdateApplicationProfileRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/ApplicationApi.Application.V3.UpdateApplicationProfileRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ApplicationApi.Application.V3.ApplicationUpdatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/applications": {"get": {"tags": ["Applications"], "summary": "Retrieves a list applications", "operationId": "GetAllApplicationsAsync", "parameters": [{"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ApplicationApi.Application.V3.PaginatedItemsResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "post": {"tags": ["Applications"], "summary": "Create an application", "operationId": "CreateApplicationAsync", "parameters": [{"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/ApplicationApi.Application.V3.CreateApplicationRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/ApplicationApi.Application.V3.CreateApplicationRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/ApplicationApi.Application.V3.CreateApplicationRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/ApplicationApi.Application.V3.CreateApplicationRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "201": {"description": "The resource was created. The location of the resource is available in the Location header of the response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ApplicationApi.Application.V3.ApplicationCreatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/authorizationResources/{authorizationResourceId}": {"delete": {"tags": ["AuthorizationResources"], "summary": "Deletes a AuthorizationResource.", "operationId": "DeleteAuthorizationResource", "parameters": [{"name": "authorizationResourceId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "204": {"description": "The resource was successfully deleted."}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.AuthorizationResource.V1.AuthorizationResourceDeletedResponse"}}}}}}, "get": {"tags": ["AuthorizationResources"], "summary": "Retrieves a AuthorizationResource by name.", "operationId": "GetAuthorizationResourceById", "parameters": [{"name": "authorizationResourceId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.AuthorizationResource.V1.AuthorizationResourceResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}, "put": {"tags": ["AuthorizationResources"], "summary": "Updates a AuthorizationResource.", "operationId": "UpdateAuthorizationResource", "parameters": [{"name": "authorizationResourceId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.AuthorizationResource.V1.UpdateAuthorizationResourceRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.AuthorizationResource.V1.UpdateAuthorizationResourceRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.AuthorizationResource.V1.UpdateAuthorizationResourceRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.AuthorizationResource.V1.UpdateAuthorizationResourceRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.AuthorizationResource.V1.AuthorizationResourceUpdatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/authorizationResources": {"get": {"tags": ["AuthorizationResources"], "summary": "Retrieves a list of AuthorizationResources.", "operationId": "GetAuthorizationResources", "parameters": [{"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.AuthorizationResource.V1.GetAuthorizationResourcesResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "post": {"tags": ["AuthorizationResources"], "summary": "Creates a AuthorizationResource.", "operationId": "CreateAuthorizationResource", "parameters": [{"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.AuthorizationResource.V1.CreateAuthorizationResourceRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.AuthorizationResource.V1.CreateAuthorizationResourceRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.AuthorizationResource.V1.CreateAuthorizationResourceRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.AuthorizationResource.V1.CreateAuthorizationResourceRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "201": {"description": "The resource was created. The location of the resource is available in the Location header of the response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.AuthorizationResource.V1.AuthorizationResourceCreatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/datasync/jobtypes/{jobTypeId}/profiles/{profileId}": {"delete": {"tags": ["DataSync"], "summary": "Delete a profile assigned to the DataSync job type", "operationId": "DeleteDataSyncProfileAsync", "parameters": [{"name": "jobTypeId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "profileId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.JobType.V1.DeleteProfileRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.JobType.V1.DeleteProfileRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.JobType.V1.DeleteProfileRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.JobType.V1.DeleteProfileRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "204": {"description": "The resource was successfully deleted."}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "put": {"tags": ["DataSync"], "summary": "Updates a profile assigned to the DataSync job type", "operationId": "UpdateDataSyncProfileAsync", "parameters": [{"name": "jobTypeId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "profileId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.JobType.V1.UpdateProfileRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.JobType.V1.UpdateProfileRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.JobType.V1.UpdateProfileRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.JobType.V1.UpdateProfileRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.JobType.V1.ProfileUpdatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/datasync/jobtypes/{jobTypeId}/profiles": {"post": {"tags": ["DataSync"], "summary": "Creates a new profile assigned to the DataSync job type", "operationId": "CreateDataSyncProfileAsync", "parameters": [{"name": "jobTypeId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.JobType.V1.CreateProfileRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.JobType.V1.CreateProfileRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.JobType.V1.CreateProfileRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.JobType.V1.CreateProfileRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "201": {"description": "The resource was created. The location of the resource is available in the Location header of the response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.JobType.V1.ProfileCreatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/datasync/jobtypes/{jobTypeId}": {"delete": {"tags": ["DataSync"], "summary": "Delete a DataSync job type", "operationId": "DeleteDataSyncJobTypeAsync", "parameters": [{"name": "jobTypeId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.JobType.V1.DeleteJobTypeRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.JobType.V1.DeleteJobTypeRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.JobType.V1.DeleteJobTypeRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.JobType.V1.DeleteJobTypeRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "204": {"description": "The resource was successfully deleted."}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "get": {"tags": ["DataSync"], "summary": "Retrieves a specific DataSync job type", "operationId": "GetDataSyncJobTypeProfileByIdAsync", "parameters": [{"name": "jobTypeId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.JobType.V1.JobTypeProfileResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "put": {"tags": ["DataSync"], "summary": "Updates a DataSync job type", "operationId": "UpdateDataSyncJobTypeAsync", "parameters": [{"name": "jobTypeId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.JobType.V1.UpdateJobTypeRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.JobType.V1.UpdateJobTypeRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.JobType.V1.UpdateJobTypeRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.JobType.V1.UpdateJobTypeRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.JobType.V1.JobTypeUpdatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/datasync/jobtypes": {"get": {"tags": ["DataSync"], "summary": "Retrieves a list of DataSync job types", "operationId": "GetAllDataSyncJobTypesAsync", "parameters": [{"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.JobType.V1.JobTypeListResponsePaginatedItemsViewModel"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "post": {"tags": ["DataSync"], "summary": "Creates a new DataSync job type", "operationId": "CreateDataSyncJobTypeAsync", "parameters": [{"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.JobType.V1.CreateJobTypeRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.JobType.V1.CreateJobTypeRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.JobType.V1.CreateJobTypeRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.JobType.V1.CreateJobTypeRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "201": {"description": "The resource was created. The location of the resource is available in the Location header of the response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.JobType.V1.JobTypeCreatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/datasync/providers/{providerId}/connectiontypes/{connectionTypeId}": {"delete": {"tags": ["DataSync"], "summary": "Delete a connection type assigned to the DataSync provider", "operationId": "DeleteDataSyncConnectionTypeAsync", "parameters": [{"name": "providerId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "connectionTypeId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Provider.V1.DeleteConnectionTypeRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Provider.V1.DeleteConnectionTypeRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Provider.V1.DeleteConnectionTypeRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Provider.V1.DeleteConnectionTypeRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "204": {"description": "The resource was successfully deleted."}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "put": {"tags": ["DataSync"], "summary": "Updates a connection type assigned to the DataSync provider", "operationId": "UpdateDataSyncConnectionTypeAsync", "parameters": [{"name": "providerId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "connectionTypeId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Provider.V1.UpdateConnectionTypeRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Provider.V1.UpdateConnectionTypeRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Provider.V1.UpdateConnectionTypeRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Provider.V1.UpdateConnectionTypeRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Provider.V1.ConnectionTypeUpdatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/datasync/providers/{providerId}/connectiontypes": {"post": {"tags": ["DataSync"], "summary": "Creates a new connection type assigned to the DataSync provider", "operationId": "CreateDataSyncConnectionTypeAsync", "parameters": [{"name": "providerId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Provider.V1.CreateConnectionTypeRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Provider.V1.CreateConnectionTypeRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Provider.V1.CreateConnectionTypeRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Provider.V1.CreateConnectionTypeRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "201": {"description": "The resource was created. The location of the resource is available in the Location header of the response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Provider.V1.ConnectionTypeCreatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/datasync/providers/{providerId}": {"delete": {"tags": ["DataSync"], "summary": "Delete a DataSync provider", "operationId": "DeleteDataSyncProviderAsync", "parameters": [{"name": "providerId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Provider.V1.DeleteProviderRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Provider.V1.DeleteProviderRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Provider.V1.DeleteProviderRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Provider.V1.DeleteProviderRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "204": {"description": "The resource was successfully deleted."}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "get": {"tags": ["DataSync"], "summary": "Retrieves a specific DataSync provider", "operationId": "GetDataSyncProviderProfileByIdAsync", "parameters": [{"name": "providerId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Provider.V1.ProviderProfileResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "put": {"tags": ["DataSync"], "summary": "Updates a DataSync provider", "operationId": "UpdateDataSyncProviderAsync", "parameters": [{"name": "providerId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Provider.V1.UpdateProviderRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Provider.V1.UpdateProviderRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Provider.V1.UpdateProviderRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Provider.V1.UpdateProviderRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Provider.V1.ProviderUpdatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/datasync/providers": {"get": {"tags": ["DataSync"], "summary": "Retrieves a list of DataSync providers", "operationId": "GetAllDataSyncProvidersAsync", "parameters": [{"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Provider.V1.ProviderListResponsePaginatedItemsViewModel"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "post": {"tags": ["DataSync"], "summary": "Creates a new DataSync provider", "operationId": "CreateDataSyncProviderAsync", "parameters": [{"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Provider.V1.CreateProviderRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Provider.V1.CreateProviderRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Provider.V1.CreateProviderRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Provider.V1.CreateProviderRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "201": {"description": "The resource was created. The location of the resource is available in the Location header of the response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/DataSyncApi.Provider.V1.ProviderCreatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/domains/{domainName}": {"delete": {"tags": ["Domains"], "summary": "Deletes a user", "operationId": "DeleteTenantDomainAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "domainName", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "204": {"description": "The resource was successfully deleted."}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "get": {"tags": ["Domains"], "summary": "Retrieves a domain", "operationId": "GetTenantDomainProfileByNameAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "domainName", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.DomainProfileResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}, "put": {"tags": ["Domains"], "summary": "Updates a domain", "operationId": "UpdateTenantDomainAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "domainName", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.UpdateDomainRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.UpdateDomainRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.UpdateDomainRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.UpdateDomainRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.DomainUpdatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/domains": {"get": {"tags": ["Domains"], "summary": "Retrieves a list of domains associated to this tenant", "operationId": "GetAllTenantDomainsAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Responses.DomainListResponseDtoPaginatedItemsViewModel"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "post": {"tags": ["Domains"], "summary": "Creates a new domain", "operationId": "CreateTenantDomainAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.CreateDomainRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.CreateDomainRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.CreateDomainRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.CreateDomainRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "201": {"description": "The resource was created. The location of the resource is available in the Location header of the response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.DomainCreatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/identityresources/{identityResourceId}": {"delete": {"tags": ["Identity Resources"], "summary": "Deletes an OpenId Identity Resource", "operationId": "DeleteIdentityResourceAsync", "parameters": [{"name": "identityResourceId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "204": {"description": "The resource was successfully deleted."}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "get": {"tags": ["Identity Resources"], "summary": "Retrieves a specific OpenId Identity Resource", "operationId": "GetIdentityResourceByIdAsync", "parameters": [{"name": "identityResourceId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Responses.IdentityResourceResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "put": {"tags": ["Identity Resources"], "summary": "Adds or Updates an OpenId Identity Resource", "operationId": "CreateOrUpdateIdentityResourceAsync", "parameters": [{"name": "identityResourceId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.UpdateIdentityResourceRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.UpdateIdentityResourceRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.UpdateIdentityResourceRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.UpdateIdentityResourceRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Responses.IdentityResourceResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/identityresources": {"get": {"tags": ["Identity Resources"], "summary": "Retrieves a list of OpenId Identity Resources", "description": "Referenced from IdentityServer4", "operationId": "GetAllIdentityResourcesAsync", "parameters": [{"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string", "default": "Name ASC"}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Responses.IdentityResourceResponsePaginatedItemsViewModel"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "post": {"tags": ["Identity Resources"], "summary": "Creates a new OpenId Identity Resource", "operationId": "CreateIdentityResourceAsync", "parameters": [{"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.CreateIdentityResourceRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.CreateIdentityResourceRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.CreateIdentityResourceRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.CreateIdentityResourceRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "201": {"description": "The resource was created. The location of the resource is available in the Location header of the response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Responses.IdentityResourceResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/invitations/{invitationId}": {"get": {"tags": ["Invitations"], "summary": "Retrieves a specific invitation", "operationId": "GetTenantInvitationById", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "invitationId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.Invitation.V1.InvitationResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/invitations": {"post": {"tags": ["Invitations"], "summary": "Creates and sends an invitation to a user", "operationId": "SendTenantInvitation", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.SendInvitationRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.SendInvitationRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.SendInvitationRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.SendInvitationRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "201": {"description": "The resource was created. The location of the resource is available in the Location header of the response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.Invitation.V1.InvitationSentResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/migrations/applications/up": {"post": {"tags": ["Migrations"], "summary": "Applies a migration, upgrading the data.", "operationId": "ApplicationsMigrateUpAsync", "parameters": [{"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/ApplicationApi.Application.V3.MigrateUpRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/ApplicationApi.Application.V3.MigrateUpRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/ApplicationApi.Application.V3.MigrateUpRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/ApplicationApi.Application.V3.MigrateUpRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.MigrationResult"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/migrations/edfiadmin/up": {"post": {"tags": ["Migrations"], "summary": "Applies a migration, upgrading the data.", "operationId": "EdFiAdminMigrateUpAsync", "parameters": [{"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.MigrateUpRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.MigrateUpRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.MigrateUpRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.MigrateUpRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.MigrationResult"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/migrations/validations/up": {"post": {"tags": ["Migrations"], "summary": "Applies a migration, upgrading the data.", "operationId": "ValidationsMigrateUpAsync", "parameters": [{"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Migrations.V1.MigrateUpRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Migrations.V1.MigrateUpRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Migrations.V1.MigrateUpRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/ValidationsApi.Migrations.V1.MigrateUpRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdfiAdminApi.EdfiAdmin.V1.MigrationResult"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/clients/{clientId}/settings/{clientSettingsTypeId}": {"delete": {"tags": ["OpenId Clients / Settings"], "summary": "Deletes a ClientSettingsType.", "operationId": "DeleteClientSettingsTypeAsync", "parameters": [{"name": "clientId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "clientSettingsTypeId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "204": {"description": "The resource was successfully deleted."}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}, "get": {"tags": ["OpenId Clients / Settings"], "summary": "Retrieves a ClientSettingsType by ID.", "operationId": "GetClientSettingsTypeByIdAsync", "parameters": [{"name": "clientId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "clientSettingsTypeId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.ClientSettingsType.V1.ClientSettingsTypeResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}, "put": {"tags": ["OpenId Clients / Settings"], "summary": "Updates a ClientSettingsType.", "operationId": "UpdateClientSettingsTypeAsync", "parameters": [{"name": "clientId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "clientSettingsTypeId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.ClientSettingsType.V1.UpdateClientSettingsTypeRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.ClientSettingsType.V1.UpdateClientSettingsTypeRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.ClientSettingsType.V1.UpdateClientSettingsTypeRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.ClientSettingsType.V1.UpdateClientSettingsTypeRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.ClientSettingsType.V1.ClientSettingsTypeUpdatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/clients/{clientId}/settings": {"get": {"tags": ["OpenId Clients / Settings"], "summary": "Retrieves a list of ClientSettingsTypes.", "operationId": "GetClientSettingsTypesAsync", "parameters": [{"name": "clientId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.ClientSettingsType.V1.GetClientSettingsTypesResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "post": {"tags": ["OpenId Clients / Settings"], "summary": "Creates a ClientSettingsType.", "operationId": "CreateClientSettingsTypeAsync", "parameters": [{"name": "clientId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.ClientSettingsType.V1.CreateClientSettingsTypeRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.ClientSettingsType.V1.CreateClientSettingsTypeRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.ClientSettingsType.V1.CreateClientSettingsTypeRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.ClientSettingsType.V1.CreateClientSettingsTypeRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "201": {"description": "The resource was created. The location of the resource is available in the Location header of the response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.ClientSettingsType.V1.ClientSettingsTypeCreatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/clients/{clientId}/regeneratesecret": {"put": {"tags": ["OpenId Clients"], "summary": "Regenerates the secret of an OpenId client", "operationId": "RegenerateClientSecret", "parameters": [{"name": "clientId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.Client.V1.RegenerateClientSecretRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.Client.V1.RegenerateClientSecretRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.Client.V1.RegenerateClientSecretRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.Client.V1.RegenerateClientSecretRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.Client.V1.ClientSecretRegeneratedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/clients/{clientId}": {"delete": {"tags": ["OpenId Clients"], "summary": "Deletes a OpenId client", "operationId": "DeleteClientAsync", "parameters": [{"name": "clientId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "204": {"description": "The resource was successfully deleted."}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "get": {"tags": ["OpenId Clients"], "summary": "Retrieves a specific OpenId client", "operationId": "GetClientProfileByIdAsync", "parameters": [{"name": "clientId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.Client.V1.ClientProfileResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "put": {"tags": ["OpenId Clients"], "summary": "Adds or Updates a OpenId client", "operationId": "CreateOrUpdateClientAsync", "parameters": [{"name": "clientId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.Client.V1.UpdateClientRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.Client.V1.UpdateClientRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.Client.V1.UpdateClientRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.Client.V1.UpdateClientRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.Client.V1.UpdateClientRequest"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/clients": {"get": {"tags": ["OpenId Clients"], "summary": "Retrieves a list of OpenId Clients", "operationId": "GetAllClientsAsync", "parameters": [{"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.Client.V1.ClientListResponsePaginatedItemsViewModel"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "post": {"tags": ["OpenId Clients"], "summary": "Creates a new OpenId client", "operationId": "CreateClientAsync", "parameters": [{"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.Client.V1.CreateClientRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.Client.V1.CreateClientRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.Client.V1.CreateClientRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.Client.V1.CreateClientRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "201": {"description": "The resource was created. The location of the resource is available in the Location header of the response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.Client.V1.ClientCreatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/registrations/{registrationId}/approve": {"put": {"tags": ["Registrations"], "summary": "Approve a tenant's registration request", "operationId": "ApproveTenantRegistrationAsync", "parameters": [{"name": "registrationId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "Success"}, "400": {"description": "Bad Request", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/registrations/{registrationId}/deny": {"put": {"tags": ["Registrations"], "summary": "Deny a tenant's registration request", "operationId": "DenyTenantRegistrationAsync", "parameters": [{"name": "registrationId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/RegistrationApi.Registration.V1.DenyTenantRegistrationRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/RegistrationApi.Registration.V1.DenyTenantRegistrationRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/RegistrationApi.Registration.V1.DenyTenantRegistrationRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/RegistrationApi.Registration.V1.DenyTenantRegistrationRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "Success"}, "400": {"description": "Bad Request", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/registrations/{registrationId}": {"delete": {"tags": ["Registrations"], "summary": "Delete a tenant's registration request", "operationId": "DeleteTenantRegistrationAsync", "parameters": [{"name": "registrationId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/RegistrationApi.Registration.V1.DeleteTenantRegistrationRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/RegistrationApi.Registration.V1.DeleteTenantRegistrationRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/RegistrationApi.Registration.V1.DeleteTenantRegistrationRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/RegistrationApi.Registration.V1.DeleteTenantRegistrationRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "204": {"description": "The resource was successfully deleted."}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "get": {"tags": ["Registrations"], "summary": "Retrieves a specific tenant registration using its primary key", "operationId": "GetTenantRegistrationByIdAsync", "parameters": [{"name": "registrationId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/RegistrationApi.Registration.V1.RegistrationProfileResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "put": {"tags": ["Registrations"], "summary": "Update a tenant's registration request", "operationId": "UpdateTenantRegistrationAsync", "parameters": [{"name": "registrationId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/RegistrationApi.Registration.V1.UpdateTenantRegistrationRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/RegistrationApi.Registration.V1.UpdateTenantRegistrationRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/RegistrationApi.Registration.V1.UpdateTenantRegistrationRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/RegistrationApi.Registration.V1.UpdateTenantRegistrationRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "Success", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/RegistrationApi.Registration.V1.TenantRegistrationUpdatedResponse"}}}}, "400": {"description": "Bad Request", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/registrations/applications": {"get": {"tags": ["Registrations"], "summary": "Gets a list of applications available for registration/onboarding", "operationId": "GetOnboardingApplicationsAsync", "parameters": [{"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ApplicationApi.Application.V1.PaginatedItemsResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/registrations/azure/subscriptions": {"get": {"tags": ["Registrations"], "summary": "Gets an Azure Subscription", "operationId": "GetAzureSubscriptionAsync", "parameters": [{"name": "subscriptionStoragePath", "in": "query", "description": "", "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/RegistrationApi.Registration.V1.AzureSubscription"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/registrations": {"get": {"tags": ["Registrations"], "summary": "Retrieves a list of registrations", "operationId": "GetAllTenantRegistrationsAsync", "parameters": [{"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/RegistrationApi.Registration.V1.RegistrationListResponsePaginatedItemsViewModel"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "post": {"tags": ["Registrations"], "summary": "Create a registration on behalf of a user/tenant", "operationId": "CreateTenantRegistrationAsync", "parameters": [{"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/RegistrationApi.Registration.V1.CreateTenantRegistrationRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/RegistrationApi.Registration.V1.CreateTenantRegistrationRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/RegistrationApi.Registration.V1.CreateTenantRegistrationRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/RegistrationApi.Registration.V1.CreateTenantRegistrationRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "201": {"description": "The resource was created. The location of the resource is available in the Location header of the response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/RegistrationApi.Registration.V1.TenantRegistrationCreatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/roles/{name}": {"delete": {"tags": ["Roles"], "summary": "Deletes a Role.", "operationId": "DeleteRole", "parameters": [{"name": "name", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "204": {"description": "The resource was successfully deleted."}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.Role.V1.RoleDeletedResponse"}}}}}}, "get": {"tags": ["Roles"], "summary": "Retrieves a Role by name.", "operationId": "GetRoleByName", "parameters": [{"name": "name", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.Role.V1.RoleResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}, "put": {"tags": ["Roles"], "summary": "Updates a Role.", "operationId": "UpdateRole", "parameters": [{"name": "name", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.Role.V1.UpdateRoleRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.Role.V1.UpdateRoleRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.Role.V1.UpdateRoleRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.Role.V1.UpdateRoleRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.Role.V1.RoleUpdatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/roles": {"get": {"tags": ["Roles"], "summary": "Retrieves a list of Roles.", "operationId": "GetRoles", "parameters": [{"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.Role.V1.GetRolesResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "post": {"tags": ["Roles"], "summary": "Creates a Role.", "operationId": "CreateRole", "parameters": [{"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.Role.V1.CreateRoleRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.Role.V1.CreateRoleRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.Role.V1.CreateRoleRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.Role.V1.CreateRoleRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "201": {"description": "The resource was created. The location of the resource is available in the Location header of the response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.Role.V1.RoleCreatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/applications/{applicationId}/launchersettings": {"get": {"tags": ["Tenants"], "summary": "Retrieves a specific application associated to a tenant", "operationId": "GetTenantApplicationLauncherSettingsByIdAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "applicationId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ApplicationApi.Application.V3.ApplicationLauncherSettingsResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "put": {"tags": ["Tenants"], "summary": "Update a tenant's application launcher settings", "operationId": "UpdateTenantApplicationLauncherSettingsAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "applicationId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/ApplicationApi.Application.V3.UpdateApplicationLauncherSettingsRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/ApplicationApi.Application.V3.UpdateApplicationLauncherSettingsRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/ApplicationApi.Application.V3.UpdateApplicationLauncherSettingsRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/ApplicationApi.Application.V3.UpdateApplicationLauncherSettingsRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ApplicationApi.Application.V3.ApplicationUpdatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/applications/{applicationId}/publish": {"put": {"tags": ["Tenants"], "summary": "Publish a tenant's application", "operationId": "PublishTenantApplicationAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "applicationId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ApplicationApi.Application.V3.ApplicationPublishedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/applications/{applicationId}": {"delete": {"tags": ["Tenants"], "summary": "Delete a tenant's application", "operationId": "DeleteTenantApplicationAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "applicationId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/ApplicationApi.Application.V3.DeleteApplicationRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/ApplicationApi.Application.V3.DeleteApplicationRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/ApplicationApi.Application.V3.DeleteApplicationRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/ApplicationApi.Application.V3.DeleteApplicationRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "204": {"description": "The resource was successfully deleted."}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "get": {"tags": ["Tenants"], "summary": "Retrieves a specific application associated to a tenant", "operationId": "GetTenantApplicationProfileByIdAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "applicationId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ApplicationApi.Application.V3.ApplicationProfileResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "put": {"tags": ["Tenants"], "summary": "Update a tenant's application profile", "operationId": "UpdateTenantApplicationProfileAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "applicationId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/ApplicationApi.Application.V3.UpdateApplicationProfileRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/ApplicationApi.Application.V3.UpdateApplicationProfileRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/ApplicationApi.Application.V3.UpdateApplicationProfileRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/ApplicationApi.Application.V3.UpdateApplicationProfileRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ApplicationApi.Application.V3.ApplicationUpdatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/applications": {"get": {"tags": ["Tenants"], "summary": "Retrieves a list of tenant applications", "operationId": "GetTenantApplicationsAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Responses.ApplicationListResponseWithSubscriptionPaginatedItemsViewModel"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "post": {"tags": ["Tenants"], "summary": "Create a tenant's application", "operationId": "CreateTenantApplicationAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/ApplicationApi.Application.V3.CreateApplicationRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/ApplicationApi.Application.V3.CreateApplicationRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/ApplicationApi.Application.V3.CreateApplicationRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/ApplicationApi.Application.V3.CreateApplicationRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "201": {"description": "The resource was created. The location of the resource is available in the Location header of the response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ApplicationApi.Application.V3.ApplicationCreatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/domains/{domainName}/verify": {"put": {"tags": ["Tenants"], "summary": "Verify a  tenant's domain", "operationId": "VerifyTenantDomainAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "domainName", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.VerifyDomainRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.VerifyDomainRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.VerifyDomainRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.VerifyDomainRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.DomainVerifiedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/subscriptions/{subscriptionId}/activate": {"put": {"tags": ["Tenants"], "summary": "Activate a Tenant Subscription", "operationId": "ActivateTenantSubscriptionAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "subscriptionId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.ActivateSubscriptionRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.ActivateSubscriptionRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.ActivateSubscriptionRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.ActivateSubscriptionRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.SubscriptionActivatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/subscriptions/{subscriptionId}/deactivate": {"put": {"tags": ["Tenants"], "summary": "Deactivate a Tenant Subscription", "operationId": "DeactivateTenantSubscriptionAsyncAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "subscriptionId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.DeactivateSubscriptionRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.DeactivateSubscriptionRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.DeactivateSubscriptionRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.DeactivateSubscriptionRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.SubscriptionDeactivatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/subscriptions/{subscriptionId}/reject": {"put": {"tags": ["Tenants"], "summary": "Reject a Tenant Subscription", "operationId": "RejectTenantSubscriptionAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "subscriptionId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.RejectSubscriptionRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.RejectSubscriptionRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.RejectSubscriptionRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.RejectSubscriptionRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.SubscriptionRejectedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/subscriptions/{subscriptionId}": {"delete": {"tags": ["Tenants"], "summary": "Deletes a Tenant Subscription", "operationId": "DeleteTenantSubscriptionAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "subscriptionId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.DeleteSubscriptionRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.DeleteSubscriptionRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.DeleteSubscriptionRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.DeleteSubscriptionRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "204": {"description": "The resource was successfully deleted."}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "get": {"tags": ["Tenants"], "summary": "Retrieves a specific Tenant Subscription", "operationId": "GetTenantSubscriptionProfileByIdAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "subscriptionId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.SubscriptionProfileResponse"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values."}}}, "put": {"tags": ["Tenants"], "summary": "Updates a Tenant Subscription", "operationId": "UpdateTenantSubscriptionAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "subscriptionId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.UpdateSubscriptionRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.UpdateSubscriptionRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.UpdateSubscriptionRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.UpdateSubscriptionRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.SubscriptionUpdatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/subscriptions": {"get": {"tags": ["Tenants"], "summary": "Retrieves a list of Tenant Subscriptions", "operationId": "GetAllTenantSubscriptionsAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.SubscriptionListResponsePaginatedItemsViewModel"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "post": {"tags": ["Tenants"], "summary": "Creates a new Tenant Subscription", "operationId": "CreateTenantSubscriptionAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.CreateSubscriptionRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.CreateSubscriptionRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.CreateSubscriptionRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.CreateSubscriptionRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "201": {"description": "The resource was created. The location of the resource is available in the Location header of the response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.SubscriptionCreatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}": {"delete": {"tags": ["Tenants"], "summary": "Deletes a tenant", "operationId": "DeleteTenantAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.DeleteTenantRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.DeleteTenantRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.DeleteTenantRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.DeleteTenantRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "204": {"description": "The resource was successfully deleted."}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "get": {"tags": ["Tenants"], "summary": "Retrieves a specific tenant", "operationId": "GetTenantByIdAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.TenantProfileResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "put": {"tags": ["Tenants"], "summary": "Updates a tenant", "operationId": "UpdateTenantAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.UpdateTenantRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.UpdateTenantRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.UpdateTenantRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.UpdateTenantRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.TenantUpdatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants": {"get": {"tags": ["Tenants"], "summary": "Retrieves a list of tenants", "operationId": "GetAllTenantsAsync", "parameters": [{"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.TenantListResponsePaginatedItemsViewModel"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "post": {"tags": ["Tenants"], "summary": "Creates a new tenant", "operationId": "CreateTenantAsync", "parameters": [{"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.CreateTenantRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.CreateTenantRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.CreateTenantRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.CreateTenantRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "201": {"description": "The resource was created. The location of the resource is available in the Location header of the response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.TenantCreatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/testResources/{testResourceId}": {"delete": {"tags": ["TestResources"], "operationId": "DeleteTestResource", "parameters": [{"name": "testResourceId", "in": "path", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "204": {"description": "No Content"}, "400": {"description": "Bad Request", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}}}, "get": {"tags": ["TestResources"], "operationId": "GetTestResourceById", "parameters": [{"name": "testResourceId", "in": "path", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "Success"}, "400": {"description": "Bad Request", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "Not Found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}, "put": {"tags": ["TestResources"], "operationId": "UpdateTestResource", "parameters": [{"name": "testResourceId", "in": "path", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "Success"}, "400": {"description": "Bad Request", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/testResources": {"get": {"tags": ["TestResources"], "operationId": "GetTestResources", "parameters": [{"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "Success"}, "400": {"description": "Bad Request", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}}}, "post": {"tags": ["TestResources"], "operationId": "CreateTestResource", "parameters": [{"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "201": {"description": "Created"}, "400": {"description": "Bad Request", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/users/{userId}/licenses/assignbulk": {"put": {"tags": ["Users - Licenses"], "summary": "Assigns one or more licenses to a user in the context of a specific tenant", "operationId": "AssignLicenseTenantUserBulkAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "userId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.AssignLicenseBulkRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.AssignLicenseBulkRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.AssignLicenseBulkRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.AssignLicenseBulkRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.LicenseAssignedBulkResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/users/{userId}/licenses/assign": {"put": {"tags": ["Users - Licenses"], "summary": "Assigns a license to a user in the context of a specific tenant", "operationId": "AssignLicenseTenantUserAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "userId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.AssignLicenseRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.AssignLicenseRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.AssignLicenseRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.AssignLicenseRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.LicenseAssignedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/users/{userId}/licenses/revokebulk": {"put": {"tags": ["Users - Licenses"], "summary": "Revokes one or more licenses from a user in the context of a specific tenant", "operationId": "RevokeLicenseTenantUserBulkAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "userId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.RevokeLicenseBulkRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.RevokeLicenseBulkRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.RevokeLicenseBulkRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.RevokeLicenseBulkRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.LicenseRevokedBulkResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/users/{userId}/licenses/revoke": {"put": {"tags": ["Users - Licenses"], "summary": "Revokes a license from a user in the context of a specific tenant", "operationId": "RevokeLicenseTenantUserAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "userId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.RevokeLicenseRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.RevokeLicenseRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.RevokeLicenseRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.RevokeLicenseRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.LicenseRevokedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/users/{userId}/licenses": {"get": {"tags": ["Users - Licenses"], "summary": "Retrieves a list of user licenses in the context of a specific tenant", "operationId": "GetAllTenantUserApplicationLicensesAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "userId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Responses.UserLicensePaginatedItemsViewModel"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/users/extensions/{extensionTypeId}": {"delete": {"tags": ["Users / Extensions"], "summary": "Deletes a UserExtensionType.", "operationId": "DeleteUserExtensionTypeAsync", "parameters": [{"name": "extensionTypeId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "204": {"description": "The resource was successfully deleted."}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}, "get": {"tags": ["Users / Extensions"], "summary": "Retrieves a UserExtensionType by ID.", "operationId": "GetUserExtensionTypeByIdAsync", "parameters": [{"name": "extensionTypeId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.UserExtensionType.V1.UserExtensionTypeResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}, "put": {"tags": ["Users / Extensions"], "summary": "Updates a UserExtensionType.", "operationId": "UpdateUserExtensionTypeAsync", "parameters": [{"name": "extensionTypeId", "in": "query", "description": "", "schema": {"type": "string"}}, {"name": "extensionTypeId", "in": "path", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.UserExtensionType.V1.UpdateUserExtensionTypeRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.UserExtensionType.V1.UpdateUserExtensionTypeRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.UserExtensionType.V1.UpdateUserExtensionTypeRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.UserExtensionType.V1.UpdateUserExtensionTypeRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.UserExtensionType.V1.UserExtensionTypeUpdatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/users/extensions": {"get": {"tags": ["Users / Extensions"], "summary": "Retrieves a list of UserExtensionTypes.", "operationId": "GetUserExtensionTypesAsync", "parameters": [{"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.UserExtensionType.V1.GetUserExtensionTypesResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "post": {"tags": ["Users / Extensions"], "summary": "Creates a UserExtensionType.", "operationId": "CreateUserExtensionTypeAsync", "parameters": [{"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.UserExtensionType.V1.CreateUserExtensionTypeRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.UserExtensionType.V1.CreateUserExtensionTypeRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.UserExtensionType.V1.CreateUserExtensionTypeRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.UserExtensionType.V1.CreateUserExtensionTypeRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "201": {"description": "The resource was created. The location of the resource is available in the Location header of the response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.UserExtensionType.V1.UserExtensionTypeCreatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/users/{email}/status": {"get": {"tags": ["Users"], "summary": "Searches a user by email and retrieves it's minimal information and status.", "operationId": "GetUserTenantStatusProfile", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "email", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.UserTenantStatusProfile"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}}, "/tenants/{tenantId}/users/{userId}/disableuserbrowserdebug": {"put": {"tags": ["Users"], "summary": "Disable browser debug for a tenant user", "operationId": "DisableTenantUserBrowserDebugAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "userId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.DisableUserBrowserDebugRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.DisableUserBrowserDebugRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.DisableUserBrowserDebugRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.DisableUserBrowserDebugRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.UserBrowserDebugDisabledResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/users/{userId}/enableuserbrowserdebug": {"put": {"tags": ["Users"], "summary": "Enable browser debug for a tenant user", "operationId": "EnableTenantUserBrowserDebugAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "userId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.EnableUserBrowserDebugRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.EnableUserBrowserDebugRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.EnableUserBrowserDebugRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.EnableUserBrowserDebugRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.UserBrowserDebugEnabledResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/users/{userId}": {"delete": {"tags": ["Users"], "summary": "Deletes a user", "operationId": "DeleteTenantUserAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "userId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "204": {"description": "The resource was successfully deleted."}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "get": {"tags": ["Users"], "summary": "Retrieves a specific tenant's user", "operationId": "GetTenantUserProfileByIdAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "userId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.UserProfileResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "put": {"tags": ["Users"], "summary": "Creates or Updates a tenant's user", "operationId": "UpdateTenantUserAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "userId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.UpdateUserRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.UpdateUserRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.UpdateUserRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.UpdateUserRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.UserUpdatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/tenants/{tenantId}/users": {"get": {"tags": ["Users"], "summary": "Retrieves a list of tenant users", "operationId": "GetAllTenantUsersAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.UserListResponsePaginatedItemsViewModel"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "post": {"tags": ["Users"], "summary": "Creates a new user", "operationId": "CreateLocalTenantUserAsync", "parameters": [{"name": "tenantId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.CreateLocalUserRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.CreateLocalUserRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.CreateLocalUserRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.CreateLocalUserRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "201": {"description": "The resource was created. The location of the resource is available in the Location header of the response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.LocalUserCreatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/users/{userId}/disableuserbrowserdebug": {"put": {"tags": ["Users"], "summary": "Disable browser debug for a user", "operationId": "DisableUserBrowserDebugAsync", "parameters": [{"name": "userId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.DisableUserBrowserDebugRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.DisableUserBrowserDebugRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.DisableUserBrowserDebugRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.DisableUserBrowserDebugRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.UserBrowserDebugDisabledResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/users/{userId}/enableuserbrowserdebug": {"put": {"tags": ["Users"], "summary": "Enable browser debug for a user", "operationId": "EnableUserBrowserDebugAsync", "parameters": [{"name": "userId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.EnableUserBrowserDebugRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.EnableUserBrowserDebugRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.EnableUserBrowserDebugRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.EnableUserBrowserDebugRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.UserBrowserDebugEnabledResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/users/{userId}": {"delete": {"tags": ["Users"], "summary": "Deletes a user", "operationId": "DeleteUserAsync", "parameters": [{"name": "userId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "204": {"description": "The resource was successfully deleted."}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "get": {"tags": ["Users"], "summary": "Retrieves a specific user", "operationId": "GetUserProfileByIdAsync", "parameters": [{"name": "userId", "in": "path", "description": "", "required": true, "schema": {"type": "string"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.UserProfileResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "put": {"tags": ["Users"], "summary": "Creates or Updates a user", "operationId": "UpdateUserAsync", "parameters": [{"name": "userId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.UpdateUserRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.UpdateUserRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.UpdateUserRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.UpdateUserRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.UserUpdatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/users": {"get": {"tags": ["Users"], "summary": "Retrieves a list of users", "operationId": "GetAllUsersAsync", "parameters": [{"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.UserListResponsePaginatedItemsViewModel"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "post": {"tags": ["Users"], "summary": "Creates a new user", "operationId": "CreateLocalUserAsync", "parameters": [{"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.CreateLocalUserRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.CreateLocalUserRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.CreateLocalUserRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.CreateLocalUserRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "201": {"description": "The resource was created. The location of the resource is available in the Location header of the response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IdentityApi.User.V1.LocalUserCreatedResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/webhooks/{webhookId}": {"delete": {"tags": ["Webhooks"], "summary": "Deletes a Webhook.", "operationId": "DeleteWebhookAsync", "parameters": [{"name": "webhookId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Webhook.V1.WebhookIdResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "get": {"tags": ["Webhooks"], "summary": "Retrieves a Webhook by ID.", "operationId": "GetWebhookByIdAsync", "parameters": [{"name": "webhookId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Webhook.V1.WebhookResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}, "404": {"description": "The resource could not be found.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}}}, "put": {"tags": ["Webhooks"], "summary": "Updates a Webhook.", "operationId": "UpdateWebhookAsync", "parameters": [{"name": "webhookId", "in": "path", "description": "", "required": true, "schema": {"type": "string", "format": "uuid"}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/TenantApi.Webhook.V1.UpdateWebhookRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Webhook.V1.UpdateWebhookRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Webhook.V1.UpdateWebhookRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/TenantApi.Webhook.V1.UpdateWebhookRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Webhook.V1.WebhookIdResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/webhooks/events": {"get": {"tags": ["Webhooks"], "summary": "Retrieves a list of webhook events.", "operationId": "GetAllWebhookSubscriptionsAsync", "parameters": [{"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Webhook.V1.WebhookEventsResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}, "/webhooks": {"get": {"tags": ["Webhooks"], "summary": "Retrieves a list of Webhooks.", "operationId": "GetAllWebhooksAsync", "parameters": [{"name": "pageIndex", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 0}}, {"name": "pageSize", "in": "query", "description": "", "schema": {"type": "integer", "format": "int32", "default": 10}}, {"name": "orderBy", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "filter", "in": "query", "description": "", "schema": {"type": "string", "default": ""}}, {"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "200": {"description": "The requested resource was successfully retrieved.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Webhook.V1.PaginatedItemsResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}, "post": {"tags": ["Webhooks"], "summary": "Creates a Webhook.", "operationId": "CreateWebhookAsync", "parameters": [{"name": "api-version", "in": "query", "schema": {"type": "string"}}, {"name": "X-version", "in": "header", "schema": {"type": "string"}}], "requestBody": {"description": "", "content": {"application/json-patch+json": {"schema": {"$ref": "#/components/schemas/TenantApi.Webhook.V1.CreateWebhookRequest"}}, "application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Webhook.V1.CreateWebhookRequest"}}, "text/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Webhook.V1.CreateWebhookRequest"}}, "application/*+json": {"schema": {"$ref": "#/components/schemas/TenantApi.Webhook.V1.CreateWebhookRequest"}}}}, "responses": {"401": {"description": "Unauthorized. The request requires authentication. The OAuth bearer token was either not provided or is invalid. The operation may succeed once authentication has been successfully completed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "403": {"description": "Forbidden. The request cannot be completed in the current authorization context. Contact your administrator if you believe this operation should be allowed.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "500": {"description": "An unhandled error occurred on the server.See the response body for details.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EdGraph.Common.Errors.Core.ProblemDetails"}}}}, "201": {"description": "The resource was created. The location of the resource is available in the Location header of the response.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TenantApi.Webhook.V1.WebhookIdResponse"}}}}, "400": {"description": "Bad Request. The request was invalid and cannot be completed. See the response body for specific validation errors. This will typically be an issue with the query parameters or the request body values.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"}}}}}}}}, "components": {"schemas": {"ApplicationApi.Application.V1.ApplicationListResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "applicationId": {"type": "string", "nullable": true}, "applicationName": {"type": "string", "nullable": true}, "version": {"type": "string", "nullable": true}, "tags": {"type": "string", "nullable": true}, "groups": {"type": "string", "nullable": true}, "applicationStatus": {"$ref": "#/components/schemas/ApplicationApi.Application.V1.ApplicationStatus"}, "isInternal": {"type": "boolean"}, "roles": {"type": "array", "items": {"$ref": "#/components/schemas/ApplicationApi.Application.V1.Role"}, "nullable": true, "readOnly": true}, "createdBy": {"type": "string", "nullable": true}, "createdDateTime": {"type": "string", "nullable": true}, "lastModifiedBy": {"type": "string", "nullable": true}, "lastModifiedDateTime": {"type": "string", "nullable": true}}, "additionalProperties": false}, "ApplicationApi.Application.V1.ApplicationStatus": {"enum": ["Unknown", "Draft", "Published"], "type": "string"}, "ApplicationApi.Application.V1.PaginatedItemsResponse": {"type": "object", "properties": {"pageIndex": {"type": "integer", "format": "int32"}, "pageSize": {"type": "integer", "format": "int32"}, "count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/ApplicationApi.Application.V1.ApplicationListResponse"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "ApplicationApi.Application.V1.Role": {"type": "object", "properties": {"roleName": {"type": "string", "nullable": true}, "isDefault": {"type": "boolean"}}, "additionalProperties": false}, "ApplicationApi.Application.V3.ApplicationCreatedResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "applicationId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "ApplicationApi.Application.V3.ApplicationLauncherSettingsResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "applicationId": {"type": "string", "nullable": true}, "applicationDescription": {"type": "string", "nullable": true}, "lightIconUrl": {"type": "string", "nullable": true}, "darkIconUrl": {"type": "string", "nullable": true}, "lightBackgroundTileUrl": {"type": "string", "nullable": true}, "darkBackgroundTileUrl": {"type": "string", "nullable": true}, "lightOverlayTileUrl": {"type": "string", "nullable": true}, "darkOverlayTileUrl": {"type": "string", "nullable": true}, "documentationUrl": {"type": "string", "nullable": true}, "showInAppLauncher": {"type": "boolean"}, "showInQuickLauncher": {"type": "boolean"}}, "additionalProperties": false}, "ApplicationApi.Application.V3.ApplicationListResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "applicationId": {"type": "string", "nullable": true}, "applicationName": {"type": "string", "nullable": true}, "version": {"type": "string", "nullable": true}, "tags": {"type": "string", "nullable": true}, "groups": {"type": "string", "nullable": true}, "applicationStatus": {"$ref": "#/components/schemas/ApplicationApi.Application.V3.ApplicationStatus"}, "roles": {"type": "array", "items": {"$ref": "#/components/schemas/ApplicationApi.Application.V3.Role"}, "nullable": true, "readOnly": true}, "createdBy": {"type": "string", "nullable": true}, "createdDateTime": {"type": "string", "nullable": true}, "lastModifiedBy": {"type": "string", "nullable": true}, "lastModifiedDateTime": {"type": "string", "nullable": true}, "subscriptionType": {"$ref": "#/components/schemas/ApplicationApi.Application.V3.ApplicationSubscriptionType"}, "documentationUrl": {"type": "string", "nullable": true}}, "additionalProperties": false}, "ApplicationApi.Application.V3.ApplicationProfileResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "applicationId": {"type": "string", "nullable": true}, "applicationType": {"$ref": "#/components/schemas/ApplicationApi.Application.V3.ApplicationType"}, "applicationName": {"type": "string", "nullable": true}, "applicationUri": {"type": "string", "nullable": true}, "version": {"type": "string", "nullable": true}, "tooltipText": {"type": "string", "nullable": true}, "applicationDescription": {"type": "string", "nullable": true}, "tags": {"type": "string", "nullable": true}, "groups": {"type": "string", "nullable": true}, "applicationStatus": {"$ref": "#/components/schemas/ApplicationApi.Application.V3.ApplicationStatus"}, "openInNewWindow": {"type": "boolean"}, "roles": {"type": "array", "items": {"$ref": "#/components/schemas/ApplicationApi.Application.V3.Role"}, "nullable": true, "readOnly": true}, "createdBy": {"type": "string", "nullable": true}, "createdDateTime": {"type": "string", "nullable": true}, "lastModifiedBy": {"type": "string", "nullable": true}, "lastModifiedDateTime": {"type": "string", "nullable": true}, "clientId": {"type": "string", "nullable": true}, "subscriptionType": {"$ref": "#/components/schemas/ApplicationApi.Application.V3.ApplicationSubscriptionType"}}, "additionalProperties": false}, "ApplicationApi.Application.V3.ApplicationPublishedResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "applicationId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "ApplicationApi.Application.V3.ApplicationStatus": {"enum": ["Unknown", "Draft", "Published"], "type": "string"}, "ApplicationApi.Application.V3.ApplicationSubscriptionType": {"enum": ["Auto", "Manual", "None"], "type": "string"}, "ApplicationApi.Application.V3.ApplicationType": {"enum": ["Unknown", "SSO", "Link"], "type": "string"}, "ApplicationApi.Application.V3.ApplicationUpdatedResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "applicationId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "ApplicationApi.Application.V3.CreateApplicationRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "applicationId": {"type": "string", "nullable": true}, "applicationType": {"$ref": "#/components/schemas/ApplicationApi.Application.V3.ApplicationType"}, "applicationName": {"type": "string", "nullable": true}, "applicationUri": {"type": "string", "nullable": true}, "version": {"type": "string", "nullable": true}, "tooltipText": {"type": "string", "nullable": true}, "applicationDescription": {"type": "string", "nullable": true}, "tags": {"type": "string", "nullable": true}, "groups": {"type": "string", "nullable": true}, "lightIconUrl": {"type": "string", "nullable": true}, "darkIconUrl": {"type": "string", "nullable": true}, "lightBackgroundTileUrl": {"type": "string", "nullable": true}, "darkBackgroundTileUrl": {"type": "string", "nullable": true}, "lightOverlayTileUrl": {"type": "string", "nullable": true}, "darkOverlayTileUrl": {"type": "string", "nullable": true}, "showInAppLauncher": {"type": "boolean"}, "showInQuickLauncher": {"type": "boolean"}, "openInNewWindow": {"type": "boolean"}, "roles": {"type": "array", "items": {"$ref": "#/components/schemas/ApplicationApi.Application.V3.Role"}, "nullable": true, "readOnly": true}, "documentationUrl": {"type": "string", "nullable": true}, "subscriptionType": {"$ref": "#/components/schemas/ApplicationApi.Application.V3.ApplicationSubscriptionType"}}, "additionalProperties": false}, "ApplicationApi.Application.V3.DeleteApplicationRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "applicationId": {"type": "string", "nullable": true}, "reason": {"type": "string", "nullable": true}}, "additionalProperties": false}, "ApplicationApi.Application.V3.MigrateUpRequest": {"type": "object", "properties": {"migrationCode": {"type": "string", "nullable": true}, "continueOnErrors": {"type": "boolean"}}, "additionalProperties": false}, "ApplicationApi.Application.V3.PaginatedItemsResponse": {"type": "object", "properties": {"pageIndex": {"type": "integer", "format": "int32"}, "pageSize": {"type": "integer", "format": "int32"}, "count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/ApplicationApi.Application.V3.ApplicationListResponse"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "ApplicationApi.Application.V3.Role": {"type": "object", "properties": {"roleName": {"type": "string", "nullable": true}, "isDefault": {"type": "boolean"}, "isAvailableForTenants": {"type": "boolean"}}, "additionalProperties": false}, "ApplicationApi.Application.V3.UpdateApplicationLauncherSettingsRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "applicationId": {"type": "string", "nullable": true}, "applicationDescription": {"type": "string", "nullable": true}, "lightIconUrl": {"type": "string", "nullable": true}, "darkIconUrl": {"type": "string", "nullable": true}, "lightBackgroundTileUrl": {"type": "string", "nullable": true}, "darkBackgroundTileUrl": {"type": "string", "nullable": true}, "lightOverlayTileUrl": {"type": "string", "nullable": true}, "darkOverlayTileUrl": {"type": "string", "nullable": true}, "documentationUrl": {"type": "string", "nullable": true}, "showInAppLauncher": {"type": "boolean"}, "showInQuickLauncher": {"type": "boolean"}, "subscriptionType": {"$ref": "#/components/schemas/ApplicationApi.Application.V3.ApplicationSubscriptionType"}}, "additionalProperties": false}, "ApplicationApi.Application.V3.UpdateApplicationProfileRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "applicationId": {"type": "string", "nullable": true}, "applicationType": {"$ref": "#/components/schemas/ApplicationApi.Application.V3.ApplicationType"}, "applicationName": {"type": "string", "nullable": true}, "applicationUri": {"type": "string", "nullable": true}, "version": {"type": "string", "nullable": true}, "tooltipText": {"type": "string", "nullable": true}, "applicationDescription": {"type": "string", "nullable": true}, "tags": {"type": "string", "nullable": true}, "groups": {"type": "string", "nullable": true}, "openInNewWindow": {"type": "boolean"}, "roles": {"type": "array", "items": {"$ref": "#/components/schemas/ApplicationApi.Application.V3.Role"}, "nullable": true, "readOnly": true}, "documentationUrl": {"type": "string", "nullable": true}, "subscriptionType": {"$ref": "#/components/schemas/ApplicationApi.Application.V3.ApplicationSubscriptionType"}}, "additionalProperties": false}, "DataSyncApi.JobType.V1.CreateJobTypeRequest": {"type": "object", "properties": {"jobTypeId": {"type": "string", "nullable": true}, "name": {"type": "string", "nullable": true}, "description": {"type": "string", "nullable": true}, "jobPoints": {"type": "integer", "format": "int32"}, "hasChildJobs": {"type": "boolean"}, "childJobField": {"type": "string", "nullable": true}, "sourceConnectionTypeId": {"type": "string", "nullable": true}, "destinationConnectionTypeId": {"type": "string", "nullable": true}, "sourceConnectionRequired": {"type": "boolean"}, "destinationConnectionRequired": {"type": "boolean"}, "jobMetadataFields": {"type": "array", "items": {"$ref": "#/components/schemas/DataSyncApi.JobType.V1.JobMetadataField"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "DataSyncApi.JobType.V1.CreateProfileRequest": {"type": "object", "properties": {"jobTypeId": {"type": "string", "nullable": true}, "profileId": {"type": "string", "nullable": true}, "name": {"type": "string", "nullable": true}, "description": {"type": "string", "nullable": true}, "actorType": {"type": "string", "nullable": true}}, "additionalProperties": false}, "DataSyncApi.JobType.V1.DeleteJobTypeRequest": {"type": "object", "properties": {"jobTypeId": {"type": "string", "nullable": true}, "reason": {"type": "string", "nullable": true}}, "additionalProperties": false}, "DataSyncApi.JobType.V1.DeleteProfileRequest": {"type": "object", "properties": {"jobTypeId": {"type": "string", "nullable": true}, "profileId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "DataSyncApi.JobType.V1.JobMetadataField": {"type": "object", "properties": {"tab": {"type": "string", "nullable": true}, "code": {"type": "string", "nullable": true}, "label": {"type": "string", "nullable": true}, "validation": {"type": "string", "nullable": true}, "order": {"type": "string", "nullable": true}, "display": {"type": "boolean"}, "defaultValue": {"type": "string", "nullable": true}, "type": {"type": "string", "nullable": true}, "values": {"type": "string", "nullable": true}, "api": {"type": "string", "nullable": true}, "isSecret": {"type": "boolean"}}, "additionalProperties": false}, "DataSyncApi.JobType.V1.JobTypeCreatedResponse": {"type": "object", "properties": {"jobTypeId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "DataSyncApi.JobType.V1.JobTypeListResponse": {"type": "object", "properties": {"jobTypeId": {"type": "string", "nullable": true}, "name": {"type": "string", "nullable": true}, "sourceConnectionTypeId": {"type": "string", "nullable": true}, "destinationConnectionTypeId": {"type": "string", "nullable": true}, "sourceConnectionRequired": {"type": "boolean"}, "destinationConnectionRequired": {"type": "boolean"}, "profiles": {"type": "array", "items": {"$ref": "#/components/schemas/DataSyncApi.JobType.V1.Profile"}, "nullable": true, "readOnly": true}, "createdBy": {"type": "string", "nullable": true}, "createdDateTime": {"type": "string", "nullable": true}, "lastModifiedBy": {"type": "string", "nullable": true}, "lastModifiedDateTime": {"type": "string", "nullable": true}}, "additionalProperties": false}, "DataSyncApi.JobType.V1.JobTypeListResponsePaginatedItemsViewModel": {"type": "object", "properties": {"pageIndex": {"type": "integer", "format": "int32"}, "pageSize": {"type": "integer", "format": "int32"}, "count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/DataSyncApi.JobType.V1.JobTypeListResponse"}, "nullable": true}}, "additionalProperties": false}, "DataSyncApi.JobType.V1.JobTypeProfileResponse": {"type": "object", "properties": {"jobTypeId": {"type": "string", "nullable": true}, "name": {"type": "string", "nullable": true}, "description": {"type": "string", "nullable": true}, "jobPoints": {"type": "integer", "format": "int32"}, "hasChildJobs": {"type": "boolean"}, "childJobField": {"type": "string", "nullable": true}, "sourceConnectionTypeId": {"type": "string", "nullable": true}, "destinationConnectionTypeId": {"type": "string", "nullable": true}, "sourceConnectionRequired": {"type": "boolean"}, "destinationConnectionRequired": {"type": "boolean"}, "jobMetadataFields": {"type": "array", "items": {"$ref": "#/components/schemas/DataSyncApi.JobType.V1.JobMetadataField"}, "nullable": true, "readOnly": true}, "profiles": {"type": "array", "items": {"$ref": "#/components/schemas/DataSyncApi.JobType.V1.Profile"}, "nullable": true, "readOnly": true}, "createdBy": {"type": "string", "nullable": true}, "createdDateTime": {"type": "string", "nullable": true}, "lastModifiedBy": {"type": "string", "nullable": true}, "lastModifiedDateTime": {"type": "string", "nullable": true}}, "additionalProperties": false}, "DataSyncApi.JobType.V1.JobTypeUpdatedResponse": {"type": "object", "properties": {"jobTypeId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "DataSyncApi.JobType.V1.Profile": {"type": "object", "properties": {"jobTypeId": {"type": "string", "nullable": true}, "profileId": {"type": "string", "nullable": true}, "name": {"type": "string", "nullable": true}, "description": {"type": "string", "nullable": true}, "actorType": {"type": "string", "nullable": true}}, "additionalProperties": false}, "DataSyncApi.JobType.V1.ProfileCreatedResponse": {"type": "object", "properties": {"jobTypeId": {"type": "string", "nullable": true}, "profileId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "DataSyncApi.JobType.V1.ProfileUpdatedResponse": {"type": "object", "properties": {"jobTypeId": {"type": "string", "nullable": true}, "profileId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "DataSyncApi.JobType.V1.UpdateJobTypeRequest": {"type": "object", "properties": {"jobTypeId": {"type": "string", "nullable": true}, "name": {"type": "string", "nullable": true}, "description": {"type": "string", "nullable": true}, "jobPoints": {"type": "integer", "format": "int32"}, "hasChildJobs": {"type": "boolean"}, "childJobField": {"type": "string", "nullable": true}, "sourceConnectionTypeId": {"type": "string", "nullable": true}, "destinationConnectionTypeId": {"type": "string", "nullable": true}, "sourceConnectionRequired": {"type": "boolean"}, "destinationConnectionRequired": {"type": "boolean"}, "jobMetadataFields": {"type": "array", "items": {"$ref": "#/components/schemas/DataSyncApi.JobType.V1.JobMetadataField"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "DataSyncApi.JobType.V1.UpdateProfileRequest": {"type": "object", "properties": {"jobTypeId": {"type": "string", "nullable": true}, "profileId": {"type": "string", "nullable": true}, "name": {"type": "string", "nullable": true}, "description": {"type": "string", "nullable": true}, "actorType": {"type": "string", "nullable": true}}, "additionalProperties": false}, "DataSyncApi.Provider.V1.ConnectionMetadataField": {"type": "object", "properties": {"tab": {"type": "string", "nullable": true}, "code": {"type": "string", "nullable": true}, "label": {"type": "string", "nullable": true}, "validation": {"type": "string", "nullable": true}, "order": {"type": "string", "nullable": true}, "display": {"type": "boolean"}, "defaultValue": {"type": "string", "nullable": true}, "type": {"type": "string", "nullable": true}, "values": {"type": "string", "nullable": true}, "api": {"type": "string", "nullable": true}, "isSecret": {"type": "boolean"}}, "additionalProperties": false}, "DataSyncApi.Provider.V1.ConnectionType": {"type": "object", "properties": {"providerId": {"type": "string", "nullable": true}, "connectionTypeId": {"type": "string", "nullable": true}, "name": {"type": "string", "nullable": true}, "description": {"type": "string", "nullable": true}, "documentationUri": {"type": "string", "nullable": true}, "connectionMetadataFields": {"type": "array", "items": {"$ref": "#/components/schemas/DataSyncApi.Provider.V1.ConnectionMetadataField"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "DataSyncApi.Provider.V1.ConnectionTypeCreatedResponse": {"type": "object", "properties": {"providerId": {"type": "string", "nullable": true}, "connectionTypeId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "DataSyncApi.Provider.V1.ConnectionTypeUpdatedResponse": {"type": "object", "properties": {"providerId": {"type": "string", "nullable": true}, "connectionTypeId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "DataSyncApi.Provider.V1.CreateConnectionTypeRequest": {"type": "object", "properties": {"providerId": {"type": "string", "nullable": true}, "connectionTypeId": {"type": "string", "nullable": true}, "name": {"type": "string", "nullable": true}, "description": {"type": "string", "nullable": true}, "documentationUri": {"type": "string", "nullable": true}, "connectionMetadataFields": {"type": "array", "items": {"$ref": "#/components/schemas/DataSyncApi.Provider.V1.ConnectionMetadataField"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "DataSyncApi.Provider.V1.CreateProviderRequest": {"type": "object", "properties": {"providerId": {"type": "string", "nullable": true}, "name": {"type": "string", "nullable": true}, "description": {"type": "string", "nullable": true}, "iconUri": {"type": "string", "nullable": true}}, "additionalProperties": false}, "DataSyncApi.Provider.V1.DeleteConnectionTypeRequest": {"type": "object", "properties": {"providerId": {"type": "string", "nullable": true}, "connectionTypeId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "DataSyncApi.Provider.V1.DeleteProviderRequest": {"type": "object", "properties": {"providerId": {"type": "string", "nullable": true}, "reason": {"type": "string", "nullable": true}}, "additionalProperties": false}, "DataSyncApi.Provider.V1.ProviderCreatedResponse": {"type": "object", "properties": {"providerId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "DataSyncApi.Provider.V1.ProviderListResponse": {"type": "object", "properties": {"providerId": {"type": "string", "nullable": true}, "name": {"type": "string", "nullable": true}, "description": {"type": "string", "nullable": true}, "iconUri": {"type": "string", "nullable": true}, "connectionTypes": {"type": "array", "items": {"$ref": "#/components/schemas/DataSyncApi.Provider.V1.ConnectionType"}, "nullable": true, "readOnly": true}, "createdBy": {"type": "string", "nullable": true}, "createdDateTime": {"type": "string", "nullable": true}, "lastModifiedBy": {"type": "string", "nullable": true}, "lastModifiedDateTime": {"type": "string", "nullable": true}}, "additionalProperties": false}, "DataSyncApi.Provider.V1.ProviderListResponsePaginatedItemsViewModel": {"type": "object", "properties": {"pageIndex": {"type": "integer", "format": "int32"}, "pageSize": {"type": "integer", "format": "int32"}, "count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/DataSyncApi.Provider.V1.ProviderListResponse"}, "nullable": true}}, "additionalProperties": false}, "DataSyncApi.Provider.V1.ProviderProfileResponse": {"type": "object", "properties": {"providerId": {"type": "string", "nullable": true}, "name": {"type": "string", "nullable": true}, "description": {"type": "string", "nullable": true}, "iconUri": {"type": "string", "nullable": true}, "connectionTypes": {"type": "array", "items": {"$ref": "#/components/schemas/DataSyncApi.Provider.V1.ConnectionType"}, "nullable": true, "readOnly": true}, "createdBy": {"type": "string", "nullable": true}, "createdDateTime": {"type": "string", "nullable": true}, "lastModifiedBy": {"type": "string", "nullable": true}, "lastModifiedDateTime": {"type": "string", "nullable": true}}, "additionalProperties": false}, "DataSyncApi.Provider.V1.ProviderUpdatedResponse": {"type": "object", "properties": {"providerId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "DataSyncApi.Provider.V1.UpdateConnectionTypeRequest": {"type": "object", "properties": {"providerId": {"type": "string", "nullable": true}, "connectionTypeId": {"type": "string", "nullable": true}, "name": {"type": "string", "nullable": true}, "description": {"type": "string", "nullable": true}, "documentationUri": {"type": "string", "nullable": true}, "connectionMetadataFields": {"type": "array", "items": {"$ref": "#/components/schemas/DataSyncApi.Provider.V1.ConnectionMetadataField"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "DataSyncApi.Provider.V1.UpdateProviderRequest": {"type": "object", "properties": {"providerId": {"type": "string", "nullable": true}, "name": {"type": "string", "nullable": true}, "description": {"type": "string", "nullable": true}, "iconUri": {"type": "string", "nullable": true}}, "additionalProperties": false}, "EdGraph.Common.Errors.Core.ProblemDetails": {"type": "object", "properties": {"type": {"type": "string", "nullable": true}, "status": {"type": "integer", "format": "int32"}, "title": {"type": "string", "nullable": true}, "details": {"type": "string", "nullable": true}, "instance": {"type": "string", "nullable": true}, "extensions": {"type": "object", "additionalProperties": {"nullable": true}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.AssignLicenseRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "subscriptionId": {"type": "string", "nullable": true}, "applicationId": {"type": "string", "nullable": true}, "userId": {"type": "string", "nullable": true}, "roles": {"type": "array", "items": {"type": "string"}, "nullable": true}}, "additionalProperties": false}, "EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.CreateApiResourceRequest": {"type": "object", "properties": {"name": {"type": "string", "description": "The unique name of the resource.", "nullable": true}, "displayName": {"type": "string", "description": "Display name of the resource.", "nullable": true}, "description": {"type": "string", "description": "Description of the resource.", "nullable": true}, "enabled": {"type": "boolean", "description": "Indicates if this resource is enabled. Defaults to true."}}, "additionalProperties": false}, "EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.CreateIdentityResourceRequest": {"type": "object", "properties": {"name": {"type": "string", "description": "The unique name of the resource.", "nullable": true}, "displayName": {"type": "string", "description": "Display name of the resource.", "nullable": true}, "description": {"type": "string", "description": "Description of the resource.", "nullable": true}, "showInDiscoveryDocument": {"type": "boolean", "description": "Specifies whether this scope is shown in the discovery document. Defaults to true."}, "enabled": {"type": "boolean", "description": "Indicates if this resource is enabled. Defaults to true."}}, "additionalProperties": false}, "EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.SendInvitationRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "email": {"type": "string", "nullable": true}, "firstName": {"type": "string", "nullable": true}, "lastName": {"type": "string", "nullable": true}, "role": {"type": "string", "nullable": true}, "sendEmail": {"type": "boolean"}, "assignLicenseRequests": {"type": "array", "items": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.AssignLicenseRequest"}, "nullable": true}}, "additionalProperties": false}, "EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.UpdateApiResourceRequest": {"type": "object", "properties": {"id": {"type": "string", "description": "The primary key of the resource.", "format": "uuid"}, "name": {"type": "string", "description": "The unique name of the resource.", "nullable": true}, "displayName": {"type": "string", "description": "Display name of the resource.", "nullable": true}, "description": {"type": "string", "description": "Description of the resource.", "nullable": true}, "enabled": {"type": "boolean", "description": "Indicates if this resource is enabled. Defaults to true."}}, "additionalProperties": false}, "EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Requests.UpdateIdentityResourceRequest": {"type": "object", "properties": {"id": {"type": "string", "description": "The primary key of the resource.", "format": "uuid"}, "name": {"type": "string", "description": "The unique name of the resource.", "nullable": true}, "displayName": {"type": "string", "description": "Display name of the resource.", "nullable": true}, "description": {"type": "string", "description": "Description of the resource.", "nullable": true}, "showInDiscoveryDocument": {"type": "boolean", "description": "Specifies whether this scope is shown in the discovery document. Defaults to true."}, "enabled": {"type": "boolean", "description": "Indicates if this resource is enabled. Defaults to true."}}, "additionalProperties": false}, "EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Responses.ApiResourceResponse": {"type": "object", "properties": {"id": {"type": "string", "description": "The primary key of the resource.", "format": "uuid"}, "name": {"type": "string", "description": "The unique name of the resource.", "nullable": true}, "displayName": {"type": "string", "description": "Display name of the resource.", "nullable": true}, "description": {"type": "string", "description": "Description of the resource.", "nullable": true}, "enabled": {"type": "boolean", "description": "Indicates if this resource is enabled. Defaults to true."}}, "additionalProperties": false}, "EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Responses.ApiResourceResponsePaginatedItemsViewModel": {"type": "object", "properties": {"pageIndex": {"type": "integer", "format": "int32"}, "pageSize": {"type": "integer", "format": "int32"}, "count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Responses.ApiResourceResponse"}, "nullable": true}}, "additionalProperties": false}, "EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Responses.ApplicationListResponseWithSubscription": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "applicationTenantId": {"type": "string", "nullable": true}, "applicationId": {"type": "string", "nullable": true}, "applicationName": {"type": "string", "nullable": true}, "version": {"type": "string", "nullable": true}, "tags": {"type": "string", "nullable": true}, "groups": {"type": "string", "nullable": true}, "applicationStatus": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Responses.ApplicationStatus"}, "isInternal": {"type": "boolean"}, "roles": {"type": "array", "items": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Responses.Role"}, "nullable": true}, "isTenantSubscribed": {"type": "boolean"}, "isDefault": {"type": "boolean"}, "createdBy": {"type": "string", "nullable": true}, "createdDateTime": {"type": "string", "nullable": true}, "lastModifiedBy": {"type": "string", "nullable": true}, "lastModifiedDateTime": {"type": "string", "nullable": true}}, "additionalProperties": false}, "EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Responses.ApplicationListResponseWithSubscriptionPaginatedItemsViewModel": {"type": "object", "properties": {"pageIndex": {"type": "integer", "format": "int32"}, "pageSize": {"type": "integer", "format": "int32"}, "count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Responses.ApplicationListResponseWithSubscription"}, "nullable": true}}, "additionalProperties": false}, "EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Responses.ApplicationRole": {"type": "object", "properties": {"role": {"type": "string", "description": "The role associated with the application", "nullable": true}, "isAssigned": {"type": "boolean", "description": "Indicates if the user is assigned license for this application"}}, "additionalProperties": false}, "EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Responses.ApplicationStatus": {"enum": ["Unknown", "Draft", "Published"], "type": "string"}, "EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Responses.DomainListResponseDto": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "domainName": {"type": "string", "nullable": true}, "domainStatus": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.DomainStatus"}, "createdBy": {"type": "string", "nullable": true}, "createdDateTime": {"type": "string", "nullable": true}, "lastModifiedBy": {"type": "string", "nullable": true}, "lastModifiedDateTime": {"type": "string", "nullable": true}}, "additionalProperties": false}, "EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Responses.DomainListResponseDtoPaginatedItemsViewModel": {"type": "object", "properties": {"pageIndex": {"type": "integer", "format": "int32"}, "pageSize": {"type": "integer", "format": "int32"}, "count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Responses.DomainListResponseDto"}, "nullable": true}}, "additionalProperties": false}, "EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Responses.IdentityResourceResponse": {"type": "object", "properties": {"id": {"type": "string", "description": "The primary key of the resource.", "format": "uuid"}, "name": {"type": "string", "description": "The unique name of the resource.", "nullable": true}, "displayName": {"type": "string", "description": "Display name of the resource.", "nullable": true}, "description": {"type": "string", "description": "Description of the resource.", "nullable": true}, "showInDiscoveryDocument": {"type": "boolean", "description": "Specifies whether this scope is shown in the discovery document. Defaults to true."}, "enabled": {"type": "boolean", "description": "Indicates if this resource is enabled. Defaults to true."}}, "additionalProperties": false}, "EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Responses.IdentityResourceResponsePaginatedItemsViewModel": {"type": "object", "properties": {"pageIndex": {"type": "integer", "format": "int32"}, "pageSize": {"type": "integer", "format": "int32"}, "count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Responses.IdentityResourceResponse"}, "nullable": true}}, "additionalProperties": false}, "EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Responses.Role": {"type": "object", "properties": {"roleName": {"type": "string", "nullable": true}, "isDefault": {"type": "boolean"}}, "additionalProperties": false}, "EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Responses.UserLicense": {"type": "object", "properties": {"subscriptionTenantId": {"type": "string", "description": "The Tenant Id the subscription belongs to", "nullable": true}, "isTenantSubscribed": {"type": "boolean", "description": "The Tenant has a subscription license for this application"}, "tenantSubscriptionId": {"type": "string", "description": "The Tenant subscription Id", "nullable": true}, "tenantSubscriptionStartDateTime": {"type": "string", "description": "The Tenant subscription start date", "nullable": true}, "tenantSubscriptionEndDateTime": {"type": "string", "description": "The Tenant subscription end date", "nullable": true}, "tenantSubscriptionActualEndDateTime": {"type": "string", "description": "The Tenant subscription end date", "nullable": true}, "numberOfLicenses": {"type": "integer", "description": "The Tenant's number of licenses", "format": "int32"}, "assignedLicenses": {"type": "integer", "description": "The Tenant's assigned of licenses", "format": "int32"}, "isUserLicensed": {"type": "boolean", "description": "The user is assigned license for this application"}, "applicationTenantId": {"type": "string", "description": "The Tenant this application belongs to", "nullable": true}, "applicationId": {"type": "string", "description": "The application Id of the application for license", "nullable": true}, "applicationName": {"type": "string", "description": "The application Name of the application for license", "nullable": true}, "applicationRole": {"type": "array", "items": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Responses.ApplicationRole"}, "description": "Application role for this user.", "nullable": true}}, "additionalProperties": false}, "EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Responses.UserLicensePaginatedItemsViewModel": {"type": "object", "properties": {"pageIndex": {"type": "integer", "format": "int32"}, "pageSize": {"type": "integer", "format": "int32"}, "count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/EdGraph.HttpAggregators.Management.Api.Controllers.v1.ViewModels.Responses.UserLicense"}, "nullable": true}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.MigrateUpRequest": {"type": "object", "properties": {"migrationCode": {"type": "string", "nullable": true}, "continueOnErrors": {"type": "boolean"}}, "additionalProperties": false}, "EdfiAdminApi.EdfiAdmin.V1.MigrationResult": {"type": "object", "properties": {"messages": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}, "succeeded": {"type": "boolean"}}, "additionalProperties": false}, "IdentityApi.AuthorizationResource.V1.AuthorizationResourceCreatedResponse": {"type": "object", "properties": {"id": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.AuthorizationResource.V1.AuthorizationResourceDeletedResponse": {"type": "object", "properties": {"id": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.AuthorizationResource.V1.AuthorizationResourceResponse": {"type": "object", "properties": {"id": {"type": "string", "nullable": true}, "resourceName": {"type": "string", "nullable": true}, "permissions": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "IdentityApi.AuthorizationResource.V1.AuthorizationResourceUpdatedResponse": {"type": "object", "properties": {"id": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.AuthorizationResource.V1.CreateAuthorizationResourceRequest": {"type": "object", "properties": {"resourceName": {"type": "string", "nullable": true}, "permissions": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "IdentityApi.AuthorizationResource.V1.GetAuthorizationResourcesResponse": {"type": "object", "properties": {"pageIndex": {"type": "integer", "format": "int32"}, "pageSize": {"type": "integer", "format": "int32"}, "count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/IdentityApi.AuthorizationResource.V1.AuthorizationResourceResponse"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "IdentityApi.AuthorizationResource.V1.UpdateAuthorizationResourceRequest": {"type": "object", "properties": {"id": {"type": "string", "nullable": true}, "resourceName": {"type": "string", "nullable": true}, "permissions": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "IdentityApi.Client.V1.AccessTokenType": {"enum": ["Jwt", "Reference"], "type": "string"}, "IdentityApi.Client.V1.Claim": {"type": "object", "properties": {"type": {"type": "string", "nullable": true}, "value": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.Client.V1.ClientCreatedResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "applicationId": {"type": "string", "nullable": true}, "clientId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.Client.V1.ClientListResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "applicationId": {"type": "string", "nullable": true}, "clientId": {"type": "string", "nullable": true}, "clientName": {"type": "string", "nullable": true}, "clientUri": {"type": "string", "nullable": true}, "enabled": {"type": "boolean"}, "createdBy": {"type": "string", "nullable": true}, "createdDateTime": {"type": "string", "nullable": true}, "lastModifiedBy": {"type": "string", "nullable": true}, "lastModifiedDateTime": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.Client.V1.ClientListResponsePaginatedItemsViewModel": {"type": "object", "properties": {"pageIndex": {"type": "integer", "format": "int32"}, "pageSize": {"type": "integer", "format": "int32"}, "count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/IdentityApi.Client.V1.ClientListResponse"}, "nullable": true}}, "additionalProperties": false}, "IdentityApi.Client.V1.ClientProfileResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "applicationId": {"type": "string", "nullable": true}, "clientId": {"type": "string", "nullable": true}, "clientName": {"type": "string", "nullable": true}, "description": {"type": "string", "nullable": true}, "clientUri": {"type": "string", "nullable": true}, "logoUri": {"type": "string", "nullable": true}, "enabled": {"type": "boolean"}, "accessTokenType": {"$ref": "#/components/schemas/IdentityApi.Client.V1.AccessTokenType"}, "tokenUsage": {"$ref": "#/components/schemas/IdentityApi.Client.V1.TokenUsage"}, "refreshTokenExpiration": {"$ref": "#/components/schemas/IdentityApi.Client.V1.TokenExpiration"}, "enableLocalLogin": {"type": "boolean"}, "allowOfflineAccess": {"type": "boolean"}, "allowAccessTokensViaBrowser": {"type": "boolean"}, "updateAccessTokenClaimsOnRefresh": {"type": "boolean"}, "alwaysIncludeUserClaimsInIdToken": {"type": "boolean"}, "identityTokenLifetime": {"type": "integer", "format": "int32"}, "accessTokenLifetime": {"type": "integer", "format": "int32"}, "authorizationCodeLifetime": {"type": "integer", "format": "int32"}, "absoluteRefreshTokenLifetime": {"type": "integer", "format": "int32"}, "slidingRefreshTokenLifetime": {"type": "integer", "format": "int32"}, "requireClientSecret": {"type": "boolean"}, "requireConsent": {"type": "boolean"}, "allowedScopes": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}, "allowedCorsOrigins": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}, "allowedGrantTypes": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}, "identityProviderRestrictions": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}, "redirectUris": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}, "postLogoutRedirectUris": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}, "clientSecrets": {"type": "array", "items": {"$ref": "#/components/schemas/IdentityApi.Client.V1.Secret"}, "nullable": true, "readOnly": true}, "claims": {"type": "array", "items": {"$ref": "#/components/schemas/IdentityApi.Client.V1.Claim"}, "nullable": true, "readOnly": true}, "requirePkce": {"type": "boolean"}, "createdBy": {"type": "string", "nullable": true}, "createdDateTime": {"type": "string", "nullable": true}, "lastModifiedBy": {"type": "string", "nullable": true}, "lastModifiedDateTime": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.Client.V1.ClientSecretRegeneratedResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "applicationId": {"type": "string", "nullable": true}, "clientId": {"type": "string", "nullable": true}, "secretValue": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.Client.V1.CreateClientRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "applicationId": {"type": "string", "nullable": true}, "clientId": {"type": "string", "nullable": true}, "clientName": {"type": "string", "nullable": true}, "description": {"type": "string", "nullable": true}, "clientUri": {"type": "string", "nullable": true}, "logoUri": {"type": "string", "nullable": true}, "enabled": {"type": "boolean"}, "accessTokenType": {"$ref": "#/components/schemas/IdentityApi.Client.V1.AccessTokenType"}, "tokenUsage": {"$ref": "#/components/schemas/IdentityApi.Client.V1.TokenUsage"}, "refreshTokenExpiration": {"$ref": "#/components/schemas/IdentityApi.Client.V1.TokenExpiration"}, "enableLocalLogin": {"type": "boolean"}, "allowOfflineAccess": {"type": "boolean"}, "allowAccessTokensViaBrowser": {"type": "boolean"}, "updateAccessTokenClaimsOnRefresh": {"type": "boolean"}, "alwaysIncludeUserClaimsInIdToken": {"type": "boolean"}, "identityTokenLifetime": {"type": "integer", "format": "int32"}, "accessTokenLifetime": {"type": "integer", "format": "int32"}, "authorizationCodeLifetime": {"type": "integer", "format": "int32"}, "absoluteRefreshTokenLifetime": {"type": "integer", "format": "int32"}, "slidingRefreshTokenLifetime": {"type": "integer", "format": "int32"}, "requireClientSecret": {"type": "boolean"}, "requireConsent": {"type": "boolean"}, "allowedScopes": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}, "allowedCorsOrigins": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}, "allowedGrantTypes": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}, "identityProviderRestrictions": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}, "redirectUris": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}, "postLogoutRedirectUris": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}, "secret": {"type": "string", "nullable": true}, "claims": {"type": "array", "items": {"$ref": "#/components/schemas/IdentityApi.Client.V1.Claim"}, "nullable": true, "readOnly": true}, "requirePkce": {"type": "boolean"}}, "additionalProperties": false}, "IdentityApi.Client.V1.RegenerateClientSecretRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "applicationId": {"type": "string", "nullable": true}, "clientId": {"type": "string", "nullable": true}, "secret": {"type": "string", "nullable": true}, "autoGeneratedSecret": {"type": "boolean"}}, "additionalProperties": false}, "IdentityApi.Client.V1.Secret": {"type": "object", "properties": {"type": {"type": "string", "nullable": true}, "value": {"type": "string", "nullable": true}, "description": {"type": "string", "nullable": true}, "expiration": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.Client.V1.TokenExpiration": {"enum": ["Sliding", "Absolute"], "type": "string"}, "IdentityApi.Client.V1.TokenUsage": {"enum": ["ReUse", "OneTimeOnly"], "type": "string"}, "IdentityApi.Client.V1.UpdateClientRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "applicationId": {"type": "string", "nullable": true}, "clientId": {"type": "string", "nullable": true}, "clientName": {"type": "string", "nullable": true}, "description": {"type": "string", "nullable": true}, "clientUri": {"type": "string", "nullable": true}, "logoUri": {"type": "string", "nullable": true}, "enabled": {"type": "boolean"}, "accessTokenType": {"$ref": "#/components/schemas/IdentityApi.Client.V1.AccessTokenType"}, "tokenUsage": {"$ref": "#/components/schemas/IdentityApi.Client.V1.TokenUsage"}, "refreshTokenExpiration": {"$ref": "#/components/schemas/IdentityApi.Client.V1.TokenExpiration"}, "enableLocalLogin": {"type": "boolean"}, "allowOfflineAccess": {"type": "boolean"}, "allowAccessTokensViaBrowser": {"type": "boolean"}, "updateAccessTokenClaimsOnRefresh": {"type": "boolean"}, "alwaysIncludeUserClaimsInIdToken": {"type": "boolean"}, "identityTokenLifetime": {"type": "integer", "format": "int32"}, "accessTokenLifetime": {"type": "integer", "format": "int32"}, "authorizationCodeLifetime": {"type": "integer", "format": "int32"}, "absoluteRefreshTokenLifetime": {"type": "integer", "format": "int32"}, "slidingRefreshTokenLifetime": {"type": "integer", "format": "int32"}, "requireClientSecret": {"type": "boolean"}, "requireConsent": {"type": "boolean"}, "allowedScopes": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}, "allowedCorsOrigins": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}, "allowedGrantTypes": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}, "identityProviderRestrictions": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}, "redirectUris": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}, "postLogoutRedirectUris": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}, "claims": {"type": "array", "items": {"$ref": "#/components/schemas/IdentityApi.Client.V1.Claim"}, "nullable": true, "readOnly": true}, "requirePkce": {"type": "boolean"}}, "additionalProperties": false}, "IdentityApi.ClientSettingsType.V1.ClientSettingsTypeCreatedResponse": {"type": "object", "properties": {"id": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.ClientSettingsType.V1.ClientSettingsTypeResponse": {"type": "object", "properties": {"id": {"type": "string", "nullable": true}, "clientId": {"type": "string", "nullable": true}, "code": {"type": "string", "nullable": true}, "dataType": {"type": "string", "nullable": true}, "order": {"type": "integer", "format": "int32"}, "hidden": {"type": "boolean"}, "htmlElement": {"type": "string", "description": "Html attributes", "nullable": true}, "label": {"type": "string", "nullable": true}, "inputType": {"type": "string", "nullable": true}, "defaultValue": {"type": "string", "nullable": true}, "minValue": {"type": "integer", "format": "int32", "nullable": true}, "maxValue": {"type": "integer", "format": "int32", "nullable": true}, "maxLength": {"type": "integer", "format": "int32", "nullable": true}, "options": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}, "createdBy": {"type": "string", "nullable": true}, "createdDateTime": {"type": "string", "nullable": true}, "lastModifiedBy": {"type": "string", "nullable": true}, "lastModifiedDateTime": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.ClientSettingsType.V1.ClientSettingsTypeUpdatedResponse": {"type": "object", "properties": {"id": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.ClientSettingsType.V1.CreateClientSettingsTypeRequest": {"type": "object", "properties": {"clientId": {"type": "string", "nullable": true}, "code": {"type": "string", "nullable": true}, "dataType": {"type": "string", "nullable": true}, "order": {"type": "integer", "format": "int32"}, "hidden": {"type": "boolean"}, "htmlElement": {"type": "string", "description": "Html attributes", "nullable": true}, "label": {"type": "string", "nullable": true}, "inputType": {"type": "string", "nullable": true}, "defaultValue": {"type": "string", "nullable": true}, "minValue": {"type": "integer", "format": "int32", "nullable": true}, "maxValue": {"type": "integer", "format": "int32", "nullable": true}, "maxLength": {"type": "integer", "format": "int32", "nullable": true}, "options": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "IdentityApi.ClientSettingsType.V1.GetClientSettingsTypesResponse": {"type": "object", "properties": {"pageIndex": {"type": "integer", "format": "int32"}, "pageSize": {"type": "integer", "format": "int32"}, "count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/IdentityApi.ClientSettingsType.V1.ClientSettingsTypeResponse"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "IdentityApi.ClientSettingsType.V1.UpdateClientSettingsTypeRequest": {"type": "object", "properties": {"id": {"type": "string", "nullable": true}, "clientId": {"type": "string", "nullable": true}, "code": {"type": "string", "nullable": true}, "dataType": {"type": "string", "nullable": true}, "order": {"type": "integer", "format": "int32"}, "hidden": {"type": "boolean"}, "htmlElement": {"type": "string", "description": "Html attributes", "nullable": true}, "label": {"type": "string", "nullable": true}, "inputType": {"type": "string", "nullable": true}, "defaultValue": {"type": "string", "nullable": true}, "minValue": {"type": "integer", "format": "int32", "nullable": true}, "maxValue": {"type": "integer", "format": "int32", "nullable": true}, "maxLength": {"type": "integer", "format": "int32", "nullable": true}, "options": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "IdentityApi.Invitation.V1.AssignLicenseRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "subscriptionId": {"type": "string", "nullable": true}, "applicationId": {"type": "string", "nullable": true}, "userId": {"type": "string", "nullable": true}, "roles": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "IdentityApi.Invitation.V1.InvitationResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "invitationId": {"type": "string", "nullable": true}, "firstName": {"type": "string", "nullable": true}, "lastName": {"type": "string", "nullable": true}, "email": {"type": "string", "nullable": true}, "role": {"type": "string", "nullable": true}, "invitationToken": {"type": "string", "nullable": true}, "invitationStatus": {"$ref": "#/components/schemas/IdentityApi.Invitation.V1.InvitationStatus"}, "invitationSentDateTime": {"type": "string", "nullable": true}, "assignLicenseRequests": {"type": "array", "items": {"$ref": "#/components/schemas/IdentityApi.Invitation.V1.AssignLicenseRequest"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "IdentityApi.Invitation.V1.InvitationSentResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "invitationId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.Invitation.V1.InvitationStatus": {"enum": ["Unknown", "Sent", "Accepted"], "type": "string"}, "IdentityApi.Role.V1.CreateRoleRequest": {"type": "object", "properties": {"name": {"type": "string", "nullable": true}, "permissions": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "IdentityApi.Role.V1.GetRolesResponse": {"type": "object", "properties": {"pageIndex": {"type": "integer", "format": "int32"}, "pageSize": {"type": "integer", "format": "int32"}, "count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/IdentityApi.Role.V1.RoleResponse"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "IdentityApi.Role.V1.RoleCreatedResponse": {"type": "object", "properties": {"name": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.Role.V1.RoleDeletedResponse": {"type": "object", "properties": {"name": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.Role.V1.RoleResponse": {"type": "object", "properties": {"name": {"type": "string", "nullable": true}, "permissions": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "IdentityApi.Role.V1.RoleUpdatedResponse": {"type": "object", "properties": {"name": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.Role.V1.UpdateRoleRequest": {"type": "object", "properties": {"name": {"type": "string", "nullable": true}, "permissions": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "IdentityApi.User.V1.AssignLicenseBulkRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "userId": {"type": "string", "nullable": true}, "assignLicenseRequests": {"type": "array", "items": {"$ref": "#/components/schemas/IdentityApi.User.V1.AssignLicenseRequest"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "IdentityApi.User.V1.AssignLicenseRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "subscriptionId": {"type": "string", "nullable": true}, "applicationId": {"type": "string", "nullable": true}, "userId": {"type": "string", "nullable": true}, "roles": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "IdentityApi.User.V1.CreateLocalUserRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "userName": {"type": "string", "nullable": true}, "email": {"type": "string", "nullable": true}, "firstName": {"type": "string", "nullable": true}, "lastName": {"type": "string", "nullable": true}, "role": {"type": "string", "nullable": true}, "phoneNumber": {"type": "string", "nullable": true}, "lockoutEnabled": {"type": "boolean"}, "password": {"type": "string", "nullable": true}, "autoGeneratedPassword": {"type": "boolean"}, "twoFactorEnabled": {"type": "boolean"}, "assignLicenseRequests": {"type": "array", "items": {"$ref": "#/components/schemas/IdentityApi.User.V1.AssignLicenseRequest"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "IdentityApi.User.V1.DisableUserBrowserDebugRequest": {"type": "object", "properties": {"userId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.User.V1.EnableUserBrowserDebugRequest": {"type": "object", "properties": {"userId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.User.V1.LicenseAssignedBulkResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "userId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.User.V1.LicenseAssignedResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "subscriptionId": {"type": "string", "nullable": true}, "applicationId": {"type": "string", "nullable": true}, "userId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.User.V1.LicenseRevokedBulkResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "userId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.User.V1.LicenseRevokedResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "subscriptionId": {"type": "string", "nullable": true}, "applicationId": {"type": "string", "nullable": true}, "userId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.User.V1.LocalUserCreatedResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "userId": {"type": "string", "nullable": true}, "password": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.User.V1.Preference": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "clientId": {"type": "string", "nullable": true}, "code": {"type": "string", "nullable": true}, "value": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.User.V1.RevokeLicenseBulkRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "userId": {"type": "string", "nullable": true}, "revokeLicenseRequests": {"type": "array", "items": {"$ref": "#/components/schemas/IdentityApi.User.V1.RevokeLicenseRequest"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "IdentityApi.User.V1.RevokeLicenseRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "subscriptionId": {"type": "string", "nullable": true}, "applicationId": {"type": "string", "nullable": true}, "userId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.User.V1.Tenant": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "status": {"$ref": "#/components/schemas/IdentityApi.User.V1.TenantStatus"}, "roles": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "IdentityApi.User.V1.TenantStatus": {"enum": ["Unknown", "Active", "Inactive"], "type": "string"}, "IdentityApi.User.V1.UpdateUserRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "userId": {"type": "string", "nullable": true}, "role": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.User.V1.UserBrowserDebugDisabledResponse": {"type": "object", "properties": {"userId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.User.V1.UserBrowserDebugEnabledResponse": {"type": "object", "properties": {"userId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.User.V1.UserExtension": {"type": "object", "properties": {"code": {"type": "string", "nullable": true}, "data": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.User.V1.UserListResponse": {"type": "object", "properties": {"userId": {"type": "string", "nullable": true}, "userName": {"type": "string", "nullable": true}, "email": {"type": "string", "nullable": true}, "firstName": {"type": "string", "nullable": true}, "lastName": {"type": "string", "nullable": true}, "tenantCount": {"type": "integer", "format": "int32"}, "tenants": {"type": "array", "items": {"$ref": "#/components/schemas/IdentityApi.User.V1.Tenant"}, "nullable": true, "readOnly": true}, "createdBy": {"type": "string", "nullable": true}, "createdDateTime": {"type": "string", "nullable": true}, "lastModifiedBy": {"type": "string", "nullable": true}, "lastModifiedDateTime": {"type": "string", "nullable": true}, "logins": {"type": "array", "items": {"$ref": "#/components/schemas/IdentityApi.User.V1.UserLogin"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "IdentityApi.User.V1.UserListResponsePaginatedItemsViewModel": {"type": "object", "properties": {"pageIndex": {"type": "integer", "format": "int32"}, "pageSize": {"type": "integer", "format": "int32"}, "count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/IdentityApi.User.V1.UserListResponse"}, "nullable": true}}, "additionalProperties": false}, "IdentityApi.User.V1.UserLogin": {"type": "object", "properties": {"loginProvider": {"type": "string", "nullable": true}, "providerDisplayName": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.User.V1.UserProfileResponse": {"type": "object", "properties": {"userId": {"type": "string", "nullable": true}, "userName": {"type": "string", "nullable": true}, "email": {"type": "string", "nullable": true}, "firstName": {"type": "string", "nullable": true}, "lastName": {"type": "string", "nullable": true}, "phoneNumber": {"type": "string", "nullable": true}, "lockoutEnabled": {"type": "string", "nullable": true}, "tenants": {"type": "array", "items": {"$ref": "#/components/schemas/IdentityApi.User.V1.Tenant"}, "nullable": true, "readOnly": true}, "preferences": {"type": "array", "items": {"$ref": "#/components/schemas/IdentityApi.User.V1.Preference"}, "nullable": true, "readOnly": true}, "createdBy": {"type": "string", "nullable": true}, "createdDateTime": {"type": "string", "nullable": true}, "lastModifiedBy": {"type": "string", "nullable": true}, "lastModifiedDateTime": {"type": "string", "nullable": true}, "browserDebugEnabled": {"type": "boolean"}, "extensions": {"type": "array", "items": {"$ref": "#/components/schemas/IdentityApi.User.V1.UserExtension"}, "nullable": true, "readOnly": true}, "logins": {"type": "array", "items": {"$ref": "#/components/schemas/IdentityApi.User.V1.UserLogin"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "IdentityApi.User.V1.UserTenantStatusProfile": {"type": "object", "properties": {"email": {"type": "string", "nullable": true}, "username": {"type": "string", "nullable": true}, "firstName": {"type": "string", "nullable": true}, "lastName": {"type": "string", "nullable": true}, "status": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.User.V1.UserUpdatedResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "userId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.UserExtensionType.V1.CreateUserExtensionTypeRequest": {"type": "object", "properties": {"code": {"type": "string", "nullable": true}, "dataType": {"type": "string", "nullable": true}, "order": {"type": "integer", "format": "int32"}, "hidden": {"type": "boolean"}, "htmlElement": {"type": "string", "description": "Html attributes", "nullable": true}, "label": {"type": "string", "nullable": true}, "inputType": {"type": "string", "nullable": true}, "defaultValue": {"type": "string", "nullable": true}, "minValue": {"type": "integer", "format": "int32", "nullable": true}, "maxValue": {"type": "integer", "format": "int32", "nullable": true}, "maxLength": {"type": "integer", "format": "int32", "nullable": true}}, "additionalProperties": false}, "IdentityApi.UserExtensionType.V1.GetUserExtensionTypesResponse": {"type": "object", "properties": {"pageIndex": {"type": "integer", "format": "int32"}, "pageSize": {"type": "integer", "format": "int32"}, "count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/IdentityApi.UserExtensionType.V1.UserExtensionTypeResponse"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "IdentityApi.UserExtensionType.V1.UpdateUserExtensionTypeRequest": {"type": "object", "properties": {"id": {"type": "string", "nullable": true}, "code": {"type": "string", "nullable": true}, "dataType": {"type": "string", "nullable": true}, "order": {"type": "integer", "format": "int32"}, "hidden": {"type": "boolean"}, "htmlElement": {"type": "string", "description": "Html attributes", "nullable": true}, "label": {"type": "string", "nullable": true}, "inputType": {"type": "string", "nullable": true}, "defaultValue": {"type": "string", "nullable": true}, "minValue": {"type": "integer", "format": "int32", "nullable": true}, "maxValue": {"type": "integer", "format": "int32", "nullable": true}, "maxLength": {"type": "integer", "format": "int32", "nullable": true}}, "additionalProperties": false}, "IdentityApi.UserExtensionType.V1.UserExtensionTypeCreatedResponse": {"type": "object", "properties": {"id": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.UserExtensionType.V1.UserExtensionTypeResponse": {"type": "object", "properties": {"id": {"type": "string", "nullable": true}, "code": {"type": "string", "nullable": true}, "dataType": {"type": "string", "nullable": true}, "order": {"type": "integer", "format": "int32"}, "hidden": {"type": "boolean"}, "htmlElement": {"type": "string", "description": "Html attributes", "nullable": true}, "label": {"type": "string", "nullable": true}, "inputType": {"type": "string", "nullable": true}, "defaultValue": {"type": "string", "nullable": true}, "minValue": {"type": "integer", "format": "int32", "nullable": true}, "maxValue": {"type": "integer", "format": "int32", "nullable": true}, "maxLength": {"type": "integer", "format": "int32", "nullable": true}, "createdBy": {"type": "string", "nullable": true}, "createdDateTime": {"type": "string", "nullable": true}, "lastModifiedBy": {"type": "string", "nullable": true}, "lastModifiedDateTime": {"type": "string", "nullable": true}}, "additionalProperties": false}, "IdentityApi.UserExtensionType.V1.UserExtensionTypeUpdatedResponse": {"type": "object", "properties": {"id": {"type": "string", "nullable": true}}, "additionalProperties": false}, "Microsoft.AspNetCore.Mvc.ProblemDetails": {"type": "object", "properties": {"type": {"type": "string", "nullable": true}, "title": {"type": "string", "nullable": true}, "status": {"type": "integer", "format": "int32", "nullable": true}, "detail": {"type": "string", "nullable": true}, "instance": {"type": "string", "nullable": true}}, "additionalProperties": {}}, "Microsoft.AspNetCore.Mvc.ValidationProblemDetails": {"type": "object", "properties": {"errors": {"type": "object", "additionalProperties": {"type": "array", "items": {"type": "string"}}, "nullable": true}, "type": {"type": "string", "nullable": true}, "title": {"type": "string", "nullable": true}, "status": {"type": "integer", "format": "int32", "nullable": true}, "detail": {"type": "string", "nullable": true}, "instance": {"type": "string", "nullable": true}}, "additionalProperties": {}}, "RegistrationApi.Registration.V1.ApprovalStatus": {"enum": ["Unknown", "Pending", "Approved", "Denied", "Failed", "Completed"], "type": "string"}, "RegistrationApi.Registration.V1.AzureSubscription": {"type": "object", "properties": {"subscriptionId": {"type": "string", "nullable": true}, "subscriptionStoragePath": {"type": "string", "nullable": true}, "subscriptionName": {"type": "string", "nullable": true}, "beneficiaryEmail": {"type": "string", "nullable": true}, "purchaserEmail": {"type": "string", "nullable": true}, "applicationIds": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}, "tenantId": {"type": "string", "nullable": true}, "isFreeTrial": {"type": "boolean"}}, "additionalProperties": false}, "RegistrationApi.Registration.V1.CreateTenantRegistrationRequest": {"type": "object", "properties": {"tenantType": {"$ref": "#/components/schemas/RegistrationApi.Registration.V1.TenantType"}, "registrationId": {"type": "string", "nullable": true}, "firstName": {"type": "string", "nullable": true}, "lastName": {"type": "string", "nullable": true}, "email": {"type": "string", "nullable": true}, "state": {"type": "string", "nullable": true}, "organizationIdentifier": {"type": "string", "nullable": true}, "organizationName": {"type": "string", "nullable": true}}, "additionalProperties": false}, "RegistrationApi.Registration.V1.DeleteTenantRegistrationRequest": {"type": "object", "properties": {"registrationId": {"type": "string", "nullable": true}, "reason": {"type": "string", "nullable": true}}, "additionalProperties": false}, "RegistrationApi.Registration.V1.DenyTenantRegistrationRequest": {"type": "object", "properties": {"registrationId": {"type": "string", "nullable": true}, "reason": {"type": "string", "nullable": true}}, "additionalProperties": false}, "RegistrationApi.Registration.V1.RegistrationListResponse": {"type": "object", "properties": {"registrationId": {"type": "string", "nullable": true}, "tenantType": {"$ref": "#/components/schemas/RegistrationApi.Registration.V1.TenantType"}, "firstName": {"type": "string", "nullable": true}, "lastName": {"type": "string", "nullable": true}, "email": {"type": "string", "nullable": true}, "organizationName": {"type": "string", "nullable": true}, "state": {"type": "string", "nullable": true}, "approvalStatus": {"$ref": "#/components/schemas/RegistrationApi.Registration.V1.ApprovalStatus"}, "submittedBy": {"$ref": "#/components/schemas/RegistrationApi.Registration.V1.SubmittedBy"}, "createdBy": {"type": "string", "nullable": true}, "createdDateTime": {"type": "string", "nullable": true}, "lastModifiedBy": {"type": "string", "nullable": true}, "lastModifiedDateTime": {"type": "string", "nullable": true}, "applicationIds": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}, "azureSubscriptionId": {"type": "string", "nullable": true}, "azureSubscriptionStoragePath": {"type": "string", "nullable": true}, "registrationSource": {"type": "string", "nullable": true}}, "additionalProperties": false}, "RegistrationApi.Registration.V1.RegistrationListResponsePaginatedItemsViewModel": {"type": "object", "properties": {"pageIndex": {"type": "integer", "format": "int32"}, "pageSize": {"type": "integer", "format": "int32"}, "count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/RegistrationApi.Registration.V1.RegistrationListResponse"}, "nullable": true}}, "additionalProperties": false}, "RegistrationApi.Registration.V1.RegistrationProfileResponse": {"type": "object", "properties": {"registrationId": {"type": "string", "nullable": true}, "tenantType": {"$ref": "#/components/schemas/RegistrationApi.Registration.V1.TenantType"}, "firstName": {"type": "string", "nullable": true}, "lastName": {"type": "string", "nullable": true}, "email": {"type": "string", "nullable": true}, "state": {"type": "string", "nullable": true}, "organizationIdentifier": {"type": "string", "nullable": true}, "organizationName": {"type": "string", "nullable": true}, "approvalStatus": {"$ref": "#/components/schemas/RegistrationApi.Registration.V1.ApprovalStatus"}, "submittedBy": {"$ref": "#/components/schemas/RegistrationApi.Registration.V1.SubmittedBy"}, "reasonDenied": {"type": "string", "nullable": true}, "createdBy": {"type": "string", "nullable": true}, "createdDateTime": {"type": "string", "nullable": true}, "lastModifiedBy": {"type": "string", "nullable": true}, "lastModifiedDateTime": {"type": "string", "nullable": true}, "applicationIds": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}, "azureSubscriptionId": {"type": "string", "nullable": true}, "azureSubscriptionStoragePath": {"type": "string", "nullable": true}, "registrationSource": {"type": "string", "nullable": true}}, "additionalProperties": false}, "RegistrationApi.Registration.V1.SubmittedBy": {"enum": ["Unknown", "User", "EdGraph"], "type": "string"}, "RegistrationApi.Registration.V1.TenantRegistrationCreatedResponse": {"type": "object", "properties": {"registrationId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "RegistrationApi.Registration.V1.TenantRegistrationUpdatedResponse": {"type": "object", "properties": {"registrationId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "RegistrationApi.Registration.V1.TenantType": {"enum": ["Unknown", "Internal", "State", "Collaborative", "District", "Partner", "Teacher", "Student"], "type": "string"}, "RegistrationApi.Registration.V1.UpdateTenantRegistrationRequest": {"type": "object", "properties": {"registrationId": {"type": "string", "nullable": true}, "tenantType": {"$ref": "#/components/schemas/RegistrationApi.Registration.V1.TenantType"}, "firstName": {"type": "string", "nullable": true}, "lastName": {"type": "string", "nullable": true}, "email": {"type": "string", "nullable": true}, "state": {"type": "string", "nullable": true}, "organizationIdentifier": {"type": "string", "nullable": true}, "organizationName": {"type": "string", "nullable": true}}, "additionalProperties": false}, "TenantApi.Tenant.V1.ActivateSubscriptionRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "subscriptionId": {"type": "string", "nullable": true}, "applicationId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "TenantApi.Tenant.V1.CreateDomainRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "domainName": {"type": "string", "nullable": true}, "domainStatus": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.DomainStatus"}}, "additionalProperties": false}, "TenantApi.Tenant.V1.CreateSubscriptionRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "subscriptionId": {"type": "string", "nullable": true}, "applicationId": {"type": "string", "nullable": true}, "startDateTime": {"type": "string", "nullable": true}, "endDateTime": {"type": "string", "nullable": true}, "gracePeriod": {"type": "integer", "format": "int32"}, "numberOfLicenses": {"type": "integer", "format": "int32"}, "assignedLicenses": {"type": "integer", "format": "int32"}, "licenseType": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.LicenseType"}, "subscriptionStatus": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.SubscriptionStatus"}, "autoAssign": {"type": "boolean"}}, "additionalProperties": false}, "TenantApi.Tenant.V1.CreateTenantRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "tenantType": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.TenantType"}, "organizationIdentifier": {"type": "string", "nullable": true}, "organizationName": {"type": "string", "nullable": true}, "state": {"type": "string", "nullable": true}, "isDemo": {"type": "boolean"}, "enforceMfa": {"type": "boolean"}, "tenantStatus": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.TenantStatus"}, "domains": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}, "identityProviders": {"type": "array", "items": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.TenantIdentityProviders"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "TenantApi.Tenant.V1.DeactivateSubscriptionRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "subscriptionId": {"type": "string", "nullable": true}, "applicationId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "TenantApi.Tenant.V1.DeleteSubscriptionRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "subscriptionId": {"type": "string", "nullable": true}, "applicationId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "TenantApi.Tenant.V1.DeleteTenantRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "reasonDeleted": {"type": "string", "nullable": true}}, "additionalProperties": false}, "TenantApi.Tenant.V1.DomainCreatedResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "domainName": {"type": "string", "nullable": true}}, "additionalProperties": false}, "TenantApi.Tenant.V1.DomainListResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "domainName": {"type": "string", "nullable": true}, "domainStatus": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.DomainStatus"}, "createdBy": {"type": "string", "nullable": true}, "createdDateTime": {"type": "string", "nullable": true}, "lastModifiedBy": {"type": "string", "nullable": true}, "lastModifiedDateTime": {"type": "string", "nullable": true}}, "additionalProperties": false}, "TenantApi.Tenant.V1.DomainProfileResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "domainName": {"type": "string", "nullable": true}, "domainStatus": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.DomainStatus"}, "createdBy": {"type": "string", "nullable": true}, "createdDateTime": {"type": "string", "nullable": true}, "lastModifiedBy": {"type": "string", "nullable": true}, "lastModifiedDateTime": {"type": "string", "nullable": true}}, "additionalProperties": false}, "TenantApi.Tenant.V1.DomainStatus": {"enum": ["Unknown", "Unverified", "Verified", "Rejected", "Error"], "type": "string"}, "TenantApi.Tenant.V1.DomainUpdatedResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "oldDomainName": {"type": "string", "nullable": true}, "newDomainName": {"type": "string", "nullable": true}, "domainStatus": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.DomainStatus"}}, "additionalProperties": false}, "TenantApi.Tenant.V1.DomainVerifiedResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "domainName": {"type": "string", "nullable": true}, "domainStatus": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.DomainStatus"}}, "additionalProperties": false}, "TenantApi.Tenant.V1.LicenseType": {"enum": ["Unknown", "Full", "Trial"], "type": "string"}, "TenantApi.Tenant.V1.Onboarding": {"type": "object", "properties": {"status": {"type": "string", "nullable": true}, "progressPercentage": {"type": "number", "format": "float"}, "totalSteps": {"type": "integer", "format": "int32"}, "lastCompletedStep": {"type": "integer", "format": "int32", "nullable": true}, "startedAt": {"type": "string", "nullable": true}, "completedAt": {"type": "string", "nullable": true}, "steps": {"type": "array", "items": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.OnboardingStep"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "TenantApi.Tenant.V1.OnboardingStep": {"type": "object", "properties": {"number": {"type": "integer", "format": "int32"}, "description": {"type": "string", "nullable": true}, "status": {"type": "string", "nullable": true}, "startedAt": {"type": "string", "nullable": true}, "completedAt": {"type": "string", "nullable": true}}, "additionalProperties": false}, "TenantApi.Tenant.V1.Organization": {"type": "object", "properties": {"identifierType": {"type": "string", "nullable": true}, "identifierValue": {"type": "string", "nullable": true}, "discriminator": {"type": "string", "nullable": true}, "source": {"type": "string", "nullable": true}, "includeInJwt": {"type": "boolean"}}, "additionalProperties": false}, "TenantApi.Tenant.V1.RejectSubscriptionRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "subscriptionId": {"type": "string", "nullable": true}, "applicationId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "TenantApi.Tenant.V1.SubscriptionActivatedResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "subscriptionId": {"type": "string", "nullable": true}, "applicationId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "TenantApi.Tenant.V1.SubscriptionCreatedResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "subscriptionId": {"type": "string", "nullable": true}, "applicationId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "TenantApi.Tenant.V1.SubscriptionDeactivatedResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "subscriptionId": {"type": "string", "nullable": true}, "applicationId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "TenantApi.Tenant.V1.SubscriptionListResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "subscriptionId": {"type": "string", "nullable": true}, "applicationId": {"type": "string", "nullable": true}, "startDateTime": {"type": "string", "nullable": true}, "endDateTime": {"type": "string", "nullable": true}, "actualEndDateTime": {"type": "string", "nullable": true}, "gracePeriod": {"type": "integer", "format": "int32"}, "numberOfLicenses": {"type": "integer", "format": "int32"}, "assignedLicenses": {"type": "integer", "format": "int32"}, "maxAssignedLicenses": {"type": "integer", "format": "int32"}, "lastMaxAssignedLicensesDateTime": {"type": "string", "nullable": true}, "licenseType": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.LicenseType"}, "subscriptionStatus": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.SubscriptionStatus"}, "autoAssign": {"type": "boolean"}, "createdBy": {"type": "string", "nullable": true}, "createdDateTime": {"type": "string", "nullable": true}, "lastModifiedBy": {"type": "string", "nullable": true}, "lastModifiedDateTime": {"type": "string", "nullable": true}}, "additionalProperties": false}, "TenantApi.Tenant.V1.SubscriptionListResponsePaginatedItemsViewModel": {"type": "object", "properties": {"pageIndex": {"type": "integer", "format": "int32"}, "pageSize": {"type": "integer", "format": "int32"}, "count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.SubscriptionListResponse"}, "nullable": true}}, "additionalProperties": false}, "TenantApi.Tenant.V1.SubscriptionProfileResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "subscriptionId": {"type": "string", "nullable": true}, "applicationId": {"type": "string", "nullable": true}, "startDateTime": {"type": "string", "nullable": true}, "endDateTime": {"type": "string", "nullable": true}, "actualEndDateTime": {"type": "string", "nullable": true}, "gracePeriod": {"type": "integer", "format": "int32"}, "numberOfLicenses": {"type": "integer", "format": "int32"}, "assignedLicenses": {"type": "integer", "format": "int32"}, "maxAssignedLicenses": {"type": "integer", "format": "int32"}, "lastMaxAssignedLicensesDateTime": {"type": "string", "nullable": true}, "licenseType": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.LicenseType"}, "subscriptionStatus": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.SubscriptionStatus"}, "autoAssign": {"type": "boolean"}, "createdBy": {"type": "string", "nullable": true}, "createdDateTime": {"type": "string", "nullable": true}, "lastModifiedBy": {"type": "string", "nullable": true}, "lastModifiedDateTime": {"type": "string", "nullable": true}}, "additionalProperties": false}, "TenantApi.Tenant.V1.SubscriptionRejectedResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "subscriptionId": {"type": "string", "nullable": true}, "applicationId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "TenantApi.Tenant.V1.SubscriptionStatus": {"enum": ["Unknown", "Active", "Inactive", "Pending", "Rejected"], "type": "string"}, "TenantApi.Tenant.V1.SubscriptionUpdatedResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "subscriptionId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "TenantApi.Tenant.V1.TenantCreatedResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "TenantApi.Tenant.V1.TenantIdentityProviders": {"enum": ["Local", "Aad", "Google", "Adfs"], "type": "string"}, "TenantApi.Tenant.V1.TenantListResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "tenantType": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.TenantType"}, "organizationIdentifier": {"type": "string", "nullable": true}, "organizationName": {"type": "string", "nullable": true}, "state": {"type": "string", "nullable": true}, "tenantStatus": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.TenantStatus"}, "isDemo": {"type": "boolean"}, "enforceMfa": {"type": "boolean"}, "subscriptionsMigrated": {"type": "boolean"}, "subscriptions": {"type": "array", "items": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.SubscriptionListResponse"}, "nullable": true, "readOnly": true}, "domains": {"type": "array", "items": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.DomainListResponse"}, "nullable": true, "readOnly": true}, "createdBy": {"type": "string", "nullable": true}, "createdDateTime": {"type": "string", "nullable": true}, "lastModifiedBy": {"type": "string", "nullable": true}, "lastModifiedDateTime": {"type": "string", "nullable": true}, "identityProviders": {"type": "array", "items": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.TenantIdentityProviders"}, "nullable": true, "readOnly": true}, "onboarding": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.Onboarding"}}, "additionalProperties": false}, "TenantApi.Tenant.V1.TenantListResponsePaginatedItemsViewModel": {"type": "object", "properties": {"pageIndex": {"type": "integer", "format": "int32"}, "pageSize": {"type": "integer", "format": "int32"}, "count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.TenantListResponse"}, "nullable": true}}, "additionalProperties": false}, "TenantApi.Tenant.V1.TenantProfileResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "tenantType": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.TenantType"}, "organizationIdentifier": {"type": "string", "nullable": true}, "organizationName": {"type": "string", "nullable": true}, "state": {"type": "string", "nullable": true}, "tenantStatus": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.TenantStatus"}, "isDemo": {"type": "boolean"}, "enforceMfa": {"type": "boolean"}, "subscriptionsMigrated": {"type": "boolean"}, "subscriptions": {"type": "array", "items": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.SubscriptionProfileResponse"}, "nullable": true, "readOnly": true}, "domains": {"type": "array", "items": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.DomainProfileResponse"}, "nullable": true, "readOnly": true}, "createdBy": {"type": "string", "nullable": true}, "createdDateTime": {"type": "string", "nullable": true}, "lastModifiedBy": {"type": "string", "nullable": true}, "lastModifiedDateTime": {"type": "string", "nullable": true}, "identityProviders": {"type": "array", "items": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.TenantIdentityProviders"}, "nullable": true, "readOnly": true}, "onboarding": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.Onboarding"}, "organizations": {"type": "array", "items": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.Organization"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "TenantApi.Tenant.V1.TenantStatus": {"enum": ["Unknown", "Active", "Inactive"], "type": "string"}, "TenantApi.Tenant.V1.TenantType": {"enum": ["Unknown", "Internal", "State", "Collaborative", "District", "Partner", "Teacher", "Student"], "type": "string"}, "TenantApi.Tenant.V1.TenantUpdatedResponse": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}}, "additionalProperties": false}, "TenantApi.Tenant.V1.UpdateDomainRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "oldDomainName": {"type": "string", "nullable": true}, "newDomainName": {"type": "string", "nullable": true}, "domainStatus": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.DomainStatus"}}, "additionalProperties": false}, "TenantApi.Tenant.V1.UpdateSubscriptionRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "subscriptionId": {"type": "string", "nullable": true}, "startDateTime": {"type": "string", "nullable": true}, "endDateTime": {"type": "string", "nullable": true}, "gracePeriod": {"type": "integer", "format": "int32"}, "numberOfLicenses": {"type": "integer", "format": "int32"}, "assignedLicenses": {"type": "integer", "format": "int32"}, "licenseType": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.LicenseType"}, "autoAssign": {"type": "boolean", "description": "SubscriptionStatus SubscriptionStatus = 10;"}}, "additionalProperties": false}, "TenantApi.Tenant.V1.UpdateTenantRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "tenantType": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.TenantType"}, "organizationIdentifier": {"type": "string", "nullable": true}, "organizationName": {"type": "string", "nullable": true}, "state": {"type": "string", "nullable": true}, "isDemo": {"type": "boolean"}, "enforceMfa": {"type": "boolean"}, "tenantStatus": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.TenantStatus"}, "identityProviders": {"type": "array", "items": {"$ref": "#/components/schemas/TenantApi.Tenant.V1.TenantIdentityProviders"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "TenantApi.Tenant.V1.VerifyDomainRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "domainName": {"type": "string", "nullable": true}}, "additionalProperties": false}, "TenantApi.Webhook.V1.CreateWebhookRequest": {"type": "object", "properties": {"tenantId": {"type": "string", "nullable": true}, "name": {"type": "string", "nullable": true}, "url": {"type": "string", "nullable": true}, "secretHeader": {"type": "string", "nullable": true}, "secretValue": {"type": "string", "nullable": true}, "contentType": {"type": "string", "nullable": true}, "eventSubscriptions": {"type": "array", "items": {"$ref": "#/components/schemas/TenantApi.Webhook.V1.WebhookSubscriberResponse"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "TenantApi.Webhook.V1.PaginatedItemsResponse": {"type": "object", "properties": {"pageIndex": {"type": "integer", "format": "int32"}, "pageSize": {"type": "integer", "format": "int32"}, "count": {"type": "integer", "format": "int64"}, "data": {"type": "array", "items": {"$ref": "#/components/schemas/TenantApi.Webhook.V1.WebhookResponse"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "TenantApi.Webhook.V1.UpdateWebhookRequest": {"type": "object", "properties": {"id": {"type": "string", "nullable": true}, "tenantId": {"type": "string", "nullable": true}, "name": {"type": "string", "nullable": true}, "url": {"type": "string", "nullable": true}, "secretHeader": {"type": "string", "nullable": true}, "secretValue": {"type": "string", "nullable": true}, "contentType": {"type": "string", "nullable": true}, "status": {"type": "string", "nullable": true}, "eventSubscriptions": {"type": "array", "items": {"$ref": "#/components/schemas/TenantApi.Webhook.V1.WebhookSubscriberResponse"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "TenantApi.Webhook.V1.WebhookEventsResponse": {"type": "object", "properties": {"eventSubscriptions": {"type": "array", "items": {"$ref": "#/components/schemas/TenantApi.Webhook.V1.WebhookSubscriberResponse"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "TenantApi.Webhook.V1.WebhookIdResponse": {"type": "object", "properties": {"id": {"type": "string", "nullable": true}}, "additionalProperties": false}, "TenantApi.Webhook.V1.WebhookResponse": {"type": "object", "properties": {"id": {"type": "string", "nullable": true}, "tenantId": {"type": "string", "nullable": true}, "createdAt": {"type": "string", "nullable": true}, "createdBy": {"type": "string", "nullable": true}, "updatedAt": {"type": "string", "nullable": true}, "updatedBy": {"type": "string", "nullable": true}, "isDeleted": {"type": "boolean"}, "name": {"type": "string", "nullable": true}, "url": {"type": "string", "nullable": true}, "secretHeader": {"type": "string", "nullable": true}, "secretValue": {"type": "string", "nullable": true}, "contentType": {"type": "string", "nullable": true}, "status": {"type": "string", "nullable": true}, "eventSubscriptions": {"type": "array", "items": {"$ref": "#/components/schemas/TenantApi.Webhook.V1.WebhookSubscriberResponse"}, "nullable": true, "readOnly": true}}, "additionalProperties": false}, "TenantApi.Webhook.V1.WebhookSubscriberResponse": {"type": "object", "properties": {"eventName": {"type": "string", "nullable": true}, "eventVersion": {"type": "string", "nullable": true}, "eventSchema": {"type": "string", "nullable": true}, "groupName": {"type": "string", "nullable": true}, "scope": {"type": "array", "items": {"type": "string"}, "nullable": true, "readOnly": true}}, "additionalProperties": false, "description": "Webhook Subscribers"}, "ValidationsApi.Migrations.V1.MigrateUpRequest": {"type": "object", "properties": {"migrationCode": {"type": "string", "nullable": true}, "continueOnErrors": {"type": "boolean"}}, "additionalProperties": false}}, "securitySchemes": {"oauth2": {"type": "oauth2", "description": "Use bearer token generated from an OpenId server", "flows": {"clientCredentials": {"tokenUrl": "https://login.txedexchange.dev/connect/token", "scopes": {"https://api.edgraph.com/auth/management": "EdGraph Platform - Management Api"}}}}}}, "security": [{"oauth2": ["https://api.edgraph.com/auth/management"]}]}